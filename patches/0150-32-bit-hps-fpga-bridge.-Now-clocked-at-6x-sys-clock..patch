From a21225182fe8677f3ddf2bb4af71908f437eadb0 Mon Sep 17 00:00:00 2001
From: scrameta <scrameta@gmail.com>
Date: Sun, 14 Aug 2022 16:54:14 +0200
Subject: [PATCH 150/150] 32-bit hps-fpga bridge. Now clocked at 6x sys clock.
 Now uses a fifo for writes and pipelined reads. Sadly the pipelined reads are
 not used much, I see a depth of (just) two with native arm memcpy and I have
 not noticed >1 with qemu.

---
 Minimig.sv                                    |   31 +-
 rtl/cpu_wrapper.v                             |   30 +-
 rtl/pll.qip                                   |   33 +-
 rtl/pll.v                                     |    8 +-
 rtl/pll/pll_0002.v                            |    9 +-
 sys/arm_avalon.vhd                            |  341 ++-
 sys/arm_avalon_hw.tcl                         |   17 +-
 sys/arm_regs_avalon.vhd                       |   83 +
 sys/arm_regs_avalon_hw.tcl                    |  134 ++
 sys/fifo_from_hps.qip                         |    5 +
 sys/fifo_from_hps.vhd                         |  201 ++
 sys/fifo_to_hps.qip                           |    5 +
 sys/fifo_to_hps.vhd                           |  201 ++
 sys/hps_fpga_bridge.qsys                      |  103 +-
 sys/hps_fpga_bridge/hps_fpga_bridge.html      |  143 +-
 sys/hps_fpga_bridge/hps_fpga_bridge_bb.v      |   70 +
 sys/hps_fpga_bridge/hps_fpga_bridge_inst.v    |   36 +
 sys/hps_fpga_bridge/hps_fpga_bridge_inst.vhd  |   75 +
 .../synthesis/hps_fpga_bridge.debuginfo       | 1306 ++++++++--
 .../synthesis/hps_fpga_bridge.qip             |  384 +--
 .../synthesis/hps_fpga_bridge.v               |  142 +-
 .../synthesis/submodules/arm_avalon.vhd       |  341 ++-
 .../synthesis/submodules/arm_regs_avalon.vhd  |   83 +
 .../hps_fpga_bridge_mm_interconnect_0.v       | 2098 ++++++++++-------
 ...idge_mm_interconnect_0_avalon_st_adapter.v |   30 +-
 ..._mm_interconnect_0_avalon_st_adapter_001.v |   30 +-
 ...0_avalon_st_adapter_001_error_adapter_0.sv |    6 +-
 ...ect_0_avalon_st_adapter_error_adapter_0.sv |    6 +-
 ...fpga_bridge_mm_interconnect_0_cmd_demux.sv |   39 +-
 ...s_fpga_bridge_mm_interconnect_0_cmd_mux.sv |  118 +-
 ...ps_fpga_bridge_mm_interconnect_0_router.sv |   57 +-
 ...pga_bridge_mm_interconnect_0_router_002.sv |   50 +-
 ...pga_bridge_mm_interconnect_0_router_003.sv |   50 +-
 ...fpga_bridge_mm_interconnect_0_rsp_demux.sv |   18 +-
 ...s_fpga_bridge_mm_interconnect_0_rsp_mux.sv |   52 +-
 .../submodules/hps_sdram_p0_parameters.tcl    |    2 +-
 sys/sys.qip                                   |    2 +
 sys/sys_top.v                                 |   18 +-
 38 files changed, 4603 insertions(+), 1754 deletions(-)
 create mode 100644 sys/arm_regs_avalon.vhd
 create mode 100644 sys/arm_regs_avalon_hw.tcl
 create mode 100644 sys/fifo_from_hps.qip
 create mode 100644 sys/fifo_from_hps.vhd
 create mode 100644 sys/fifo_to_hps.qip
 create mode 100644 sys/fifo_to_hps.vhd
 create mode 100644 sys/hps_fpga_bridge/hps_fpga_bridge_bb.v
 create mode 100644 sys/hps_fpga_bridge/hps_fpga_bridge_inst.v
 create mode 100644 sys/hps_fpga_bridge/hps_fpga_bridge_inst.vhd
 create mode 100644 sys/hps_fpga_bridge/synthesis/submodules/arm_regs_avalon.vhd

diff --git a/Minimig.sv b/Minimig.sv
index d5b8095..58c5799 100644
--- a/Minimig.sv
+++ b/Minimig.sv
@@ -146,14 +146,17 @@ module emu
 	output wire [2:0]  hybridcpu_irq_n,
 	output wire        hybridcpu_clk_fast,         
 	output wire        hybridcpu_clk_access,         
-	input wire [22:0] hybridcpu_address,     
-	input wire [1:0]  hybridcpu_byteenable,  
-	input wire        hybridcpu_read,        
+	input wire [22:0]  hybridcpu_address,     
+	input wire [1:0]   hybridcpu_byteenable,  
+	input wire         hybridcpu_read,        
 	output wire [15:0] hybridcpu_readdata,    
-	input wire        hybridcpu_request, 
+	input wire         hybridcpu_request, 
+	input wire         hybridcpu_longword, 
 	output wire        hybridcpu_complete, 
-	input wire        hybridcpu_write,       
-	input wire [15:0] hybridcpu_writedata,   
+	input wire         hybridcpu_write,       
+	input wire [15:0]  hybridcpu_writedata,   
+	input wire [3:0]   hybridcpu_cacr,   
+	input wire [31:0]  hybridcpu_vbr,   
 `endif
 
 	input         UART_CTS,
@@ -275,15 +278,16 @@ assign LED_DISK     = {1'b0, ide_fast ? ide_f_led : ide_c_led};
 
 assign VGA_SCALER   = FB_EN;
 
-wire clk_57, clk_114;
+wire clk_57, clk_114, clk_sys_x6;
 wire clk_sys;
 wire locked;
 
 pll pll
 (
 	.refclk(CLK_50M),
-	.outclk_0(clk_114),
+	.outclk_0(clk_114),	
 	.outclk_1(clk_sys),
+	.outclk_2(clk_sys_x6),
 	.locked(locked)
 );
 
@@ -393,7 +397,7 @@ cpu_wrapper cpu_wrapper
 	.reset_out    (cpu_nrst_out    ),
 
 	.clk          (clk_sys         ),
-	.clk_fast      (clk_114         ),
+	.clk_fast      (clk_sys_x6         ),
 	.ph1          (cpu_ph1         ),
 	.ph2          (cpu_ph2         ),
 
@@ -416,17 +420,20 @@ cpu_wrapper cpu_wrapper
 	.fastchip_ready  (fastchip_ready  ),
 	.fastchip_lw     (fastchip_lw     ),
 
-	.hybridcpu_rst_n    (hybridcpu_rst_n), 
+	.hybridcpu_rst_n       (hybridcpu_rst_n), 
 	.hybridcpu_clk_fast    (hybridcpu_clk_fast), 
 	.hybridcpu_clk_access  (hybridcpu_clk_access), 
 	.hybridcpu_address     (hybridcpu_address),
 	.hybridcpu_byteenable  (hybridcpu_byteenable),
 	.hybridcpu_read        (hybridcpu_read),     
 	.hybridcpu_readdata    (hybridcpu_readdata),
-	.hybridcpu_request (hybridcpu_request),
-	.hybridcpu_complete (hybridcpu_complete),
+	.hybridcpu_request     (hybridcpu_request),
+	.hybridcpu_longword    (hybridcpu_longword),
+	.hybridcpu_complete    (hybridcpu_complete),
 	.hybridcpu_write       (hybridcpu_write),  
 	.hybridcpu_writedata   (hybridcpu_writedata),
+	.hybridcpu_cacr        (hybridcpu_cacr),
+	.hybridcpu_vbr         (hybridcpu_vbr),
 
 	.cpucfg       (cpucfg          ),
 	.cachecfg     (cachecfg        ),
diff --git a/rtl/cpu_wrapper.v b/rtl/cpu_wrapper.v
index 85b7f23..7fadae3 100644
--- a/rtl/cpu_wrapper.v
+++ b/rtl/cpu_wrapper.v
@@ -79,9 +79,12 @@ module cpu_wrapper
 	input wire        hybridcpu_read,        
 	output  wire [15:0] hybridcpu_readdata,    
 	input  wire        hybridcpu_request, 
+	input  wire        hybridcpu_longword, 
 	output  wire        hybridcpu_complete, 
 	input wire        hybridcpu_write,       
-	input wire [15:0] hybridcpu_writedata
+	input wire [15:0] hybridcpu_writedata,
+	input wire [3:0]  hybridcpu_cacr,
+	input wire [31:0] hybridcpu_vbr
 );
 
 assign ramsel       = cpu_req & ~sel_nmi_vector & (sel_zram | sel_chipram | sel_kickram | sel_dd | sel_rtg);
@@ -226,37 +229,22 @@ wire        hybrid_lds_p;
 wire        hybrid_reset_out_p;
 wire        hybrid_longword;
 
-reg  hybridcpu_request_reg;
-wire  hybridcpu_request_next;
-wire  hybridcpu_request_nocancel_next;
-
-always @(posedge clk) begin
-	if (~reset | ~reset_out) begin
-		hybridcpu_request_reg <= 0;
-	end
-	else begin
-		hybridcpu_request_reg <= hybridcpu_request_next;
-	end
-end
-
 assign hybridcpu_rst_n = reset;
 assign hybridcpu_clk_fast = clk_fast;
 assign hybridcpu_clk_access = clk;
 
-assign hybridcpu_request_next = (hybridcpu_request | hybridcpu_request_reg) & ~hybridcpu_complete;
-assign hybridcpu_request_nocancel_next = hybridcpu_request | hybridcpu_request_reg;
 assign hybridcpu_readdata = {cpu_din[7:0],cpu_din[15:8]};
-assign hybridcpu_complete = chipready | ramready;
+assign hybridcpu_complete = chipready | ramready | fastchip_ready;
 assign hybrid_cpu_addr_p = {hybridcpu_address,1'd0};
 assign hybrid_cpu_dout_p = {hybridcpu_writedata[7:0],hybridcpu_writedata[15:8]};
 assign hybrid_wr_p = ~hybridcpu_write;
 assign hybrid_uds_p  = ~hybridcpu_byteenable[0];
 assign hybrid_lds_p  = ~hybridcpu_byteenable[1];
 assign hybrid_reset_out_p = 1'd1;// For now...
-assign hybrid_cpustate_p  = {hybridcpu_request_nocancel_next,~hybridcpu_request_nocancel_next| (hybridcpu_request_nocancel_next&hybridcpu_write)}; // 0: fetch code, 1: no memaccess, 2: read data, 3: write data
-assign hybrid_cacr_p     = 1; //TODO
-assign hybrid_vbr_p       = 0; //TODO
-assign hybrid_longword       = 0; //TODO
+assign hybrid_cpustate_p  = {hybridcpu_request,~hybridcpu_request |(hybridcpu_request&hybridcpu_write)}; // 0: fetch code, 1: no memaccess, 2: read data, 3: write data
+assign hybrid_cacr_p      = hybridcpu_cacr;
+assign hybrid_vbr_p       = hybridcpu_vbr;
+assign hybrid_longword    = hybridcpu_longword;
 
 // TG68k plumbing
 wire [15:0] cpu_dout_p;
diff --git a/rtl/pll.qip b/rtl/pll.qip
index 22c7ea5..22973ad 100644
--- a/rtl/pll.qip
+++ b/rtl/pll.qip
@@ -22,8 +22,7 @@ set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_VERSI
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_DESCRIPTION "SW50ZWwgUGhhc2UtTG9ja2VkIExvb3A="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "ZGVidWdfcHJpbnRfb3V0cHV0::ZmFsc2U=::ZGVidWdfcHJpbnRfb3V0cHV0"
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "ZGVidWdfdXNlX3JiY190YWZfbWV0aG9k::ZmFsc2U=::ZGVidWdfdXNlX3JiY190YWZfbWV0aG9k"
-set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "ZGV2aWNl::VW5rbm93bg==::ZGV2aWNl"
-set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2RldmljZV9zcGVlZF9ncmFkZQ==::Mg==::RGV2aWNlIFNwZWVkIEdyYWRl"
+set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "ZGV2aWNl::NUNFQkEyRjE3QTc=::ZGV2aWNl"
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX3BsbF9tb2Rl::RnJhY3Rpb25hbC1OIFBMTA==::UExMIE1vZGU="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "ZnJhY3Rpb25hbF92Y29fbXVsdGlwbGllcg==::dHJ1ZQ==::ZnJhY3Rpb25hbF92Y29fbXVsdGlwbGllcg=="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX3JlZmVyZW5jZV9jbG9ja19mcmVxdWVuY3k=::NTAuMA==::UmVmZXJlbmNlIENsb2NrIEZyZXF1ZW5jeQ=="
@@ -36,17 +35,17 @@ set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAM
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "b3BlcmF0aW9uX21vZGU=::ZGlyZWN0::b3BlcmF0aW9uX21vZGU="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX3VzZV9sb2NrZWQ=::dHJ1ZQ==::RW5hYmxlIGxvY2tlZCBvdXRwdXQgcG9ydA=="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2VuX2Fkdl9wYXJhbXM=::ZmFsc2U=::RW5hYmxlIHBoeXNpY2FsIG91dHB1dCBjbG9jayBwYXJhbWV0ZXJz"
-set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX251bWJlcl9vZl9jbG9ja3M=::Mg==::TnVtYmVyIE9mIENsb2Nrcw=="
-set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "bnVtYmVyX29mX2Nsb2Nrcw==::Mg==::bnVtYmVyX29mX2Nsb2Nrcw=="
+set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX251bWJlcl9vZl9jbG9ja3M=::Mw==::TnVtYmVyIE9mIENsb2Nrcw=="
+set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "bnVtYmVyX29mX2Nsb2Nrcw==::Mw==::bnVtYmVyX29mX2Nsb2Nrcw=="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX211bHRpcGx5X2ZhY3Rvcg==::MQ==::TXVsdGlwbHkgRmFjdG9yIChNLUNvdW50ZXIp"
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2ZyYWNfbXVsdGlwbHlfZmFjdG9y::MQ==::RnJhY3Rpb25hbCBNdWx0aXBseSBGYWN0b3IgKEsp"
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2RpdmlkZV9mYWN0b3Jfbg==::MQ==::RGl2aWRlIEZhY3RvciAoTi1Db3VudGVyKQ=="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2Nhc2NhZGVfY291bnRlcjA=::ZmFsc2U=::TWFrZSB0aGlzIGEgY2FzY2FkZSBjb3VudGVy"
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX291dHB1dF9jbG9ja19mcmVxdWVuY3kw::MTEzLjUwMDY0::RGVzaXJlZCBGcmVxdWVuY3k="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2RpdmlkZV9mYWN0b3JfYzA=::MQ==::RGl2aWRlIEZhY3RvciAoQy1Db3VudGVyKQ=="
-set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9tdWx0aXBseV9mYWN0b3Iw::OQ==::QWN0dWFsIE11bHRpcGx5IEZhY3Rvcg=="
-set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9mcmFjX211bHRpcGx5X2ZhY3RvcjA=::MzQzODE3MjAw::QWN0dWFsIEZyYWN0aW9uYWwgTXVsdGlwbHkgRmFjdG9yIChLKQ=="
-set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9kaXZpZGVfZmFjdG9yMA==::NA==::QWN0dWFsIERpdmlkZSBGYWN0b3I="
+set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9tdWx0aXBseV9mYWN0b3Iw::MTM=::QWN0dWFsIE11bHRpcGx5IEZhY3Rvcg=="
+set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9mcmFjX211bHRpcGx5X2ZhY3RvcjA=::MjY2MzIwOTQ5MQ==::QWN0dWFsIEZyYWN0aW9uYWwgTXVsdGlwbHkgRmFjdG9yIChLKQ=="
+set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9kaXZpZGVfZmFjdG9yMA==::Ng==::QWN0dWFsIERpdmlkZSBGYWN0b3I="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9vdXRwdXRfY2xvY2tfZnJlcXVlbmN5MA==::MCBNSHo=::QWN0dWFsIEZyZXF1ZW5jeQ=="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX3BzX3VuaXRzMA==::cHM=::UGhhc2UgU2hpZnQgdW5pdHM="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX3BoYXNlX3NoaWZ0MA==::MA==::UGhhc2UgU2hpZnQ="
@@ -56,9 +55,9 @@ set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAM
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2Nhc2NhZGVfY291bnRlcjE=::ZmFsc2U=::TWFrZSB0aGlzIGEgY2FzY2FkZSBjb3VudGVy"
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX291dHB1dF9jbG9ja19mcmVxdWVuY3kx::MjguMzc1MTY=::RGVzaXJlZCBGcmVxdWVuY3k="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2RpdmlkZV9mYWN0b3JfYzE=::MQ==::RGl2aWRlIEZhY3RvciAoQy1Db3VudGVyKQ=="
-set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9tdWx0aXBseV9mYWN0b3Ix::OQ==::QWN0dWFsIE11bHRpcGx5IEZhY3Rvcg=="
-set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9mcmFjX211bHRpcGx5X2ZhY3RvcjE=::MzQzODE3MjAw::QWN0dWFsIEZyYWN0aW9uYWwgTXVsdGlwbHkgRmFjdG9yIChLKQ=="
-set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9kaXZpZGVfZmFjdG9yMQ==::MTY=::QWN0dWFsIERpdmlkZSBGYWN0b3I="
+set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9tdWx0aXBseV9mYWN0b3Ix::MTM=::QWN0dWFsIE11bHRpcGx5IEZhY3Rvcg=="
+set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9mcmFjX211bHRpcGx5X2ZhY3RvcjE=::MjY2MzIwOTQ5MQ==::QWN0dWFsIEZyYWN0aW9uYWwgTXVsdGlwbHkgRmFjdG9yIChLKQ=="
+set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9kaXZpZGVfZmFjdG9yMQ==::MjQ=::QWN0dWFsIERpdmlkZSBGYWN0b3I="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9vdXRwdXRfY2xvY2tfZnJlcXVlbmN5MQ==::MCBNSHo=::QWN0dWFsIEZyZXF1ZW5jeQ=="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX3BzX3VuaXRzMQ==::cHM=::UGhhc2UgU2hpZnQgdW5pdHM="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX3BoYXNlX3NoaWZ0MQ==::MA==::UGhhc2UgU2hpZnQ="
@@ -66,11 +65,11 @@ set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAM
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9waGFzZV9zaGlmdDE=::MA==::QWN0dWFsIFBoYXNlIFNoaWZ0"
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2R1dHlfY3ljbGUx::NTA=::RHV0eSBDeWNsZQ=="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2Nhc2NhZGVfY291bnRlcjI=::ZmFsc2U=::TWFrZSB0aGlzIGEgY2FzY2FkZSBjb3VudGVy"
-set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX291dHB1dF9jbG9ja19mcmVxdWVuY3ky::MjguNjg3NQ==::RGVzaXJlZCBGcmVxdWVuY3k="
+set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX291dHB1dF9jbG9ja19mcmVxdWVuY3ky::MTcwLjI1MDk2::RGVzaXJlZCBGcmVxdWVuY3k="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2RpdmlkZV9mYWN0b3JfYzI=::MQ==::RGl2aWRlIEZhY3RvciAoQy1Db3VudGVyKQ=="
-set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9tdWx0aXBseV9mYWN0b3Iy::MQ==::QWN0dWFsIE11bHRpcGx5IEZhY3Rvcg=="
-set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9mcmFjX211bHRpcGx5X2ZhY3RvcjI=::MQ==::QWN0dWFsIEZyYWN0aW9uYWwgTXVsdGlwbHkgRmFjdG9yIChLKQ=="
-set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9kaXZpZGVfZmFjdG9yMg==::MQ==::QWN0dWFsIERpdmlkZSBGYWN0b3I="
+set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9tdWx0aXBseV9mYWN0b3Iy::MTM=::QWN0dWFsIE11bHRpcGx5IEZhY3Rvcg=="
+set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9mcmFjX211bHRpcGx5X2ZhY3RvcjI=::MjY2MzIwOTQ5MQ==::QWN0dWFsIEZyYWN0aW9uYWwgTXVsdGlwbHkgRmFjdG9yIChLKQ=="
+set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9kaXZpZGVfZmFjdG9yMg==::NA==::QWN0dWFsIERpdmlkZSBGYWN0b3I="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2FjdHVhbF9vdXRwdXRfY2xvY2tfZnJlcXVlbmN5Mg==::MCBNSHo=::QWN0dWFsIEZyZXF1ZW5jeQ=="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX3BzX3VuaXRzMg==::cHM=::UGhhc2UgU2hpZnQgdW5pdHM="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX3BoYXNlX3NoaWZ0Mg==::MA==::UGhhc2UgU2hpZnQ="
@@ -263,7 +262,7 @@ set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAM
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "b3V0cHV0X2Nsb2NrX2ZyZXF1ZW5jeTE=::MjguMzc1MTYwIE1Ieg==::b3V0cHV0X2Nsb2NrX2ZyZXF1ZW5jeTE="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "cGhhc2Vfc2hpZnQx::MCBwcw==::cGhhc2Vfc2hpZnQx"
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "ZHV0eV9jeWNsZTE=::NTA=::ZHV0eV9jeWNsZTE="
-set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "b3V0cHV0X2Nsb2NrX2ZyZXF1ZW5jeTI=::MCBNSHo=::b3V0cHV0X2Nsb2NrX2ZyZXF1ZW5jeTI="
+set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "b3V0cHV0X2Nsb2NrX2ZyZXF1ZW5jeTI=::MTcwLjI1MDk2MCBNSHo=::b3V0cHV0X2Nsb2NrX2ZyZXF1ZW5jeTI="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "cGhhc2Vfc2hpZnQy::MCBwcw==::cGhhc2Vfc2hpZnQy"
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "ZHV0eV9jeWNsZTI=::NTA=::ZHV0eV9jeWNsZTI="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "b3V0cHV0X2Nsb2NrX2ZyZXF1ZW5jeTM=::MCBNSHo=::b3V0cHV0X2Nsb2NrX2ZyZXF1ZW5jeTM="
@@ -318,8 +317,8 @@ set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAM
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2VuX3Bob3V0X3BvcnRz::ZmFsc2U=::RW5hYmxlIGFjY2VzcyB0byBQTEwgRFBBIG91dHB1dCBwb3J0"
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "cGxsX3R5cGU=::R2VuZXJhbA==::UExMIFRZUEU="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "cGxsX3N1YnR5cGU=::R2VuZXJhbA==::UExMIFNVQlRZUEU="
-set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX3BhcmFtZXRlcl9saXN0::TS1Db3VudGVyIEhpIERpdmlkZSxNLUNvdW50ZXIgTG93IERpdmlkZSxOLUNvdW50ZXIgSGkgRGl2aWRlLE4tQ291bnRlciBMb3cgRGl2aWRlLE0tQ291bnRlciBCeXBhc3MgRW5hYmxlLE4tQ291bnRlciBCeXBhc3MgRW5hYmxlLE0tQ291bnRlciBPZGQgRGl2aWRlIEVuYWJsZSxOLUNvdW50ZXIgT2RkIERpdmlkZSBFbmFibGUsQy1Db3VudGVyLTAgSGkgRGl2aWRlLEMtQ291bnRlci0wIExvdyBEaXZpZGUsQy1Db3VudGVyLTAgQ29hcnNlIFBoYXNlIFNoaWZ0LEMtQ291bnRlci0wIFZDTyBQaGFzZSBUYXAsQy1Db3VudGVyLTAgSW5wdXQgU291cmNlLEMtQ291bnRlci0wIEJ5cGFzcyBFbmFibGUsQy1Db3VudGVyLTAgT2RkIERpdmlkZSBFbmFibGUsQy1Db3VudGVyLTEgSGkgRGl2aWRlLEMtQ291bnRlci0xIExvdyBEaXZpZGUsQy1Db3VudGVyLTEgQ29hcnNlIFBoYXNlIFNoaWZ0LEMtQ291bnRlci0xIFZDTyBQaGFzZSBUYXAsQy1Db3VudGVyLTEgSW5wdXQgU291cmNlLEMtQ291bnRlci0xIEJ5cGFzcyBFbmFibGUsQy1Db3VudGVyLTEgT2RkIERpdmlkZSBFbmFibGUsVkNPIFBvc3QgRGl2aWRlIENvdW50ZXIgRW5hYmxlLENoYXJnZSBQdW1wIGN1cnJlbnQgKHVBKSxMb29wIEZpbHRlciBCYW5kd2lkdGggUmVzaXN0b3IgKE9obXMpICxQTEwgT3V0cHV0IFZDTyBGcmVxdWVuY3ksSy1GcmFjdGlvbmFsIERpdmlzaW9uIFZhbHVlIChEU00pLEZlZWRiYWNrIENsb2NrIFR5cGUsRmVlZGJhY2sgQ2xvY2sgTVVYIDEsRmVlZGJhY2sgQ2xvY2sgTVVYIDIsTSBDb3VudGVyIFNvdXJjZSBNVVgsUExMIEF1dG8gUmVzZXQ=::UGFyYW1ldGVyIE5hbWVz"
-set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX3BhcmFtZXRlcl92YWx1ZXM=::NSw0LDI1NiwyNTYsZmFsc2UsdHJ1ZSx0cnVlLGZhbHNlLDIsMiwxLDAscGhfbXV4X2NsayxmYWxzZSxmYWxzZSw4LDgsMSwwLHBoX211eF9jbGssZmFsc2UsZmFsc2UsMiwyMCw0MDAwLDQ1NC4wMDI1NTkgTUh6LDM0MzgxNzIwMCxub25lLGdsYixtX2NudCxwaF9tdXhfY2xrLHRydWU=::UGFyYW1ldGVyIFZhbHVlcw=="
+set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX3BhcmFtZXRlcl9saXN0::TS1Db3VudGVyIEhpIERpdmlkZSxNLUNvdW50ZXIgTG93IERpdmlkZSxOLUNvdW50ZXIgSGkgRGl2aWRlLE4tQ291bnRlciBMb3cgRGl2aWRlLE0tQ291bnRlciBCeXBhc3MgRW5hYmxlLE4tQ291bnRlciBCeXBhc3MgRW5hYmxlLE0tQ291bnRlciBPZGQgRGl2aWRlIEVuYWJsZSxOLUNvdW50ZXIgT2RkIERpdmlkZSBFbmFibGUsQy1Db3VudGVyLTAgSGkgRGl2aWRlLEMtQ291bnRlci0wIExvdyBEaXZpZGUsQy1Db3VudGVyLTAgQ29hcnNlIFBoYXNlIFNoaWZ0LEMtQ291bnRlci0wIFZDTyBQaGFzZSBUYXAsQy1Db3VudGVyLTAgSW5wdXQgU291cmNlLEMtQ291bnRlci0wIEJ5cGFzcyBFbmFibGUsQy1Db3VudGVyLTAgT2RkIERpdmlkZSBFbmFibGUsQy1Db3VudGVyLTEgSGkgRGl2aWRlLEMtQ291bnRlci0xIExvdyBEaXZpZGUsQy1Db3VudGVyLTEgQ29hcnNlIFBoYXNlIFNoaWZ0LEMtQ291bnRlci0xIFZDTyBQaGFzZSBUYXAsQy1Db3VudGVyLTEgSW5wdXQgU291cmNlLEMtQ291bnRlci0xIEJ5cGFzcyBFbmFibGUsQy1Db3VudGVyLTEgT2RkIERpdmlkZSBFbmFibGUsQy1Db3VudGVyLTIgSGkgRGl2aWRlLEMtQ291bnRlci0yIExvdyBEaXZpZGUsQy1Db3VudGVyLTIgQ29hcnNlIFBoYXNlIFNoaWZ0LEMtQ291bnRlci0yIFZDTyBQaGFzZSBUYXAsQy1Db3VudGVyLTIgSW5wdXQgU291cmNlLEMtQ291bnRlci0yIEJ5cGFzcyBFbmFibGUsQy1Db3VudGVyLTIgT2RkIERpdmlkZSBFbmFibGUsVkNPIFBvc3QgRGl2aWRlIENvdW50ZXIgRW5hYmxlLENoYXJnZSBQdW1wIGN1cnJlbnQgKHVBKSxMb29wIEZpbHRlciBCYW5kd2lkdGggUmVzaXN0b3IgKE9obXMpICxQTEwgT3V0cHV0IFZDTyBGcmVxdWVuY3ksSy1GcmFjdGlvbmFsIERpdmlzaW9uIFZhbHVlIChEU00pLEZlZWRiYWNrIENsb2NrIFR5cGUsRmVlZGJhY2sgQ2xvY2sgTVVYIDEsRmVlZGJhY2sgQ2xvY2sgTVVYIDIsTSBDb3VudGVyIFNvdXJjZSBNVVgsUExMIEF1dG8gUmVzZXQ=::UGFyYW1ldGVyIE5hbWVz"
+set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX3BhcmFtZXRlcl92YWx1ZXM=::Nyw2LDI1NiwyNTYsZmFsc2UsdHJ1ZSx0cnVlLGZhbHNlLDMsMywxLDAscGhfbXV4X2NsayxmYWxzZSxmYWxzZSwxMiwxMiwxLDAscGhfbXV4X2NsayxmYWxzZSxmYWxzZSwyLDIsMSwwLHBoX211eF9jbGssZmFsc2UsZmFsc2UsMSwzMCwyMDAwLDY4MS4wMDM4MzkgTUh6LDI2NjMyMDk0OTEsbm9uZSxnbGIsbV9jbnQscGhfbXV4X2Nsayx0cnVl::UGFyYW1ldGVyIFZhbHVlcw=="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX21pZl9nZW5lcmF0ZQ==::ZmFsc2U=::R2VuZXJhdGUgTUlGIGZpbGU="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2VuYWJsZV9taWZfZHBz::ZmFsc2U=::RW5hYmxlIER5bmFtaWMgUGhhc2UgU2hpZnQgZm9yIE1JRiBzdHJlYW1pbmc="
 set_global_assignment -entity "pll_0002" -library "pll" -name IP_COMPONENT_PARAMETER "Z3VpX2Rwc19jbnRy::QzA=::RFBTIENvdW50ZXIgU2VsZWN0aW9u"
diff --git a/rtl/pll.v b/rtl/pll.v
index 439c23e..f6f9a5f 100644
--- a/rtl/pll.v
+++ b/rtl/pll.v
@@ -10,6 +10,7 @@ module pll (
 		input  wire  rst,      //   reset.reset
 		output wire  outclk_0, // outclk0.clk
 		output wire  outclk_1, // outclk1.clk
+		output wire  outclk_2, // outclk2.clk
 		output wire  locked    //  locked.export
 	);
 
@@ -18,6 +19,7 @@ module pll (
 		.rst      (rst),      //   reset.reset
 		.outclk_0 (outclk_0), // outclk0.clk
 		.outclk_1 (outclk_1), // outclk1.clk
+		.outclk_2 (outclk_2), // outclk2.clk
 		.locked   (locked)    //  locked.export
 	);
 
@@ -52,7 +54,7 @@ endmodule
 // Retrieval info: 	<generic name="debug_print_output" value="false" />
 // Retrieval info: 	<generic name="debug_use_rbc_taf_method" value="false" />
 // Retrieval info: 	<generic name="device_family" value="Cyclone V" />
-// Retrieval info: 	<generic name="device" value="Unknown" />
+// Retrieval info: 	<generic name="device" value="5CEBA2F17A7" />
 // Retrieval info: 	<generic name="gui_device_speed_grade" value="2" />
 // Retrieval info: 	<generic name="gui_pll_mode" value="Fractional-N PLL" />
 // Retrieval info: 	<generic name="gui_reference_clock_frequency" value="50.0" />
@@ -63,7 +65,7 @@ endmodule
 // Retrieval info: 	<generic name="gui_dsm_out_sel" value="1st_order" />
 // Retrieval info: 	<generic name="gui_use_locked" value="true" />
 // Retrieval info: 	<generic name="gui_en_adv_params" value="false" />
-// Retrieval info: 	<generic name="gui_number_of_clocks" value="2" />
+// Retrieval info: 	<generic name="gui_number_of_clocks" value="3" />
 // Retrieval info: 	<generic name="gui_multiply_factor" value="1" />
 // Retrieval info: 	<generic name="gui_frac_multiply_factor" value="1" />
 // Retrieval info: 	<generic name="gui_divide_factor_n" value="1" />
@@ -86,7 +88,7 @@ endmodule
 // Retrieval info: 	<generic name="gui_actual_phase_shift1" value="0" />
 // Retrieval info: 	<generic name="gui_duty_cycle1" value="50" />
 // Retrieval info: 	<generic name="gui_cascade_counter2" value="false" />
-// Retrieval info: 	<generic name="gui_output_clock_frequency2" value="28.6875" />
+// Retrieval info: 	<generic name="gui_output_clock_frequency2" value="170.25096" />
 // Retrieval info: 	<generic name="gui_divide_factor_c2" value="1" />
 // Retrieval info: 	<generic name="gui_actual_output_clock_frequency2" value="0 MHz" />
 // Retrieval info: 	<generic name="gui_ps_units2" value="ps" />
diff --git a/rtl/pll/pll_0002.v b/rtl/pll/pll_0002.v
index 0192e40..dd90ccb 100644
--- a/rtl/pll/pll_0002.v
+++ b/rtl/pll/pll_0002.v
@@ -13,6 +13,9 @@ module  pll_0002(
 	// interface 'outclk1'
 	output wire outclk_1,
 
+	// interface 'outclk2'
+	output wire outclk_2,
+
 	// interface 'locked'
 	output wire locked
 );
@@ -21,14 +24,14 @@ module  pll_0002(
 		.fractional_vco_multiplier("true"),
 		.reference_clock_frequency("50.0 MHz"),
 		.operation_mode("direct"),
-		.number_of_clocks(2),
+		.number_of_clocks(3),
 		.output_clock_frequency0("113.500640 MHz"),
 		.phase_shift0("0 ps"),
 		.duty_cycle0(50),
 		.output_clock_frequency1("28.375160 MHz"),
 		.phase_shift1("0 ps"),
 		.duty_cycle1(50),
-		.output_clock_frequency2("0 MHz"),
+		.output_clock_frequency2("170.250960 MHz"),
 		.phase_shift2("0 ps"),
 		.duty_cycle2(50),
 		.output_clock_frequency3("0 MHz"),
@@ -80,7 +83,7 @@ module  pll_0002(
 		.pll_subtype("General")
 	) altera_pll_i (
 		.rst	(rst),
-		.outclk	({outclk_1, outclk_0}),
+		.outclk	({outclk_2, outclk_1, outclk_0}),
 		.locked	(locked),
 		.fboutclk	( ),
 		.fbclk	(1'b0),
diff --git a/sys/arm_avalon.vhd b/sys/arm_avalon.vhd
index 3e19fc9..58927ee 100644
--- a/sys/arm_avalon.vhd
+++ b/sys/arm_avalon.vhd
@@ -24,13 +24,13 @@ PORT
 	RESET_N : IN STD_LOGIC;
 	
 	-- avalon signals
-	CHIPSELECT : IN STD_LOGIC;
-	ADDRESS : IN STD_LOGIC_VECTOR(22 downto 0);
+	ADDRESS : IN STD_LOGIC_VECTOR(21 downto 0);
 	READ: IN STD_LOGIC;
-	READDATA : OUT STD_LOGIC_VECTOR(15 downto 0);
+	READDATA : OUT STD_LOGIC_VECTOR(31 downto 0);
+	READDATAVALID : OUT STD_LOGIC;
 	WRITE : IN STD_LOGIC;
-	WRITEDATA : IN STD_LOGIC_VECTOR(15 downto 0);
-	BYTEENABLE : IN STD_LOGIC_VECTOR(1 downto 0);
+	WRITEDATA : IN STD_LOGIC_VECTOR(31 downto 0);
+	BYTEENABLE : IN STD_LOGIC_VECTOR(3 downto 0);
 	WAITREQUEST : OUT STD_LOGIC;
 	
 
@@ -43,6 +43,7 @@ PORT
 	HYBRIDCPU_BYTEENABLE : OUT STD_LOGIC_VECTOR(1 downto 0);
 	HYBRIDCPU_COMPLETE : IN STD_LOGIC;
 	HYBRIDCPU_REQUEST : OUT STD_LOGIC;
+	HYBRIDCPU_LONGWORD : OUT STD_LOGIC; 
 
 	-- expose a slow clock too, aligned with CLK
 	HYBRIDCPU_SYNC_CLK : IN STD_LOGIC
@@ -50,106 +51,276 @@ PORT
 END arm_avalon;
 
 ARCHITECTURE vhdl OF arm_avalon IS
-	signal READDATA_REG : STD_LOGIC_VECTOR(15 downto 0);
-	signal COMPLETE_REG : STD_LOGIC;
-
-	signal HYBRIDCPU_REQUEST_NEXT : STD_LOGIC;
-	signal HYBRIDCPU_REQUEST_REG : STD_LOGIC;
-	signal HYBRIDCPU_ADDRESS_REG : STD_LOGIC_VECTOR(22 downto 0);
-	signal HYBRIDCPU_READ_REG: STD_LOGIC;
-	signal HYBRIDCPU_READDATA_REG : STD_LOGIC_VECTOR(15 downto 0);
-	signal HYBRIDCPU_WRITE_REG : STD_LOGIC;
-	signal HYBRIDCPU_WRITEDATA_REG : STD_LOGIC_VECTOR(15 downto 0);
-	signal HYBRIDCPU_BYTEENABLE_REG : STD_LOGIC_VECTOR(1 downto 0);
-
-	signal STATE_REG : STD_LOGIC_VECTOR(1 downto 0);
-	signal STATE_NEXT : STD_LOGIC_VECTOR(1 downto 0);
-	constant STATE_INIT : STD_LOGIC_VECTOR(1 downto 0) := "00";
-	constant STATE_WAIT_HYBRIDCPU_SEEN : STD_LOGIC_VECTOR(1 downto 0) := "01";
-	constant STATE_WAIT_HYBRIDCPU_COMPLETE : STD_LOGIC_VECTOR(1 downto 0) := "10";
-
-	signal WATCHDOG_REG : UNSIGNED(15 downto 0);
-	signal WATCHDOG_NEXT : UNSIGNED(15 downto 0);
+	signal hps_readvalid_reg : std_logic;
+	signal hps_readvalid_next : std_logic;
+
+	signal SYS_STATE_REG : STD_LOGIC_VECTOR(1 downto 0);
+	signal SYS_STATE_NEXT : STD_LOGIC_VECTOR(1 downto 0);
+	constant SYS_STATE_WAIT_REQUEST : STD_LOGIC_VECTOR(1 downto 0) := "00";
+	constant SYS_STATE_WAIT_COMPLETE : STD_LOGIC_VECTOR(1 downto 0) := "01";
+	constant SYS_STATE_WAIT_COMPLETE1 : STD_LOGIC_VECTOR(1 downto 0) := "10";
+	constant SYS_STATE_WAIT_COMPLETE2 : STD_LOGIC_VECTOR(1 downto 0) := "11";
+
+	signal active_word : std_logic;
+	signal read_word : std_logic_vector(1 downto 0);
+
+	signal to_hps_read : std_logic;
+	signal to_hps_empty : std_logic;
+	signal to_hps_write : std_logic;
+
+	signal to_hps_readdata : std_logic_vector(31 downto 0);
+	signal to_hps_readdata_next : std_logic_vector(31 downto 0);
+	signal to_hps_readdata_reg : std_logic_vector(31 downto 0);
+
+	signal from_hps_readack : std_logic;
+	signal from_hps_empty : std_logic;
+	signal from_hps_write : std_logic;
+	signal from_hps_read : std_logic;
+	signal from_hps_byteenable : std_logic_vector(3 downto 0);
+	signal from_hps_writedata : std_logic_vector(31 downto 0);
+	signal from_hps_writereq : std_logic;
+	signal from_hps_full : std_logic;
+
+	COMPONENT fifo_from_hps IS
+	PORT
+	(
+		data		: IN STD_LOGIC_VECTOR (59 DOWNTO 0);
+		rdclk		: IN STD_LOGIC ;
+		rdreq		: IN STD_LOGIC ;
+		wrclk		: IN STD_LOGIC ;
+		wrreq		: IN STD_LOGIC ;
+		q		: OUT STD_LOGIC_VECTOR (59 DOWNTO 0);
+		rdempty		: OUT STD_LOGIC ;
+		wrfull		: OUT STD_LOGIC 
+	);
+	END COMPONENT;
+
+	COMPONENT fifo_to_hps IS
+		PORT
+		(
+			data		: IN STD_LOGIC_VECTOR (31 DOWNTO 0);
+			rdclk		: IN STD_LOGIC ;
+			rdreq		: IN STD_LOGIC ;
+			wrclk		: IN STD_LOGIC ;
+			wrreq		: IN STD_LOGIC ;
+			q		: OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
+			rdempty		: OUT STD_LOGIC ;
+			wrfull		: OUT STD_LOGIC 
+		);
+	END COMPONENT;
+
 BEGIN
-	process(hybridcpu_sync_clk,reset_n)
+	to_hps : fifo_to_hps
+	port map
+	(
+		rdclk=>clk,
+		rdreq=>to_hps_read,
+		rdempty=>to_hps_empty,
+		q=>READDATA,
+
+		wrclk=>hybridcpu_sync_clk,
+		data =>to_hps_readdata,
+		wrreq=>to_hps_write,
+		wrfull=>open
+	);
+
+	from_hps : fifo_from_hps
+	port map
+	(
+		rdclk=>hybridcpu_sync_clk,
+		rdreq=>from_hps_readack,
+		rdempty=>from_hps_empty,
+		q(59)=>from_hps_write,
+		q(58)=>from_hps_read,
+		q(57 downto 54)=>from_hps_byteenable,
+		q(53 downto 32)=>HYBRIDCPU_ADDRESS(22 downto 1), -- 0 needs setting...
+		q(31 downto 0)=>from_hps_writedata,
+
+		wrclk=>clk,
+		data(59) => WRITE,
+		data(58) => READ, 
+		data(57 downto 54) => BYTEENABLE, 
+		data(53 downto 32) => ADDRESS, 
+		data(31 downto 0) => WRITEDATA, 
+
+		wrreq=>from_hps_writereq,
+		wrfull=>from_hps_full
+	);
+
+	-------------------
+	-- HPS side
+	process(clk,reset_n)
 	begin
 		if (reset_n='0') then
-			COMPLETE_REG <= '0';
-			READDATA_REG <= (others=>'0');
-			--IRQ_N <= HYBRIDCPU_IRQ_N;
-		
-			HYBRIDCPU_REQUEST_REG <= '0';
-			HYBRIDCPU_ADDRESS_REG <= (others=>'0');
-			HYBRIDCPU_READ_REG <= '0';
-			HYBRIDCPU_WRITE_REG <= '0';
-			HYBRIDCPU_WRITEDATA_REG <= (others=>'0');
-			HYBRIDCPU_BYTEENABLE_REG <= (others=>'0');
-		elsif (hybridcpu_sync_clk'event and hybridcpu_sync_clk='1') then
-			COMPLETE_REG <= HYBRIDCPU_COMPLETE;
-			READDATA_REG <= HYBRIDCPU_READDATA;
-			--IRQ_N <= HYBRIDCPU_IRQ_N;
-		
-			HYBRIDCPU_REQUEST_REG <= HYBRIDCPU_REQUEST_NEXT;
-			HYBRIDCPU_ADDRESS_REG <= ADDRESS;
-			HYBRIDCPU_READ_REG <= READ;
-			HYBRIDCPU_WRITE_REG <= WRITE;
-			HYBRIDCPU_WRITEDATA_REG <= WRITEDATA;
-			HYBRIDCPU_BYTEENABLE_REG <= BYTEENABLE;
+			hps_readvalid_reg <= '0';
+		elsif (clk'event and clk='1') then
+			hps_readvalid_reg <= hps_readvalid_next;
 		end if;
 	end process;
 
+	process(hps_readvalid_reg, from_hps_full, to_hps_empty, READ, WRITE) is
+	begin
+		hps_readvalid_next <= hps_readvalid_reg;
+		waitrequest <= from_hps_full;
 
-	process(clk,reset_n)
+		READDATAVALID <= hps_readvalid_reg;
+
+		from_hps_writereq <= '0';
+		to_hps_read <= '0';
+
+		from_hps_writereq <= READ or WRITE;
+
+		hps_readvalid_next <= not(to_hps_empty);
+		to_hps_read<=not(to_hps_empty);
+	end process;
+
+	-------------------
+	-- sys side
+	process(HYBRIDCPU_SYNC_CLK,reset_n)
 	begin
 		if (reset_n='0') then
-			state_reg <= state_init;
-			watchdog_reg <= (others=>'0');
-		elsif (clk'event and clk='1') then
-			state_reg <= state_next;
-			watchdog_reg <= watchdog_next;
+			sys_state_reg <= SYS_STATE_WAIT_REQUEST;
+			to_hps_readdata_reg <= (others=>'0');
+		elsif (HYBRIDCPU_SYNC_CLK'event and HYBRIDCPU_SYNC_CLK='1') then
+			sys_state_reg <= sys_state_next;
+			to_hps_readdata_reg <= TO_HPS_READDATA_NEXT;
 		end if;
 	end process;
 
-	process(state_reg, chipselect, COMPLETE_REG, hybridcpu_request_reg, watchdog_reg) is
+	---- I need to handle reads and populate these
+	--to_hps_readdata, --DONE
+	--to_hps_write, -- DONE
+
+	---- I need to handle these
+	--from_hps_readack, -- DONE
+	--from_hps_empty, -- DONE
+	--from_hps_byteenable, --DONE
+	--from_hps_writedata, -- DONE
+
+	---- I need to send this to minimig
+	--HYBRIDCPU_ADDRESS(0), -- DONE -- 0 needs setting...
+	--HYBRIDCPU_BYTEENABLE -- DONE
+	--HYBRIDCPU_REQUEST --DONE
+	--HYBRIDCPU_WRITEDATA -- DONE
+	--HYBRIDCPU_LONGWORD --DONE
+
+	---- + this from minimig
+	--HYBRIDCPU_COMPLETE; --DONE
+	--HYBRIDCPU_READDATA --DONE
+
+
+	HYBRIDCPU_WRITE <= from_hps_write;
+	HYBRIDCPU_READ <= from_hps_read;
+
+	process(sys_state_reg,
+		from_hps_byteenable, from_hps_read, from_hps_empty,
+		HYBRIDCPU_COMPLETE
+		) is
+		variable word : std_logic_vector(1 downto 0);
+		variable longword : std_logic;
 	begin
-		state_next <= state_reg;
-		hybridcpu_request_next <= hybridcpu_request_reg;
-		waitrequest <= '0';
-		watchdog_next <= watchdog_reg+1;
-		case state_reg is
-			when STATE_INIT =>
-				watchdog_next <= (others=>'0');
-				if (CHIPSELECT='1') then
-					state_next <= state_wait_hybridcpu_seen;
-					hybridcpu_request_next <= '1';
-					waitrequest <= '1';
+		sys_state_next <= sys_state_reg;
+
+		word(0) := from_hps_byteenable(0) or from_hps_byteenable(1);
+		word(1) := from_hps_byteenable(2) or from_hps_byteenable(3);
+
+		case word is
+		when "01" => 
+			active_word <= '0';
+			read_word <= "11";
+			longword:='0';
+		when "10" => 
+			active_word <= '1';
+			read_word <= "11";
+			longword:='0';
+		when others => 
+			active_word <= '0';
+			read_word <= "01";
+			longword:='1';
+		end case;
+
+		from_hps_readack<='0';
+		to_hps_write<='0';
+
+		HYBRIDCPU_LONGWORD <= '0'; 
+		HYBRIDCPU_REQUEST <= '0'; 
+
+		case sys_state_reg is
+			when SYS_STATE_WAIT_REQUEST =>
+				if (from_hps_empty='0') then
+					HYBRIDCPU_REQUEST <= '1'; 
+					HYBRIDCPU_LONGWORD <= longword;
+					if (HYBRIDCPU_COMPLETE='1') then
+						to_hps_write<=from_hps_read and not(longword);
+						sys_state_next <= SYS_STATE_WAIT_REQUEST;
+						if (longword='1') then
+							sys_state_next <= SYS_STATE_WAIT_COMPLETE2;
+						else
+							from_hps_readack<='1';
+						end if;
+					else
+						if (longword='0') then
+							sys_state_next <= SYS_STATE_WAIT_COMPLETE;
+						else
+							sys_state_next <= SYS_STATE_WAIT_COMPLETE1;
+						end if;
+					end if;
+				end if;
+			when SYS_STATE_WAIT_COMPLETE =>
+				HYBRIDCPU_REQUEST <= '1'; 
+				if (HYBRIDCPU_COMPLETE='1') then
+					to_hps_write<=from_hps_read;
+					sys_state_next <= SYS_STATE_WAIT_REQUEST;
+					from_hps_readack<='1';
 				end if;
-			when STATE_WAIT_HYBRIDCPU_SEEN =>
-				waitrequest <= '1';
-				hybridcpu_request_next <= '1';
-				if (hybridcpu_request_reg='1') then
-					state_next <= state_wait_hybridcpu_complete;
-					hybridcpu_request_next <= '0';
+			when SYS_STATE_WAIT_COMPLETE1 =>
+				HYBRIDCPU_REQUEST <= '1'; 
+				HYBRIDCPU_LONGWORD <= '1'; 
+				if (HYBRIDCPU_COMPLETE='1') then
+					sys_state_next <= SYS_STATE_WAIT_COMPLETE2;
 				end if;
-			when STATE_WAIT_HYBRIDCPU_COMPLETE =>
-				waitrequest <= '1';
-				hybridcpu_request_next <= '0';
-				if (complete_reg='1' or and_reduce(std_logic_vector(watchdog_reg))='1') then
-					waitrequest <= '0';
-					state_next <= state_init;
+			when SYS_STATE_WAIT_COMPLETE2 =>
+				HYBRIDCPU_REQUEST <= '1'; 
+				read_word <= "10";
+				active_word <= '1';
+				if (HYBRIDCPU_COMPLETE='1') then
+					to_hps_write<=from_hps_read;
+					sys_state_next <= SYS_STATE_WAIT_REQUEST;
+					from_hps_readack<='1';
 				end if;
+
 			when others =>
-				state_next <= state_init;
+				sys_state_next <= SYS_STATE_WAIT_REQUEST;
 		end case;
 	end process;
 
-	READDATA <= READDATA_REG;
+	process(active_word,ADDRESS)
+	begin
+		HYBRIDCPU_ADDRESS(0) <= active_word;
+	end process;
+
+	process(active_word,from_hps_writedata,from_hps_byteenable)
+	begin
+		if active_word='0' then
+			HYBRIDCPU_WRITEDATA <= from_hps_writedata(15 downto 0);
+			HYBRIDCPU_BYTEENABLE <= from_hps_byteenable(1 downto 0);
+		else
+			HYBRIDCPU_WRITEDATA <= from_hps_writedata(31 downto 16);
+			HYBRIDCPU_BYTEENABLE <= from_hps_byteenable(3 downto 2);
+		end if;
+	end process;
+
+	process(read_word,HYBRIDCPU_READDATA,TO_HPS_READDATA_REG)
+	begin
+		TO_HPS_READDATA_NEXT <= TO_HPS_READDATA_REG;
 
-	HYBRIDCPU_REQUEST <= HYBRIDCPU_REQUEST_REG;
+		if read_word(0)='1' then
+			TO_HPS_READDATA_NEXT(15 downto 0) <= HYBRIDCPU_READDATA;
+		end if;
+		if read_word(1)='1' then
+			TO_HPS_READDATA_NEXT(31 downto 16) <= HYBRIDCPU_READDATA;
+		end if;
+	end process;
+	to_hps_readdata <= TO_HPS_READDATA_NEXT;
 
-	HYBRIDCPU_ADDRESS <= HYBRIDCPU_ADDRESS_REG;
-	HYBRIDCPU_READ <= HYBRIDCPU_READ_REG;
-	HYBRIDCPU_WRITE <= HYBRIDCPU_WRITE_REG;
-	HYBRIDCPU_WRITEDATA <= HYBRIDCPU_WRITEDATA_REG;
-	HYBRIDCPU_BYTEENABLE <= HYBRIDCPU_BYTEENABLE_REG;
 END vhdl;
diff --git a/sys/arm_avalon_hw.tcl b/sys/arm_avalon_hw.tcl
index 269c1f3..362c3a0 100644
--- a/sys/arm_avalon_hw.tcl
+++ b/sys/arm_avalon_hw.tcl
@@ -1,11 +1,11 @@
 # TCL File Generated by Component Editor 20.1
-# Sun Apr 11 20:55:13 CEST 2021
+# Sat Aug 13 21:40:23 CEST 2022
 # DO NOT MODIFY
 
 
 # 
 # arm_avalon "arm_avalon" v1.0
-#  2021.04.11.20:55:13
+#  2022.08.13.21:40:23
 # 
 # 
 
@@ -94,7 +94,7 @@ set_interface_property avalon_slave_0 burstcountUnits WORDS
 set_interface_property avalon_slave_0 explicitAddressSpan 0
 set_interface_property avalon_slave_0 holdTime 0
 set_interface_property avalon_slave_0 linewrapBursts false
-set_interface_property avalon_slave_0 maximumPendingReadTransactions 0
+set_interface_property avalon_slave_0 maximumPendingReadTransactions 16
 set_interface_property avalon_slave_0 maximumPendingWriteTransactions 0
 set_interface_property avalon_slave_0 readLatency 0
 set_interface_property avalon_slave_0 readWaitTime 1
@@ -107,14 +107,14 @@ set_interface_property avalon_slave_0 PORT_NAME_MAP ""
 set_interface_property avalon_slave_0 CMSIS_SVD_VARIABLES ""
 set_interface_property avalon_slave_0 SVD_ADDRESS_GROUP ""
 
-add_interface_port avalon_slave_0 CHIPSELECT chipselect Input 1
-add_interface_port avalon_slave_0 ADDRESS address Input 23
+add_interface_port avalon_slave_0 ADDRESS address Input 22
 add_interface_port avalon_slave_0 READ read Input 1
-add_interface_port avalon_slave_0 READDATA readdata Output 16
+add_interface_port avalon_slave_0 READDATA readdata Output 32
 add_interface_port avalon_slave_0 WRITE write Input 1
-add_interface_port avalon_slave_0 WRITEDATA writedata Input 16
-add_interface_port avalon_slave_0 BYTEENABLE byteenable Input 2
+add_interface_port avalon_slave_0 WRITEDATA writedata Input 32
+add_interface_port avalon_slave_0 BYTEENABLE byteenable Input 4
 add_interface_port avalon_slave_0 WAITREQUEST waitrequest Output 1
+add_interface_port avalon_slave_0 READDATAVALID readdatavalid Output 1
 set_interface_assignment avalon_slave_0 embeddedsw.configuration.isFlash 0
 set_interface_assignment avalon_slave_0 embeddedsw.configuration.isMemoryDevice 0
 set_interface_assignment avalon_slave_0 embeddedsw.configuration.isNonVolatileStorage 0
@@ -142,4 +142,5 @@ add_interface_port conduit_end HYBRIDCPU_SYNC_CLK hybridcpu_sync_clk Input 1
 add_interface_port conduit_end HYBRIDCPU_WRITE hybridcpu_write Output 1
 add_interface_port conduit_end HYBRIDCPU_WRITEDATA hybridcpu_writedata Output 16
 add_interface_port conduit_end HYBRIDCPU_REQUEST hybridcpu_request Output 1
+add_interface_port conduit_end HYBRIDCPU_LONGWORD hybridcpu_longword Output 1
 
diff --git a/sys/arm_regs_avalon.vhd b/sys/arm_regs_avalon.vhd
new file mode 100644
index 0000000..67561b2
--- /dev/null
+++ b/sys/arm_regs_avalon.vhd
@@ -0,0 +1,83 @@
+---------------------------------------------------------------------------
+-- (c) 2021 mark watson
+-- I am happy for anyone to use this for non-commercial use.
+-- If my vhdl files are used commercially or otherwise sold,
+-- please contact me for explicit permission at scrameta (gmail).
+-- This applies for source and binary form and derived works.
+---------------------------------------------------------------------------
+LIBRARY ieee;
+USE ieee.std_logic_1164.all;
+USE ieee.std_logic_misc.all;
+
+-- expose 68k cacr and vbr
+
+ENTITY arm_regs_avalon IS
+PORT 
+( 
+	CLK : IN STD_LOGIC;
+	RESET_N : IN STD_LOGIC;
+	
+	-- avalon signals
+	WRITE: IN STD_LOGIC;
+	ADDRESS : IN STD_LOGIC_VECTOR(0 downto 0); --0=vbr, 1==cache
+	WRITEDATA : IN STD_LOGIC_VECTOR(31 downto 0);
+	
+	-- expose a slow clock too, aligned with CLK
+	AVALON_SYNC_CLK : IN STD_LOGIC;
+	AVALON_CACR : OUT STD_LOGIC_VECTOR(3 downto 0);
+	AVALON_VBR : OUT STD_LOGIC_VECTOR(31 downto 0)
+);
+END arm_regs_avalon;
+
+ARCHITECTURE vhdl OF arm_regs_avalon IS
+	signal AVALON_CACR_NEXT : STD_LOGIC_VECTOR(3 downto 0);
+	signal AVALON_VBR_NEXT : STD_LOGIC_VECTOR(31 downto 0);
+	signal AVALON_CACR_REG : STD_LOGIC_VECTOR(3 downto 0);
+	signal AVALON_VBR_REG : STD_LOGIC_VECTOR(31 downto 0);
+
+	signal AVALON_CACR_SNEXT : STD_LOGIC_VECTOR(3 downto 0);
+	signal AVALON_VBR_SNEXT : STD_LOGIC_VECTOR(31 downto 0);
+	signal AVALON_CACR_SREG : STD_LOGIC_VECTOR(3 downto 0);
+	signal AVALON_VBR_SREG : STD_LOGIC_VECTOR(31 downto 0);
+BEGIN
+	process(clk,reset_n)
+	begin
+		if (reset_n='0') then
+			AVALON_CACR_REG <= (others=>'0');
+			AVALON_VBR_REG <= (others=>'0');
+		elsif (clk'event and clk='1') then
+			AVALON_VBR_REG <= AVALON_VBR_NEXT;
+			AVALON_CACR_REG <= AVALON_CACR_NEXT;
+		end if;
+	end process;
+
+	process(avalon_sync_clk,reset_n)
+	begin
+		if (reset_n='0') then
+			AVALON_CACR_SREG <= (others=>'0');
+			AVALON_VBR_SREG <= (others=>'0');
+		elsif (avalon_sync_clk'event and avalon_sync_clk='1') then
+			AVALON_VBR_SREG <= AVALON_VBR_REG;
+			AVALON_CACR_SREG <= AVALON_CACR_REG;
+		end if;
+	end process;
+
+	process(write,writedata,address)
+	begin
+		AVALON_VBR_NEXT <= AVALON_VBR_REG;
+		AVALON_CACR_NEXT <= AVALON_CACR_REG;
+
+		if (write='1') then
+			case address is
+			when "0" =>
+				AVALON_VBR_NEXT <= WRITEDATA;
+			when "1" =>
+				AVALON_CACR_NEXT <= WRITEDATA(3 downto 0);
+			when others =>
+			end case;
+		end if;
+	end process;
+
+	AVALON_CACR <= AVALON_CACR_SREG;
+	AVALON_VBR <= AVALON_VBR_SREG;
+END vhdl;
diff --git a/sys/arm_regs_avalon_hw.tcl b/sys/arm_regs_avalon_hw.tcl
new file mode 100644
index 0000000..4ba0020
--- /dev/null
+++ b/sys/arm_regs_avalon_hw.tcl
@@ -0,0 +1,134 @@
+# TCL File Generated by Component Editor 20.1
+# Wed Aug 10 20:03:33 CEST 2022
+# DO NOT MODIFY
+
+
+# 
+# arm_regs_avalon "arm_regs_avalon" v1.0
+#  2022.08.10.20:03:33
+# 
+# 
+
+# 
+# request TCL package from ACDS 16.1
+# 
+package require -exact qsys 16.1
+
+
+# 
+# module arm_regs_avalon
+# 
+set_module_property DESCRIPTION ""
+set_module_property NAME arm_regs_avalon
+set_module_property VERSION 1.0
+set_module_property INTERNAL false
+set_module_property OPAQUE_ADDRESS_MAP true
+set_module_property AUTHOR ""
+set_module_property DISPLAY_NAME arm_regs_avalon
+set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
+set_module_property EDITABLE true
+set_module_property REPORT_TO_TALKBACK false
+set_module_property ALLOW_GREYBOX_GENERATION false
+set_module_property REPORT_HIERARCHY false
+
+
+# 
+# file sets
+# 
+add_fileset QUARTUS_SYNTH QUARTUS_SYNTH "" ""
+set_fileset_property QUARTUS_SYNTH TOP_LEVEL arm_regs_avalon
+set_fileset_property QUARTUS_SYNTH ENABLE_RELATIVE_INCLUDE_PATHS false
+set_fileset_property QUARTUS_SYNTH ENABLE_FILE_OVERWRITE_MODE false
+add_fileset_file arm_regs_avalon.vhd VHDL PATH arm_regs_avalon.vhd TOP_LEVEL_FILE
+
+
+# 
+# parameters
+# 
+
+
+# 
+# display items
+# 
+
+
+# 
+# connection point clock
+# 
+add_interface clock clock end
+set_interface_property clock clockRate 0
+set_interface_property clock ENABLED true
+set_interface_property clock EXPORT_OF ""
+set_interface_property clock PORT_NAME_MAP ""
+set_interface_property clock CMSIS_SVD_VARIABLES ""
+set_interface_property clock SVD_ADDRESS_GROUP ""
+
+add_interface_port clock CLK clk Input 1
+
+
+# 
+# connection point reset
+# 
+add_interface reset reset end
+set_interface_property reset associatedClock clock
+set_interface_property reset synchronousEdges DEASSERT
+set_interface_property reset ENABLED true
+set_interface_property reset EXPORT_OF ""
+set_interface_property reset PORT_NAME_MAP ""
+set_interface_property reset CMSIS_SVD_VARIABLES ""
+set_interface_property reset SVD_ADDRESS_GROUP ""
+
+add_interface_port reset RESET_N reset_n Input 1
+
+
+# 
+# connection point conduit_end
+# 
+add_interface conduit_end conduit end
+set_interface_property conduit_end associatedClock clock
+set_interface_property conduit_end associatedReset ""
+set_interface_property conduit_end ENABLED true
+set_interface_property conduit_end EXPORT_OF ""
+set_interface_property conduit_end PORT_NAME_MAP ""
+set_interface_property conduit_end CMSIS_SVD_VARIABLES ""
+set_interface_property conduit_end SVD_ADDRESS_GROUP ""
+
+add_interface_port conduit_end AVALON_CACR avalon_cacr Output 4
+add_interface_port conduit_end AVALON_SYNC_CLK avalon_sync_clk Input 1
+add_interface_port conduit_end AVALON_VBR avalon_vbr Output 32
+
+
+# 
+# connection point avalon_slave_0
+# 
+add_interface avalon_slave_0 avalon end
+set_interface_property avalon_slave_0 addressUnits WORDS
+set_interface_property avalon_slave_0 associatedClock clock
+set_interface_property avalon_slave_0 associatedReset reset
+set_interface_property avalon_slave_0 bitsPerSymbol 8
+set_interface_property avalon_slave_0 burstOnBurstBoundariesOnly false
+set_interface_property avalon_slave_0 burstcountUnits WORDS
+set_interface_property avalon_slave_0 explicitAddressSpan 0
+set_interface_property avalon_slave_0 holdTime 0
+set_interface_property avalon_slave_0 linewrapBursts false
+set_interface_property avalon_slave_0 maximumPendingReadTransactions 0
+set_interface_property avalon_slave_0 maximumPendingWriteTransactions 0
+set_interface_property avalon_slave_0 readLatency 0
+set_interface_property avalon_slave_0 readWaitTime 1
+set_interface_property avalon_slave_0 setupTime 0
+set_interface_property avalon_slave_0 timingUnits Cycles
+set_interface_property avalon_slave_0 writeWaitTime 0
+set_interface_property avalon_slave_0 ENABLED true
+set_interface_property avalon_slave_0 EXPORT_OF ""
+set_interface_property avalon_slave_0 PORT_NAME_MAP ""
+set_interface_property avalon_slave_0 CMSIS_SVD_VARIABLES ""
+set_interface_property avalon_slave_0 SVD_ADDRESS_GROUP ""
+
+add_interface_port avalon_slave_0 WRITE write Input 1
+add_interface_port avalon_slave_0 ADDRESS address Input 1
+add_interface_port avalon_slave_0 WRITEDATA writedata Input 32
+set_interface_assignment avalon_slave_0 embeddedsw.configuration.isFlash 0
+set_interface_assignment avalon_slave_0 embeddedsw.configuration.isMemoryDevice 0
+set_interface_assignment avalon_slave_0 embeddedsw.configuration.isNonVolatileStorage 0
+set_interface_assignment avalon_slave_0 embeddedsw.configuration.isPrintableDevice 0
+
diff --git a/sys/fifo_from_hps.qip b/sys/fifo_from_hps.qip
new file mode 100644
index 0000000..f966d78
--- /dev/null
+++ b/sys/fifo_from_hps.qip
@@ -0,0 +1,5 @@
+set_global_assignment -name IP_TOOL_NAME "FIFO"
+set_global_assignment -name IP_TOOL_VERSION "20.1"
+set_global_assignment -name IP_GENERATED_DEVICE_FAMILY "{Cyclone V}"
+set_global_assignment -name VHDL_FILE [file join $::quartus(qip_path) "fifo_from_hps.vhd"]
+set_global_assignment -name MISC_FILE [file join $::quartus(qip_path) "fifo_from_hps.cmp"]
diff --git a/sys/fifo_from_hps.vhd b/sys/fifo_from_hps.vhd
new file mode 100644
index 0000000..39e60f5
--- /dev/null
+++ b/sys/fifo_from_hps.vhd
@@ -0,0 +1,201 @@
+-- megafunction wizard: %FIFO%
+-- GENERATION: STANDARD
+-- VERSION: WM1.0
+-- MODULE: dcfifo 
+
+-- ============================================================
+-- File Name: fifo_from_hps.vhd
+-- Megafunction Name(s):
+-- 			dcfifo
+--
+-- Simulation Library Files(s):
+-- 			altera_mf
+-- ============================================================
+-- ************************************************************
+-- THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
+--
+-- 20.1.1 Build 720 11/11/2020 SJ Lite Edition
+-- ************************************************************
+
+
+--Copyright (C) 2020  Intel Corporation. All rights reserved.
+--Your use of Intel Corporation's design tools, logic functions 
+--and other software and tools, and any partner logic 
+--functions, and any output files from any of the foregoing 
+--(including device programming or simulation files), and any 
+--associated documentation or information are expressly subject 
+--to the terms and conditions of the Intel Program License 
+--Subscription Agreement, the Intel Quartus Prime License Agreement,
+--the Intel FPGA IP License Agreement, or other applicable license
+--agreement, including, without limitation, that your use is for
+--the sole purpose of programming logic devices manufactured by
+--Intel and sold by Intel or its authorized distributors.  Please
+--refer to the applicable agreement for further details, at
+--https://fpgasoftware.intel.com/eula.
+
+
+LIBRARY ieee;
+USE ieee.std_logic_1164.all;
+
+LIBRARY altera_mf;
+USE altera_mf.all;
+
+ENTITY fifo_from_hps IS
+	PORT
+	(
+		data		: IN STD_LOGIC_VECTOR (59 DOWNTO 0);
+		rdclk		: IN STD_LOGIC ;
+		rdreq		: IN STD_LOGIC ;
+		wrclk		: IN STD_LOGIC ;
+		wrreq		: IN STD_LOGIC ;
+		q		: OUT STD_LOGIC_VECTOR (59 DOWNTO 0);
+		rdempty		: OUT STD_LOGIC ;
+		wrfull		: OUT STD_LOGIC ;
+		wrusedw		: OUT STD_LOGIC_VECTOR (3 DOWNTO 0)
+	);
+END fifo_from_hps;
+
+
+ARCHITECTURE SYN OF fifo_from_hps IS
+
+	SIGNAL sub_wire0	: STD_LOGIC_VECTOR (59 DOWNTO 0);
+	SIGNAL sub_wire1	: STD_LOGIC ;
+	SIGNAL sub_wire2	: STD_LOGIC ;
+	SIGNAL sub_wire3	: STD_LOGIC_VECTOR (3 DOWNTO 0);
+
+
+
+	COMPONENT dcfifo
+	GENERIC (
+		intended_device_family		: STRING;
+		lpm_numwords		: NATURAL;
+		lpm_showahead		: STRING;
+		lpm_type		: STRING;
+		lpm_width		: NATURAL;
+		lpm_widthu		: NATURAL;
+		overflow_checking		: STRING;
+		rdsync_delaypipe		: NATURAL;
+		underflow_checking		: STRING;
+		use_eab		: STRING;
+		wrsync_delaypipe		: NATURAL
+	);
+	PORT (
+			data	: IN STD_LOGIC_VECTOR (59 DOWNTO 0);
+			rdclk	: IN STD_LOGIC ;
+			rdreq	: IN STD_LOGIC ;
+			wrclk	: IN STD_LOGIC ;
+			wrreq	: IN STD_LOGIC ;
+			q	: OUT STD_LOGIC_VECTOR (59 DOWNTO 0);
+			rdempty	: OUT STD_LOGIC ;
+			wrfull	: OUT STD_LOGIC ;
+			wrusedw	: OUT STD_LOGIC_VECTOR (3 DOWNTO 0)
+	);
+	END COMPONENT;
+
+BEGIN
+	q    <= sub_wire0(59 DOWNTO 0);
+	rdempty    <= sub_wire1;
+	wrfull    <= sub_wire2;
+	wrusedw    <= sub_wire3(3 DOWNTO 0);
+
+	dcfifo_component : dcfifo
+	GENERIC MAP (
+		intended_device_family => "Cyclone V",
+		lpm_numwords => 16,
+		lpm_showahead => "ON",
+		lpm_type => "dcfifo",
+		lpm_width => 60,
+		lpm_widthu => 4,
+		overflow_checking => "ON",
+		rdsync_delaypipe => 3,
+		underflow_checking => "ON",
+		use_eab => "ON",
+		wrsync_delaypipe => 3
+	)
+	PORT MAP (
+		data => data,
+		rdclk => rdclk,
+		rdreq => rdreq,
+		wrclk => wrclk,
+		wrreq => wrreq,
+		q => sub_wire0,
+		rdempty => sub_wire1,
+		wrfull => sub_wire2,
+		wrusedw => sub_wire3
+	);
+
+
+
+END SYN;
+
+-- ============================================================
+-- CNX file retrieval info
+-- ============================================================
+-- Retrieval info: PRIVATE: AlmostEmpty NUMERIC "0"
+-- Retrieval info: PRIVATE: AlmostEmptyThr NUMERIC "-1"
+-- Retrieval info: PRIVATE: AlmostFull NUMERIC "0"
+-- Retrieval info: PRIVATE: AlmostFullThr NUMERIC "-1"
+-- Retrieval info: PRIVATE: CLOCKS_ARE_SYNCHRONIZED NUMERIC "1"
+-- Retrieval info: PRIVATE: Clock NUMERIC "4"
+-- Retrieval info: PRIVATE: Depth NUMERIC "16"
+-- Retrieval info: PRIVATE: Empty NUMERIC "1"
+-- Retrieval info: PRIVATE: Full NUMERIC "1"
+-- Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone V"
+-- Retrieval info: PRIVATE: LE_BasedFIFO NUMERIC "0"
+-- Retrieval info: PRIVATE: LegacyRREQ NUMERIC "0"
+-- Retrieval info: PRIVATE: MAX_DEPTH_BY_9 NUMERIC "0"
+-- Retrieval info: PRIVATE: OVERFLOW_CHECKING NUMERIC "0"
+-- Retrieval info: PRIVATE: Optimize NUMERIC "2"
+-- Retrieval info: PRIVATE: RAM_BLOCK_TYPE NUMERIC "0"
+-- Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "0"
+-- Retrieval info: PRIVATE: UNDERFLOW_CHECKING NUMERIC "0"
+-- Retrieval info: PRIVATE: UsedW NUMERIC "1"
+-- Retrieval info: PRIVATE: Width NUMERIC "60"
+-- Retrieval info: PRIVATE: dc_aclr NUMERIC "0"
+-- Retrieval info: PRIVATE: diff_widths NUMERIC "0"
+-- Retrieval info: PRIVATE: msb_usedw NUMERIC "0"
+-- Retrieval info: PRIVATE: output_width NUMERIC "60"
+-- Retrieval info: PRIVATE: rsEmpty NUMERIC "1"
+-- Retrieval info: PRIVATE: rsFull NUMERIC "0"
+-- Retrieval info: PRIVATE: rsUsedW NUMERIC "0"
+-- Retrieval info: PRIVATE: sc_aclr NUMERIC "0"
+-- Retrieval info: PRIVATE: sc_sclr NUMERIC "0"
+-- Retrieval info: PRIVATE: wsEmpty NUMERIC "0"
+-- Retrieval info: PRIVATE: wsFull NUMERIC "1"
+-- Retrieval info: PRIVATE: wsUsedW NUMERIC "1"
+-- Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
+-- Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone V"
+-- Retrieval info: CONSTANT: LPM_NUMWORDS NUMERIC "16"
+-- Retrieval info: CONSTANT: LPM_SHOWAHEAD STRING "ON"
+-- Retrieval info: CONSTANT: LPM_TYPE STRING "dcfifo"
+-- Retrieval info: CONSTANT: LPM_WIDTH NUMERIC "60"
+-- Retrieval info: CONSTANT: LPM_WIDTHU NUMERIC "4"
+-- Retrieval info: CONSTANT: OVERFLOW_CHECKING STRING "ON"
+-- Retrieval info: CONSTANT: RDSYNC_DELAYPIPE NUMERIC "3"
+-- Retrieval info: CONSTANT: UNDERFLOW_CHECKING STRING "ON"
+-- Retrieval info: CONSTANT: USE_EAB STRING "ON"
+-- Retrieval info: CONSTANT: WRSYNC_DELAYPIPE NUMERIC "3"
+-- Retrieval info: USED_PORT: data 0 0 60 0 INPUT NODEFVAL "data[59..0]"
+-- Retrieval info: USED_PORT: q 0 0 60 0 OUTPUT NODEFVAL "q[59..0]"
+-- Retrieval info: USED_PORT: rdclk 0 0 0 0 INPUT NODEFVAL "rdclk"
+-- Retrieval info: USED_PORT: rdempty 0 0 0 0 OUTPUT NODEFVAL "rdempty"
+-- Retrieval info: USED_PORT: rdreq 0 0 0 0 INPUT NODEFVAL "rdreq"
+-- Retrieval info: USED_PORT: wrclk 0 0 0 0 INPUT NODEFVAL "wrclk"
+-- Retrieval info: USED_PORT: wrfull 0 0 0 0 OUTPUT NODEFVAL "wrfull"
+-- Retrieval info: USED_PORT: wrreq 0 0 0 0 INPUT NODEFVAL "wrreq"
+-- Retrieval info: USED_PORT: wrusedw 0 0 4 0 OUTPUT NODEFVAL "wrusedw[3..0]"
+-- Retrieval info: CONNECT: @data 0 0 60 0 data 0 0 60 0
+-- Retrieval info: CONNECT: @rdclk 0 0 0 0 rdclk 0 0 0 0
+-- Retrieval info: CONNECT: @rdreq 0 0 0 0 rdreq 0 0 0 0
+-- Retrieval info: CONNECT: @wrclk 0 0 0 0 wrclk 0 0 0 0
+-- Retrieval info: CONNECT: @wrreq 0 0 0 0 wrreq 0 0 0 0
+-- Retrieval info: CONNECT: q 0 0 60 0 @q 0 0 60 0
+-- Retrieval info: CONNECT: rdempty 0 0 0 0 @rdempty 0 0 0 0
+-- Retrieval info: CONNECT: wrfull 0 0 0 0 @wrfull 0 0 0 0
+-- Retrieval info: CONNECT: wrusedw 0 0 4 0 @wrusedw 0 0 4 0
+-- Retrieval info: GEN_FILE: TYPE_NORMAL fifo_from_hps.vhd TRUE
+-- Retrieval info: GEN_FILE: TYPE_NORMAL fifo_from_hps.inc FALSE
+-- Retrieval info: GEN_FILE: TYPE_NORMAL fifo_from_hps.cmp TRUE
+-- Retrieval info: GEN_FILE: TYPE_NORMAL fifo_from_hps.bsf FALSE
+-- Retrieval info: GEN_FILE: TYPE_NORMAL fifo_from_hps_inst.vhd FALSE
+-- Retrieval info: LIB_FILE: altera_mf
diff --git a/sys/fifo_to_hps.qip b/sys/fifo_to_hps.qip
new file mode 100644
index 0000000..cb24ff7
--- /dev/null
+++ b/sys/fifo_to_hps.qip
@@ -0,0 +1,5 @@
+set_global_assignment -name IP_TOOL_NAME "FIFO"
+set_global_assignment -name IP_TOOL_VERSION "20.1"
+set_global_assignment -name IP_GENERATED_DEVICE_FAMILY "{Cyclone V}"
+set_global_assignment -name VHDL_FILE [file join $::quartus(qip_path) "fifo_to_hps.vhd"]
+set_global_assignment -name MISC_FILE [file join $::quartus(qip_path) "fifo_to_hps.cmp"]
diff --git a/sys/fifo_to_hps.vhd b/sys/fifo_to_hps.vhd
new file mode 100644
index 0000000..77a2408
--- /dev/null
+++ b/sys/fifo_to_hps.vhd
@@ -0,0 +1,201 @@
+-- megafunction wizard: %FIFO%
+-- GENERATION: STANDARD
+-- VERSION: WM1.0
+-- MODULE: dcfifo 
+
+-- ============================================================
+-- File Name: fifo_to_hps.vhd
+-- Megafunction Name(s):
+-- 			dcfifo
+--
+-- Simulation Library Files(s):
+-- 			altera_mf
+-- ============================================================
+-- ************************************************************
+-- THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
+--
+-- 20.1.1 Build 720 11/11/2020 SJ Lite Edition
+-- ************************************************************
+
+
+--Copyright (C) 2020  Intel Corporation. All rights reserved.
+--Your use of Intel Corporation's design tools, logic functions 
+--and other software and tools, and any partner logic 
+--functions, and any output files from any of the foregoing 
+--(including device programming or simulation files), and any 
+--associated documentation or information are expressly subject 
+--to the terms and conditions of the Intel Program License 
+--Subscription Agreement, the Intel Quartus Prime License Agreement,
+--the Intel FPGA IP License Agreement, or other applicable license
+--agreement, including, without limitation, that your use is for
+--the sole purpose of programming logic devices manufactured by
+--Intel and sold by Intel or its authorized distributors.  Please
+--refer to the applicable agreement for further details, at
+--https://fpgasoftware.intel.com/eula.
+
+
+LIBRARY ieee;
+USE ieee.std_logic_1164.all;
+
+LIBRARY altera_mf;
+USE altera_mf.all;
+
+ENTITY fifo_to_hps IS
+	PORT
+	(
+		data		: IN STD_LOGIC_VECTOR (31 DOWNTO 0);
+		rdclk		: IN STD_LOGIC ;
+		rdreq		: IN STD_LOGIC ;
+		wrclk		: IN STD_LOGIC ;
+		wrreq		: IN STD_LOGIC ;
+		q		: OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
+		rdempty		: OUT STD_LOGIC ;
+		wrfull		: OUT STD_LOGIC ;
+		wrusedw		: OUT STD_LOGIC_VECTOR (3 DOWNTO 0)
+	);
+END fifo_to_hps;
+
+
+ARCHITECTURE SYN OF fifo_to_hps IS
+
+	SIGNAL sub_wire0	: STD_LOGIC_VECTOR (31 DOWNTO 0);
+	SIGNAL sub_wire1	: STD_LOGIC ;
+	SIGNAL sub_wire2	: STD_LOGIC ;
+	SIGNAL sub_wire3	: STD_LOGIC_VECTOR (3 DOWNTO 0);
+
+
+
+	COMPONENT dcfifo
+	GENERIC (
+		intended_device_family		: STRING;
+		lpm_numwords		: NATURAL;
+		lpm_showahead		: STRING;
+		lpm_type		: STRING;
+		lpm_width		: NATURAL;
+		lpm_widthu		: NATURAL;
+		overflow_checking		: STRING;
+		rdsync_delaypipe		: NATURAL;
+		underflow_checking		: STRING;
+		use_eab		: STRING;
+		wrsync_delaypipe		: NATURAL
+	);
+	PORT (
+			data	: IN STD_LOGIC_VECTOR (31 DOWNTO 0);
+			rdclk	: IN STD_LOGIC ;
+			rdreq	: IN STD_LOGIC ;
+			wrclk	: IN STD_LOGIC ;
+			wrreq	: IN STD_LOGIC ;
+			q	: OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
+			rdempty	: OUT STD_LOGIC ;
+			wrfull	: OUT STD_LOGIC ;
+			wrusedw	: OUT STD_LOGIC_VECTOR (3 DOWNTO 0)
+	);
+	END COMPONENT;
+
+BEGIN
+	q    <= sub_wire0(31 DOWNTO 0);
+	rdempty    <= sub_wire1;
+	wrfull    <= sub_wire2;
+	wrusedw    <= sub_wire3(3 DOWNTO 0);
+
+	dcfifo_component : dcfifo
+	GENERIC MAP (
+		intended_device_family => "Cyclone V",
+		lpm_numwords => 16,
+		lpm_showahead => "OFF",
+		lpm_type => "dcfifo",
+		lpm_width => 32,
+		lpm_widthu => 4,
+		overflow_checking => "ON",
+		rdsync_delaypipe => 3,
+		underflow_checking => "ON",
+		use_eab => "ON",
+		wrsync_delaypipe => 3
+	)
+	PORT MAP (
+		data => data,
+		rdclk => rdclk,
+		rdreq => rdreq,
+		wrclk => wrclk,
+		wrreq => wrreq,
+		q => sub_wire0,
+		rdempty => sub_wire1,
+		wrfull => sub_wire2,
+		wrusedw => sub_wire3
+	);
+
+
+
+END SYN;
+
+-- ============================================================
+-- CNX file retrieval info
+-- ============================================================
+-- Retrieval info: PRIVATE: AlmostEmpty NUMERIC "0"
+-- Retrieval info: PRIVATE: AlmostEmptyThr NUMERIC "-1"
+-- Retrieval info: PRIVATE: AlmostFull NUMERIC "0"
+-- Retrieval info: PRIVATE: AlmostFullThr NUMERIC "-1"
+-- Retrieval info: PRIVATE: CLOCKS_ARE_SYNCHRONIZED NUMERIC "1"
+-- Retrieval info: PRIVATE: Clock NUMERIC "4"
+-- Retrieval info: PRIVATE: Depth NUMERIC "16"
+-- Retrieval info: PRIVATE: Empty NUMERIC "1"
+-- Retrieval info: PRIVATE: Full NUMERIC "1"
+-- Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone V"
+-- Retrieval info: PRIVATE: LE_BasedFIFO NUMERIC "0"
+-- Retrieval info: PRIVATE: LegacyRREQ NUMERIC "1"
+-- Retrieval info: PRIVATE: MAX_DEPTH_BY_9 NUMERIC "0"
+-- Retrieval info: PRIVATE: OVERFLOW_CHECKING NUMERIC "0"
+-- Retrieval info: PRIVATE: Optimize NUMERIC "2"
+-- Retrieval info: PRIVATE: RAM_BLOCK_TYPE NUMERIC "0"
+-- Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "0"
+-- Retrieval info: PRIVATE: UNDERFLOW_CHECKING NUMERIC "0"
+-- Retrieval info: PRIVATE: UsedW NUMERIC "1"
+-- Retrieval info: PRIVATE: Width NUMERIC "32"
+-- Retrieval info: PRIVATE: dc_aclr NUMERIC "0"
+-- Retrieval info: PRIVATE: diff_widths NUMERIC "0"
+-- Retrieval info: PRIVATE: msb_usedw NUMERIC "0"
+-- Retrieval info: PRIVATE: output_width NUMERIC "32"
+-- Retrieval info: PRIVATE: rsEmpty NUMERIC "1"
+-- Retrieval info: PRIVATE: rsFull NUMERIC "0"
+-- Retrieval info: PRIVATE: rsUsedW NUMERIC "0"
+-- Retrieval info: PRIVATE: sc_aclr NUMERIC "0"
+-- Retrieval info: PRIVATE: sc_sclr NUMERIC "0"
+-- Retrieval info: PRIVATE: wsEmpty NUMERIC "0"
+-- Retrieval info: PRIVATE: wsFull NUMERIC "1"
+-- Retrieval info: PRIVATE: wsUsedW NUMERIC "1"
+-- Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
+-- Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone V"
+-- Retrieval info: CONSTANT: LPM_NUMWORDS NUMERIC "16"
+-- Retrieval info: CONSTANT: LPM_SHOWAHEAD STRING "OFF"
+-- Retrieval info: CONSTANT: LPM_TYPE STRING "dcfifo"
+-- Retrieval info: CONSTANT: LPM_WIDTH NUMERIC "32"
+-- Retrieval info: CONSTANT: LPM_WIDTHU NUMERIC "4"
+-- Retrieval info: CONSTANT: OVERFLOW_CHECKING STRING "ON"
+-- Retrieval info: CONSTANT: RDSYNC_DELAYPIPE NUMERIC "3"
+-- Retrieval info: CONSTANT: UNDERFLOW_CHECKING STRING "ON"
+-- Retrieval info: CONSTANT: USE_EAB STRING "ON"
+-- Retrieval info: CONSTANT: WRSYNC_DELAYPIPE NUMERIC "3"
+-- Retrieval info: USED_PORT: data 0 0 32 0 INPUT NODEFVAL "data[31..0]"
+-- Retrieval info: USED_PORT: q 0 0 32 0 OUTPUT NODEFVAL "q[31..0]"
+-- Retrieval info: USED_PORT: rdclk 0 0 0 0 INPUT NODEFVAL "rdclk"
+-- Retrieval info: USED_PORT: rdempty 0 0 0 0 OUTPUT NODEFVAL "rdempty"
+-- Retrieval info: USED_PORT: rdreq 0 0 0 0 INPUT NODEFVAL "rdreq"
+-- Retrieval info: USED_PORT: wrclk 0 0 0 0 INPUT NODEFVAL "wrclk"
+-- Retrieval info: USED_PORT: wrfull 0 0 0 0 OUTPUT NODEFVAL "wrfull"
+-- Retrieval info: USED_PORT: wrreq 0 0 0 0 INPUT NODEFVAL "wrreq"
+-- Retrieval info: USED_PORT: wrusedw 0 0 4 0 OUTPUT NODEFVAL "wrusedw[3..0]"
+-- Retrieval info: CONNECT: @data 0 0 32 0 data 0 0 32 0
+-- Retrieval info: CONNECT: @rdclk 0 0 0 0 rdclk 0 0 0 0
+-- Retrieval info: CONNECT: @rdreq 0 0 0 0 rdreq 0 0 0 0
+-- Retrieval info: CONNECT: @wrclk 0 0 0 0 wrclk 0 0 0 0
+-- Retrieval info: CONNECT: @wrreq 0 0 0 0 wrreq 0 0 0 0
+-- Retrieval info: CONNECT: q 0 0 32 0 @q 0 0 32 0
+-- Retrieval info: CONNECT: rdempty 0 0 0 0 @rdempty 0 0 0 0
+-- Retrieval info: CONNECT: wrfull 0 0 0 0 @wrfull 0 0 0 0
+-- Retrieval info: CONNECT: wrusedw 0 0 4 0 @wrusedw 0 0 4 0
+-- Retrieval info: GEN_FILE: TYPE_NORMAL fifo_to_hps.vhd TRUE
+-- Retrieval info: GEN_FILE: TYPE_NORMAL fifo_to_hps.inc FALSE
+-- Retrieval info: GEN_FILE: TYPE_NORMAL fifo_to_hps.cmp TRUE
+-- Retrieval info: GEN_FILE: TYPE_NORMAL fifo_to_hps.bsf FALSE
+-- Retrieval info: GEN_FILE: TYPE_NORMAL fifo_to_hps_inst.vhd FALSE
+-- Retrieval info: LIB_FILE: altera_mf
diff --git a/sys/hps_fpga_bridge.qsys b/sys/hps_fpga_bridge.qsys
index 6f4fe08..cad9980 100644
--- a/sys/hps_fpga_bridge.qsys
+++ b/sys/hps_fpga_bridge.qsys
@@ -13,7 +13,7 @@
    {
       datum _sortIndex
       {
-         value = "3";
+         value = "2";
          type = "int";
       }
    }
@@ -25,6 +25,22 @@
          type = "String";
       }
    }
+   element arm_regs_avalon_0
+   {
+      datum _sortIndex
+      {
+         value = "3";
+         type = "int";
+      }
+   }
+   element arm_regs_avalon_0.avalon_slave_0
+   {
+      datum baseAddress
+      {
+         value = "16777224";
+         type = "String";
+      }
+   }
    element clk_0
    {
       datum _sortIndex
@@ -49,17 +65,49 @@
          type = "String";
       }
    }
+   element hps_fpga_bridge
+   {
+      datum _originalDeviceFamily
+      {
+         value = "Cyclone V";
+         type = "String";
+      }
+   }
+   element hps_fpga_bridge
+   {
+      datum _originalDeviceFamily
+      {
+         value = "Cyclone V";
+         type = "String";
+      }
+   }
+   element hps_fpga_bridge
+   {
+      datum _originalDeviceFamily
+      {
+         value = "Cyclone V";
+         type = "String";
+      }
+   }
    element hybridcpu0
    {
       datum _sortIndex
       {
-         value = "2";
+         value = "4";
          type = "int";
       }
    }
+   element hybridcpu0.avalon_slave_0
+   {
+      datum baseAddress
+      {
+         value = "0";
+         type = "String";
+      }
+   }
 }
 ]]></parameter>
- <parameter name="clockCrossingAdapter" value="HANDSHAKE" />
+ <parameter name="clockCrossingAdapter" value="AUTO" />
  <parameter name="device" value="5CSEBA6U23I7" />
  <parameter name="deviceFamily" value="Cyclone V" />
  <parameter name="deviceSpeedGrade" value="7" />
@@ -70,7 +118,7 @@
  <parameter name="hdlLanguage" value="VERILOG" />
  <parameter name="hideFromIPCatalog" value="false" />
  <parameter name="lockedInterfaceDefinition" value="" />
- <parameter name="maxAdditionalLatency" value="1" />
+ <parameter name="maxAdditionalLatency" value="0" />
  <parameter name="projectName" value="" />
  <parameter name="sopcBorderPoints" value="false" />
  <parameter name="systemHash" value="0" />
@@ -88,6 +136,11 @@
    internal="arm_irq_avalon_0.conduit_end"
    type="conduit"
    dir="end" />
+ <interface
+   name="avalonregs"
+   internal="arm_regs_avalon_0.conduit_end"
+   type="conduit"
+   dir="end" />
  <interface name="clk" internal="clk_0.clk_in" type="clock" dir="end" />
  <interface name="memory" internal="hps_0.memory" type="conduit" dir="end" />
  <module
@@ -95,6 +148,11 @@
    kind="arm_irq_avalon"
    version="1.0"
    enabled="1" />
+ <module
+   name="arm_regs_avalon_0"
+   kind="arm_regs_avalon"
+   version="1.0"
+   enabled="1" />
  <module name="clk_0" kind="clock_source" version="20.1" enabled="1">
   <parameter name="clockFrequency" value="114000000" />
   <parameter name="clockFrequencyKnown" value="true" />
@@ -636,26 +694,40 @@
    kind="avalon"
    version="20.1"
    start="hps_0.h2f_axi_master"
-   end="hybridcpu0.avalon_slave_0">
+   end="arm_irq_avalon_0.avalon_slave_0">
   <parameter name="arbitrationPriority" value="1" />
-  <parameter name="baseAddress" value="0x0000" />
+  <parameter name="baseAddress" value="0x01000000" />
   <parameter name="defaultConnection" value="false" />
  </connection>
  <connection
    kind="avalon"
    version="20.1"
    start="hps_0.h2f_axi_master"
-   end="arm_irq_avalon_0.avalon_slave_0">
+   end="arm_regs_avalon_0.avalon_slave_0">
   <parameter name="arbitrationPriority" value="1" />
-  <parameter name="baseAddress" value="0x01000000" />
+  <parameter name="baseAddress" value="0x01000008" />
+  <parameter name="defaultConnection" value="false" />
+ </connection>
+ <connection
+   kind="avalon"
+   version="20.1"
+   start="hps_0.h2f_axi_master"
+   end="hybridcpu0.avalon_slave_0">
+  <parameter name="arbitrationPriority" value="1" />
+  <parameter name="baseAddress" value="0x0000" />
   <parameter name="defaultConnection" value="false" />
  </connection>
- <connection kind="clock" version="20.1" start="clk_0.clk" end="hybridcpu0.clock" />
  <connection
    kind="clock"
    version="20.1"
    start="clk_0.clk"
    end="arm_irq_avalon_0.clock" />
+ <connection
+   kind="clock"
+   version="20.1"
+   start="clk_0.clk"
+   end="arm_regs_avalon_0.clock" />
+ <connection kind="clock" version="20.1" start="clk_0.clk" end="hybridcpu0.clock" />
  <connection
    kind="clock"
    version="20.1"
@@ -665,19 +737,24 @@
    kind="reset"
    version="20.1"
    start="clk_0.clk_reset"
-   end="hybridcpu0.reset" />
+   end="arm_irq_avalon_0.reset" />
  <connection
    kind="reset"
    version="20.1"
    start="clk_0.clk_reset"
-   end="arm_irq_avalon_0.reset" />
+   end="arm_regs_avalon_0.reset" />
+ <connection
+   kind="reset"
+   version="20.1"
+   start="clk_0.clk_reset"
+   end="hybridcpu0.reset" />
  <connection
    kind="reset"
    version="20.1"
    start="hps_0.h2f_reset"
    end="clk_0.clk_in_reset" />
- <interconnectRequirement for="$system" name="qsys_mm.clockCrossingAdapter" value="HANDSHAKE" />
+ <interconnectRequirement for="$system" name="qsys_mm.clockCrossingAdapter" value="AUTO" />
  <interconnectRequirement for="$system" name="qsys_mm.enableEccProtection" value="FALSE" />
  <interconnectRequirement for="$system" name="qsys_mm.insertDefaultSlave" value="FALSE" />
- <interconnectRequirement for="$system" name="qsys_mm.maxAdditionalLatency" value="1" />
+ <interconnectRequirement for="$system" name="qsys_mm.maxAdditionalLatency" value="0" />
 </system>
diff --git a/sys/hps_fpga_bridge/hps_fpga_bridge.html b/sys/hps_fpga_bridge/hps_fpga_bridge.html
index 37b107d..1673961 100644
--- a/sys/hps_fpga_bridge/hps_fpga_bridge.html
+++ b/sys/hps_fpga_bridge/hps_fpga_bridge.html
@@ -67,7 +67,7 @@ div.greydiv { vertical-align:top ; text-align:center ; background:#eeeeee ; bord
   </table>
   <table class="blueBar">
    <tr>
-    <td class="l">2022.01.15.10:42:44</td>
+    <td class="l">2022.08.14.10:42:11</td>
     <td class="r">Datasheet</td>
    </tr>
   </table>
@@ -91,6 +91,9 @@ div.greydiv { vertical-align:top ; text-align:center ; background:#eeeeee ; bord
      <a href="#module_arm_irq_avalon_0"><b>arm_irq_avalon_0</b>
      </a> arm_irq_avalon 1.0
      <br/>&#160;&#160;
+     <a href="#module_arm_regs_avalon_0"><b>arm_regs_avalon_0</b>
+     </a> arm_regs_avalon 1.0
+     <br/>&#160;&#160;
      <a href="#module_hybridcpu0"><b>hybridcpu0</b>
      </a> arm_avalon 1.0</span>
    </div>
@@ -140,6 +143,23 @@ div.greydiv { vertical-align:top ; text-align:center ; background:#eeeeee ; bord
     <td class="addr"><span style="color:#989898">0x</span>c1000000</td>
     <td class="addr"><span style="color:#989898">0x</span>c1000000</td>
    </tr>
+   <tr>
+    <td class="slavemodule">&#160;
+     <a href="#module_arm_regs_avalon_0"><b>arm_regs_avalon_0</b>
+     </a>
+    </td>
+    <td class="empty"></td>
+    <td class="empty"></td>
+    <td class="empty"></td>
+    <td class="empty"></td>
+   </tr>
+   <tr>
+    <td class="slaveb">avalon_slave_0&#160;</td>
+    <td class="addr"><span style="color:#989898">0x</span>01000008</td>
+    <td class="empty"></td>
+    <td class="addr"><span style="color:#989898">0x</span>c1000008</td>
+    <td class="addr"><span style="color:#989898">0x</span>c1000008</td>
+   </tr>
    <tr>
     <td class="slavemodule">&#160;
      <a href="#module_hps_0_bridges"><b>hps_0_bridges</b>
@@ -929,6 +949,69 @@ div.greydiv { vertical-align:top ; text-align:center ; background:#eeeeee ; bord
     </tr>
    </table>
   </div>
+  <a name="module_arm_regs_avalon_0"> </a>
+  <div>
+   <hr/>
+   <h2>arm_regs_avalon_0</h2>arm_regs_avalon v1.0
+   <br/>
+   <div class="greydiv">
+    <table class="connectionboxes">
+     <tr>
+      <td class="neighbor" rowspan="2">
+       <a href="#module_hps_0_bridges">hps_0_bridges</a>
+      </td>
+      <td class="from">h2f&#160;&#160;</td>
+      <td class="main" rowspan="7">arm_regs_avalon_0</td>
+     </tr>
+     <tr>
+      <td class="to">&#160;&#160;avalon_slave_0</td>
+     </tr>
+     <tr style="height:6px">
+      <td></td>
+     </tr>
+     <tr>
+      <td class="neighbor" rowspan="4">
+       <a href="#module_clk_0">clk_0</a>
+      </td>
+      <td class="from">clk&#160;&#160;</td>
+     </tr>
+     <tr>
+      <td class="to">&#160;&#160;clock</td>
+     </tr>
+     <tr>
+      <td class="from">clk_reset&#160;&#160;</td>
+     </tr>
+     <tr>
+      <td class="to">&#160;&#160;reset</td>
+     </tr>
+    </table>
+   </div>
+   <br/>
+   <br/>
+   <table class="flowbox">
+    <tr>
+     <td class="parametersbox">
+      <h2>Parameters</h2>
+      <table>
+       <tr>
+        <td class="parametername">deviceFamily</td>
+        <td class="parametervalue">UNKNOWN</td>
+       </tr>
+       <tr>
+        <td class="parametername">generateLegacySim</td>
+        <td class="parametervalue">false</td>
+       </tr>
+      </table>
+     </td>
+    </tr>
+   </table>&#160;&#160;
+   <table class="flowbox">
+    <tr>
+     <td class="parametersbox">
+      <h2>Software Assignments</h2>(none)</td>
+    </tr>
+   </table>
+  </div>
   <a name="module_clk_0"> </a>
   <div>
    <hr/>
@@ -941,7 +1024,7 @@ div.greydiv { vertical-align:top ; text-align:center ; background:#eeeeee ; bord
        <a href="#module_hps_0_bridges">hps_0_bridges</a>
       </td>
       <td class="from">h2f_reset&#160;&#160;</td>
-      <td class="main" rowspan="14">clk_0</td>
+      <td class="main" rowspan="19">clk_0</td>
      </tr>
      <tr>
       <td class="to">&#160;&#160;clk_in_reset</td>
@@ -951,7 +1034,7 @@ div.greydiv { vertical-align:top ; text-align:center ; background:#eeeeee ; bord
       <td></td>
       <td class="from">clk&#160;&#160;</td>
       <td class="neighbor" rowspan="4">
-       <a href="#module_hybridcpu0">hybridcpu0</a>
+       <a href="#module_arm_irq_avalon_0">arm_irq_avalon_0</a>
       </td>
      </tr>
      <tr>
@@ -977,7 +1060,33 @@ div.greydiv { vertical-align:top ; text-align:center ; background:#eeeeee ; bord
       <td></td>
       <td class="from">clk&#160;&#160;</td>
       <td class="neighbor" rowspan="4">
-       <a href="#module_arm_irq_avalon_0">arm_irq_avalon_0</a>
+       <a href="#module_arm_regs_avalon_0">arm_regs_avalon_0</a>
+      </td>
+     </tr>
+     <tr>
+      <td></td>
+      <td></td>
+      <td class="to">&#160;&#160;clock</td>
+     </tr>
+     <tr>
+      <td></td>
+      <td></td>
+      <td class="from">clk_reset&#160;&#160;</td>
+     </tr>
+     <tr>
+      <td></td>
+      <td></td>
+      <td class="to">&#160;&#160;reset</td>
+     </tr>
+     <tr style="height:6px">
+      <td></td>
+     </tr>
+     <tr>
+      <td></td>
+      <td></td>
+      <td class="from">clk&#160;&#160;</td>
+      <td class="neighbor" rowspan="4">
+       <a href="#module_hybridcpu0">hybridcpu0</a>
       </td>
      </tr>
      <tr>
@@ -20131,7 +20240,7 @@ div.greydiv { vertical-align:top ; text-align:center ; background:#eeeeee ; bord
        <a href="#module_hps_0_clk_0">hps_0_clk_0</a>
       </td>
       <td class="from">clk_reset&#160;&#160;</td>
-      <td class="main" rowspan="21">hps_0_bridges</td>
+      <td class="main" rowspan="24">hps_0_bridges</td>
      </tr>
      <tr>
       <td class="to">&#160;&#160;reset_sink</td>
@@ -20183,7 +20292,7 @@ div.greydiv { vertical-align:top ; text-align:center ; background:#eeeeee ; bord
       <td></td>
       <td class="from">h2f&#160;&#160;</td>
       <td class="neighbor" rowspan="2">
-       <a href="#module_hybridcpu0">hybridcpu0</a>
+       <a href="#module_arm_irq_avalon_0">arm_irq_avalon_0</a>
       </td>
      </tr>
      <tr>
@@ -20199,7 +20308,23 @@ div.greydiv { vertical-align:top ; text-align:center ; background:#eeeeee ; bord
       <td></td>
       <td class="from">h2f&#160;&#160;</td>
       <td class="neighbor" rowspan="2">
-       <a href="#module_arm_irq_avalon_0">arm_irq_avalon_0</a>
+       <a href="#module_arm_regs_avalon_0">arm_regs_avalon_0</a>
+      </td>
+     </tr>
+     <tr>
+      <td></td>
+      <td></td>
+      <td class="to">&#160;&#160;avalon_slave_0</td>
+     </tr>
+     <tr style="height:6px">
+      <td></td>
+     </tr>
+     <tr>
+      <td></td>
+      <td></td>
+      <td class="from">h2f&#160;&#160;</td>
+      <td class="neighbor" rowspan="2">
+       <a href="#module_hybridcpu0">hybridcpu0</a>
       </td>
      </tr>
      <tr>
@@ -27463,8 +27588,8 @@ div.greydiv { vertical-align:top ; text-align:center ; background:#eeeeee ; bord
   </div>
   <table class="blueBar">
    <tr>
-    <td class="l">generation took 0.01 seconds</td>
-    <td class="r">rendering took 0.28 seconds</td>
+    <td class="l">generation took 0.00 seconds</td>
+    <td class="r">rendering took 0.19 seconds</td>
    </tr>
   </table>
  </body>
diff --git a/sys/hps_fpga_bridge/hps_fpga_bridge_bb.v b/sys/hps_fpga_bridge/hps_fpga_bridge_bb.v
new file mode 100644
index 0000000..7a146e7
--- /dev/null
+++ b/sys/hps_fpga_bridge/hps_fpga_bridge_bb.v
@@ -0,0 +1,70 @@
+
+module hps_fpga_bridge (
+	avalonirq_avalon_irq_n,
+	avalonirq_avalon_sync_clk,
+	avalonirq_avalon_reset_n,
+	avalonregs_avalon_cacr,
+	avalonregs_avalon_sync_clk,
+	avalonregs_avalon_vbr,
+	clk_clk,
+	memory_mem_a,
+	memory_mem_ba,
+	memory_mem_ck,
+	memory_mem_ck_n,
+	memory_mem_cke,
+	memory_mem_cs_n,
+	memory_mem_ras_n,
+	memory_mem_cas_n,
+	memory_mem_we_n,
+	memory_mem_reset_n,
+	memory_mem_dq,
+	memory_mem_dqs,
+	memory_mem_dqs_n,
+	memory_mem_odt,
+	memory_mem_dm,
+	memory_oct_rzqin,
+	avalon1_hybridcpu_address,
+	avalon1_hybridcpu_byteenable,
+	avalon1_hybridcpu_complete,
+	avalon1_hybridcpu_read,
+	avalon1_hybridcpu_readdata,
+	avalon1_hybridcpu_sync_clk,
+	avalon1_hybridcpu_write,
+	avalon1_hybridcpu_writedata,
+	avalon1_hybridcpu_request,
+	avalon1_hybridcpu_longword);	
+
+	input	[2:0]	avalonirq_avalon_irq_n;
+	input		avalonirq_avalon_sync_clk;
+	input		avalonirq_avalon_reset_n;
+	output	[3:0]	avalonregs_avalon_cacr;
+	input		avalonregs_avalon_sync_clk;
+	output	[31:0]	avalonregs_avalon_vbr;
+	input		clk_clk;
+	output	[14:0]	memory_mem_a;
+	output	[2:0]	memory_mem_ba;
+	output		memory_mem_ck;
+	output		memory_mem_ck_n;
+	output		memory_mem_cke;
+	output		memory_mem_cs_n;
+	output		memory_mem_ras_n;
+	output		memory_mem_cas_n;
+	output		memory_mem_we_n;
+	output		memory_mem_reset_n;
+	inout	[31:0]	memory_mem_dq;
+	inout	[3:0]	memory_mem_dqs;
+	inout	[3:0]	memory_mem_dqs_n;
+	output		memory_mem_odt;
+	output	[3:0]	memory_mem_dm;
+	input		memory_oct_rzqin;
+	output	[22:0]	avalon1_hybridcpu_address;
+	output	[1:0]	avalon1_hybridcpu_byteenable;
+	input		avalon1_hybridcpu_complete;
+	output		avalon1_hybridcpu_read;
+	input	[15:0]	avalon1_hybridcpu_readdata;
+	input		avalon1_hybridcpu_sync_clk;
+	output		avalon1_hybridcpu_write;
+	output	[15:0]	avalon1_hybridcpu_writedata;
+	output		avalon1_hybridcpu_request;
+	output		avalon1_hybridcpu_longword;
+endmodule
diff --git a/sys/hps_fpga_bridge/hps_fpga_bridge_inst.v b/sys/hps_fpga_bridge/hps_fpga_bridge_inst.v
new file mode 100644
index 0000000..73279fe
--- /dev/null
+++ b/sys/hps_fpga_bridge/hps_fpga_bridge_inst.v
@@ -0,0 +1,36 @@
+	hps_fpga_bridge u0 (
+		.avalonirq_avalon_irq_n       (<connected-to-avalonirq_avalon_irq_n>),       //  avalonirq.avalon_irq_n
+		.avalonirq_avalon_sync_clk    (<connected-to-avalonirq_avalon_sync_clk>),    //           .avalon_sync_clk
+		.avalonirq_avalon_reset_n     (<connected-to-avalonirq_avalon_reset_n>),     //           .avalon_reset_n
+		.avalonregs_avalon_cacr       (<connected-to-avalonregs_avalon_cacr>),       // avalonregs.avalon_cacr
+		.avalonregs_avalon_sync_clk   (<connected-to-avalonregs_avalon_sync_clk>),   //           .avalon_sync_clk
+		.avalonregs_avalon_vbr        (<connected-to-avalonregs_avalon_vbr>),        //           .avalon_vbr
+		.clk_clk                      (<connected-to-clk_clk>),                      //        clk.clk
+		.memory_mem_a                 (<connected-to-memory_mem_a>),                 //     memory.mem_a
+		.memory_mem_ba                (<connected-to-memory_mem_ba>),                //           .mem_ba
+		.memory_mem_ck                (<connected-to-memory_mem_ck>),                //           .mem_ck
+		.memory_mem_ck_n              (<connected-to-memory_mem_ck_n>),              //           .mem_ck_n
+		.memory_mem_cke               (<connected-to-memory_mem_cke>),               //           .mem_cke
+		.memory_mem_cs_n              (<connected-to-memory_mem_cs_n>),              //           .mem_cs_n
+		.memory_mem_ras_n             (<connected-to-memory_mem_ras_n>),             //           .mem_ras_n
+		.memory_mem_cas_n             (<connected-to-memory_mem_cas_n>),             //           .mem_cas_n
+		.memory_mem_we_n              (<connected-to-memory_mem_we_n>),              //           .mem_we_n
+		.memory_mem_reset_n           (<connected-to-memory_mem_reset_n>),           //           .mem_reset_n
+		.memory_mem_dq                (<connected-to-memory_mem_dq>),                //           .mem_dq
+		.memory_mem_dqs               (<connected-to-memory_mem_dqs>),               //           .mem_dqs
+		.memory_mem_dqs_n             (<connected-to-memory_mem_dqs_n>),             //           .mem_dqs_n
+		.memory_mem_odt               (<connected-to-memory_mem_odt>),               //           .mem_odt
+		.memory_mem_dm                (<connected-to-memory_mem_dm>),                //           .mem_dm
+		.memory_oct_rzqin             (<connected-to-memory_oct_rzqin>),             //           .oct_rzqin
+		.avalon1_hybridcpu_address    (<connected-to-avalon1_hybridcpu_address>),    //    avalon1.hybridcpu_address
+		.avalon1_hybridcpu_byteenable (<connected-to-avalon1_hybridcpu_byteenable>), //           .hybridcpu_byteenable
+		.avalon1_hybridcpu_complete   (<connected-to-avalon1_hybridcpu_complete>),   //           .hybridcpu_complete
+		.avalon1_hybridcpu_read       (<connected-to-avalon1_hybridcpu_read>),       //           .hybridcpu_read
+		.avalon1_hybridcpu_readdata   (<connected-to-avalon1_hybridcpu_readdata>),   //           .hybridcpu_readdata
+		.avalon1_hybridcpu_sync_clk   (<connected-to-avalon1_hybridcpu_sync_clk>),   //           .hybridcpu_sync_clk
+		.avalon1_hybridcpu_write      (<connected-to-avalon1_hybridcpu_write>),      //           .hybridcpu_write
+		.avalon1_hybridcpu_writedata  (<connected-to-avalon1_hybridcpu_writedata>),  //           .hybridcpu_writedata
+		.avalon1_hybridcpu_request    (<connected-to-avalon1_hybridcpu_request>),    //           .hybridcpu_request
+		.avalon1_hybridcpu_longword   (<connected-to-avalon1_hybridcpu_longword>)    //           .hybridcpu_longword
+	);
+
diff --git a/sys/hps_fpga_bridge/hps_fpga_bridge_inst.vhd b/sys/hps_fpga_bridge/hps_fpga_bridge_inst.vhd
new file mode 100644
index 0000000..8d90559
--- /dev/null
+++ b/sys/hps_fpga_bridge/hps_fpga_bridge_inst.vhd
@@ -0,0 +1,75 @@
+	component hps_fpga_bridge is
+		port (
+			avalonirq_avalon_irq_n       : in    std_logic_vector(2 downto 0)  := (others => 'X'); -- avalon_irq_n
+			avalonirq_avalon_sync_clk    : in    std_logic                     := 'X';             -- avalon_sync_clk
+			avalonirq_avalon_reset_n     : in    std_logic                     := 'X';             -- avalon_reset_n
+			avalonregs_avalon_cacr       : out   std_logic_vector(3 downto 0);                     -- avalon_cacr
+			avalonregs_avalon_sync_clk   : in    std_logic                     := 'X';             -- avalon_sync_clk
+			avalonregs_avalon_vbr        : out   std_logic_vector(31 downto 0);                    -- avalon_vbr
+			clk_clk                      : in    std_logic                     := 'X';             -- clk
+			memory_mem_a                 : out   std_logic_vector(14 downto 0);                    -- mem_a
+			memory_mem_ba                : out   std_logic_vector(2 downto 0);                     -- mem_ba
+			memory_mem_ck                : out   std_logic;                                        -- mem_ck
+			memory_mem_ck_n              : out   std_logic;                                        -- mem_ck_n
+			memory_mem_cke               : out   std_logic;                                        -- mem_cke
+			memory_mem_cs_n              : out   std_logic;                                        -- mem_cs_n
+			memory_mem_ras_n             : out   std_logic;                                        -- mem_ras_n
+			memory_mem_cas_n             : out   std_logic;                                        -- mem_cas_n
+			memory_mem_we_n              : out   std_logic;                                        -- mem_we_n
+			memory_mem_reset_n           : out   std_logic;                                        -- mem_reset_n
+			memory_mem_dq                : inout std_logic_vector(31 downto 0) := (others => 'X'); -- mem_dq
+			memory_mem_dqs               : inout std_logic_vector(3 downto 0)  := (others => 'X'); -- mem_dqs
+			memory_mem_dqs_n             : inout std_logic_vector(3 downto 0)  := (others => 'X'); -- mem_dqs_n
+			memory_mem_odt               : out   std_logic;                                        -- mem_odt
+			memory_mem_dm                : out   std_logic_vector(3 downto 0);                     -- mem_dm
+			memory_oct_rzqin             : in    std_logic                     := 'X';             -- oct_rzqin
+			avalon1_hybridcpu_address    : out   std_logic_vector(22 downto 0);                    -- hybridcpu_address
+			avalon1_hybridcpu_byteenable : out   std_logic_vector(1 downto 0);                     -- hybridcpu_byteenable
+			avalon1_hybridcpu_complete   : in    std_logic                     := 'X';             -- hybridcpu_complete
+			avalon1_hybridcpu_read       : out   std_logic;                                        -- hybridcpu_read
+			avalon1_hybridcpu_readdata   : in    std_logic_vector(15 downto 0) := (others => 'X'); -- hybridcpu_readdata
+			avalon1_hybridcpu_sync_clk   : in    std_logic                     := 'X';             -- hybridcpu_sync_clk
+			avalon1_hybridcpu_write      : out   std_logic;                                        -- hybridcpu_write
+			avalon1_hybridcpu_writedata  : out   std_logic_vector(15 downto 0);                    -- hybridcpu_writedata
+			avalon1_hybridcpu_request    : out   std_logic;                                        -- hybridcpu_request
+			avalon1_hybridcpu_longword   : out   std_logic                                         -- hybridcpu_longword
+		);
+	end component hps_fpga_bridge;
+
+	u0 : component hps_fpga_bridge
+		port map (
+			avalonirq_avalon_irq_n       => CONNECTED_TO_avalonirq_avalon_irq_n,       --  avalonirq.avalon_irq_n
+			avalonirq_avalon_sync_clk    => CONNECTED_TO_avalonirq_avalon_sync_clk,    --           .avalon_sync_clk
+			avalonirq_avalon_reset_n     => CONNECTED_TO_avalonirq_avalon_reset_n,     --           .avalon_reset_n
+			avalonregs_avalon_cacr       => CONNECTED_TO_avalonregs_avalon_cacr,       -- avalonregs.avalon_cacr
+			avalonregs_avalon_sync_clk   => CONNECTED_TO_avalonregs_avalon_sync_clk,   --           .avalon_sync_clk
+			avalonregs_avalon_vbr        => CONNECTED_TO_avalonregs_avalon_vbr,        --           .avalon_vbr
+			clk_clk                      => CONNECTED_TO_clk_clk,                      --        clk.clk
+			memory_mem_a                 => CONNECTED_TO_memory_mem_a,                 --     memory.mem_a
+			memory_mem_ba                => CONNECTED_TO_memory_mem_ba,                --           .mem_ba
+			memory_mem_ck                => CONNECTED_TO_memory_mem_ck,                --           .mem_ck
+			memory_mem_ck_n              => CONNECTED_TO_memory_mem_ck_n,              --           .mem_ck_n
+			memory_mem_cke               => CONNECTED_TO_memory_mem_cke,               --           .mem_cke
+			memory_mem_cs_n              => CONNECTED_TO_memory_mem_cs_n,              --           .mem_cs_n
+			memory_mem_ras_n             => CONNECTED_TO_memory_mem_ras_n,             --           .mem_ras_n
+			memory_mem_cas_n             => CONNECTED_TO_memory_mem_cas_n,             --           .mem_cas_n
+			memory_mem_we_n              => CONNECTED_TO_memory_mem_we_n,              --           .mem_we_n
+			memory_mem_reset_n           => CONNECTED_TO_memory_mem_reset_n,           --           .mem_reset_n
+			memory_mem_dq                => CONNECTED_TO_memory_mem_dq,                --           .mem_dq
+			memory_mem_dqs               => CONNECTED_TO_memory_mem_dqs,               --           .mem_dqs
+			memory_mem_dqs_n             => CONNECTED_TO_memory_mem_dqs_n,             --           .mem_dqs_n
+			memory_mem_odt               => CONNECTED_TO_memory_mem_odt,               --           .mem_odt
+			memory_mem_dm                => CONNECTED_TO_memory_mem_dm,                --           .mem_dm
+			memory_oct_rzqin             => CONNECTED_TO_memory_oct_rzqin,             --           .oct_rzqin
+			avalon1_hybridcpu_address    => CONNECTED_TO_avalon1_hybridcpu_address,    --    avalon1.hybridcpu_address
+			avalon1_hybridcpu_byteenable => CONNECTED_TO_avalon1_hybridcpu_byteenable, --           .hybridcpu_byteenable
+			avalon1_hybridcpu_complete   => CONNECTED_TO_avalon1_hybridcpu_complete,   --           .hybridcpu_complete
+			avalon1_hybridcpu_read       => CONNECTED_TO_avalon1_hybridcpu_read,       --           .hybridcpu_read
+			avalon1_hybridcpu_readdata   => CONNECTED_TO_avalon1_hybridcpu_readdata,   --           .hybridcpu_readdata
+			avalon1_hybridcpu_sync_clk   => CONNECTED_TO_avalon1_hybridcpu_sync_clk,   --           .hybridcpu_sync_clk
+			avalon1_hybridcpu_write      => CONNECTED_TO_avalon1_hybridcpu_write,      --           .hybridcpu_write
+			avalon1_hybridcpu_writedata  => CONNECTED_TO_avalon1_hybridcpu_writedata,  --           .hybridcpu_writedata
+			avalon1_hybridcpu_request    => CONNECTED_TO_avalon1_hybridcpu_request,    --           .hybridcpu_request
+			avalon1_hybridcpu_longword   => CONNECTED_TO_avalon1_hybridcpu_longword    --           .hybridcpu_longword
+		);
+
diff --git a/sys/hps_fpga_bridge/synthesis/hps_fpga_bridge.debuginfo b/sys/hps_fpga_bridge/synthesis/hps_fpga_bridge.debuginfo
index c7fc60b..14c5391 100644
--- a/sys/hps_fpga_bridge/synthesis/hps_fpga_bridge.debuginfo
+++ b/sys/hps_fpga_bridge/synthesis/hps_fpga_bridge.debuginfo
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <EnsembleReport name="hps_fpga_bridge" kind="system" version="20.1" fabric="QSYS">
  <!-- Format version 20.1 720 (Future versions may contain additional information.) -->
- <!-- 2022.01.15.10:43:10 -->
+ <!-- 2022.08.14.10:42:38 -->
  <!-- A collection of modules and connections -->
  <parameter name="clockCrossingAdapter">
   <type>com.altera.sopcmodel.ensemble.EClockAdapter</type>
-  <value>HANDSHAKE</value>
+  <value>AUTO</value>
   <derived>false</derived>
   <enabled>true</enabled>
   <visible>true</visible>
@@ -53,7 +53,7 @@
  </parameter>
  <parameter name="generationId">
   <type>int</type>
-  <value>1642239754</value>
+  <value>1660466520</value>
   <derived>false</derived>
   <enabled>true</enabled>
   <visible>true</visible>
@@ -93,7 +93,7 @@
  </parameter>
  <parameter name="maxAdditionalLatency">
   <type>int</type>
-  <value>1</value>
+  <value>0</value>
   <derived>false</derived>
   <enabled>true</enabled>
   <visible>true</visible>
@@ -671,6 +671,530 @@ parameters are a RESULT of the module parameters. -->
    </port>
   </interface>
  </module>
+ <module
+   name="arm_regs_avalon_0"
+   kind="arm_regs_avalon"
+   version="1.0"
+   path="arm_regs_avalon_0">
+  <!-- Describes a single module. Module parameters are
+the requested settings for a module instance. -->
+  <parameter name="deviceFamily">
+   <type>java.lang.String</type>
+   <value>UNKNOWN</value>
+   <derived>false</derived>
+   <enabled>true</enabled>
+   <visible>true</visible>
+   <valid>true</valid>
+  </parameter>
+  <parameter name="generateLegacySim">
+   <type>boolean</type>
+   <value>false</value>
+   <derived>false</derived>
+   <enabled>true</enabled>
+   <visible>true</visible>
+   <valid>true</valid>
+  </parameter>
+  <interface name="clock" kind="clock_sink" version="20.1">
+   <!-- The connection points exposed by a module instance for the
+particular module parameters. Connection points and their
+parameters are a RESULT of the module parameters. -->
+   <parameter name="externallyDriven">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="ptfSchematicName">
+    <type>java.lang.String</type>
+    <value></value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="deviceFamily">
+    <type>java.lang.String</type>
+    <value>UNKNOWN</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="generateLegacySim">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <type>clock</type>
+   <isStart>false</isStart>
+   <port>
+    <name>CLK</name>
+    <direction>Input</direction>
+    <width>1</width>
+    <role>clk</role>
+   </port>
+  </interface>
+  <interface name="reset" kind="reset_sink" version="20.1">
+   <!-- The connection points exposed by a module instance for the
+particular module parameters. Connection points and their
+parameters are a RESULT of the module parameters. -->
+   <parameter name="associatedClock">
+    <type>java.lang.String</type>
+    <value>clock</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="synchronousEdges">
+    <type>com.altera.sopcmodel.reset.Reset$Edges</type>
+    <value>DEASSERT</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="deviceFamily">
+    <type>java.lang.String</type>
+    <value>UNKNOWN</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="generateLegacySim">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <type>reset</type>
+   <isStart>false</isStart>
+   <port>
+    <name>RESET_N</name>
+    <direction>Input</direction>
+    <width>1</width>
+    <role>reset_n</role>
+   </port>
+  </interface>
+  <interface name="conduit_end" kind="conduit_end" version="20.1">
+   <!-- The connection points exposed by a module instance for the
+particular module parameters. Connection points and their
+parameters are a RESULT of the module parameters. -->
+   <parameter name="associatedClock">
+    <type>java.lang.String</type>
+    <value>clock</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="associatedReset">
+    <type>java.lang.String</type>
+    <value></value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="deviceFamily">
+    <type>java.lang.String</type>
+    <value>UNKNOWN</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="generateLegacySim">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <type>conduit</type>
+   <isStart>false</isStart>
+   <port>
+    <name>AVALON_CACR</name>
+    <direction>Output</direction>
+    <width>4</width>
+    <role>avalon_cacr</role>
+   </port>
+   <port>
+    <name>AVALON_SYNC_CLK</name>
+    <direction>Input</direction>
+    <width>1</width>
+    <role>avalon_sync_clk</role>
+   </port>
+   <port>
+    <name>AVALON_VBR</name>
+    <direction>Output</direction>
+    <width>32</width>
+    <role>avalon_vbr</role>
+   </port>
+  </interface>
+  <interface name="avalon_slave_0" kind="avalon_slave" version="20.1">
+   <!-- The connection points exposed by a module instance for the
+particular module parameters. Connection points and their
+parameters are a RESULT of the module parameters. -->
+   <assignment>
+    <name>embeddedsw.configuration.isFlash</name>
+    <value>0</value>
+   </assignment>
+   <assignment>
+    <name>embeddedsw.configuration.isMemoryDevice</name>
+    <value>0</value>
+   </assignment>
+   <assignment>
+    <name>embeddedsw.configuration.isNonVolatileStorage</name>
+    <value>0</value>
+   </assignment>
+   <assignment>
+    <name>embeddedsw.configuration.isPrintableDevice</name>
+    <value>0</value>
+   </assignment>
+   <parameter name="addressAlignment">
+    <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
+    <value>DYNAMIC</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="addressGroup">
+    <type>int</type>
+    <value>0</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="addressSpan">
+    <type>java.math.BigInteger</type>
+    <value>8</value>
+    <derived>true</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="addressUnits">
+    <type>com.altera.sopcmodel.avalon.EAddrBurstUnits</type>
+    <value>WORDS</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="alwaysBurstMaxBurst">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="associatedClock">
+    <type>java.lang.String</type>
+    <value>clock</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="associatedReset">
+    <type>java.lang.String</type>
+    <value>reset</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="bitsPerSymbol">
+    <type>int</type>
+    <value>8</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="bridgedAddressOffset">
+    <type>java.math.BigInteger</type>
+    <value></value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="bridgesToMaster">
+    <type>com.altera.entityinterfaces.IConnectionPoint</type>
+    <value></value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="burstOnBurstBoundariesOnly">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="burstcountUnits">
+    <type>com.altera.sopcmodel.avalon.EAddrBurstUnits</type>
+    <value>WORDS</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="constantBurstBehavior">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="explicitAddressSpan">
+    <type>java.math.BigInteger</type>
+    <value>0</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="holdTime">
+    <type>int</type>
+    <value>0</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="interleaveBursts">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="isBigEndian">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="isFlash">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="isMemoryDevice">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="isNonVolatileStorage">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="linewrapBursts">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="maximumPendingReadTransactions">
+    <type>int</type>
+    <value>0</value>
+    <derived>false</derived>
+    <enabled>false</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="maximumPendingWriteTransactions">
+    <type>int</type>
+    <value>0</value>
+    <derived>false</derived>
+    <enabled>false</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="minimumUninterruptedRunLength">
+    <type>int</type>
+    <value>1</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="printableDevice">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="readLatency">
+    <type>int</type>
+    <value>0</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="readWaitStates">
+    <type>int</type>
+    <value>1</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="readWaitTime">
+    <type>int</type>
+    <value>1</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="registerIncomingSignals">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="registerOutgoingSignals">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="setupTime">
+    <type>int</type>
+    <value>0</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="timingUnits">
+    <type>com.altera.sopcmodel.avalon.TimingUnits</type>
+    <value>Cycles</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="transparentBridge">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="wellBehavedWaitrequest">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="writeLatency">
+    <type>int</type>
+    <value>0</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="writeWaitStates">
+    <type>int</type>
+    <value>0</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="writeWaitTime">
+    <type>int</type>
+    <value>0</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="deviceFamily">
+    <type>java.lang.String</type>
+    <value>UNKNOWN</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="generateLegacySim">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <type>avalon</type>
+   <isStart>false</isStart>
+   <port>
+    <name>WRITE</name>
+    <direction>Input</direction>
+    <width>1</width>
+    <role>write</role>
+   </port>
+   <port>
+    <name>ADDRESS</name>
+    <direction>Input</direction>
+    <width>1</width>
+    <role>address</role>
+   </port>
+   <port>
+    <name>WRITEDATA</name>
+    <direction>Input</direction>
+    <width>32</width>
+    <role>writedata</role>
+   </port>
+  </interface>
+ </module>
  <module name="clk_0" kind="clock_source" version="20.1" path="clk_0">
   <!-- Describes a single module. Module parameters are
 the requested settings for a module instance. -->
@@ -908,15 +1432,21 @@ parameters are a RESULT of the module parameters. -->
    </port>
    <clockDomainMember>
     <isBridge>false</isBridge>
-    <moduleName>hybridcpu0</moduleName>
+    <moduleName>arm_irq_avalon_0</moduleName>
     <slaveName>clock</slaveName>
-    <name>hybridcpu0.clock</name>
+    <name>arm_irq_avalon_0.clock</name>
    </clockDomainMember>
    <clockDomainMember>
     <isBridge>false</isBridge>
-    <moduleName>arm_irq_avalon_0</moduleName>
+    <moduleName>arm_regs_avalon_0</moduleName>
     <slaveName>clock</slaveName>
-    <name>arm_irq_avalon_0.clock</name>
+    <name>arm_regs_avalon_0.clock</name>
+   </clockDomainMember>
+   <clockDomainMember>
+    <isBridge>false</isBridge>
+    <moduleName>hybridcpu0</moduleName>
+    <slaveName>clock</slaveName>
+    <name>hybridcpu0.clock</name>
    </clockDomainMember>
    <clockDomainMember>
     <isBridge>false</isBridge>
@@ -40500,7 +41030,7 @@ parameters are a RESULT of the module parameters. -->
    </parameter>
    <parameter name="maximumPendingReadTransactions">
     <type>int</type>
-    <value>0</value>
+    <value>8</value>
     <derived>false</derived>
     <enabled>false</enabled>
     <visible>true</visible>
@@ -40644,16 +41174,10 @@ parameters are a RESULT of the module parameters. -->
    </parameter>
    <type>avalon</type>
    <isStart>false</isStart>
-   <port>
-    <name>CHIPSELECT</name>
-    <direction>Input</direction>
-    <width>1</width>
-    <role>chipselect</role>
-   </port>
    <port>
     <name>ADDRESS</name>
     <direction>Input</direction>
-    <width>23</width>
+    <width>22</width>
     <role>address</role>
    </port>
    <port>
@@ -40665,7 +41189,7 @@ parameters are a RESULT of the module parameters. -->
    <port>
     <name>READDATA</name>
     <direction>Output</direction>
-    <width>16</width>
+    <width>32</width>
     <role>readdata</role>
    </port>
    <port>
@@ -40677,13 +41201,13 @@ parameters are a RESULT of the module parameters. -->
    <port>
     <name>WRITEDATA</name>
     <direction>Input</direction>
-    <width>16</width>
+    <width>32</width>
     <role>writedata</role>
    </port>
    <port>
     <name>BYTEENABLE</name>
     <direction>Input</direction>
-    <width>2</width>
+    <width>4</width>
     <role>byteenable</role>
    </port>
    <port>
@@ -40692,6 +41216,12 @@ parameters are a RESULT of the module parameters. -->
     <width>1</width>
     <role>waitrequest</role>
    </port>
+   <port>
+    <name>READDATAVALID</name>
+    <direction>Output</direction>
+    <width>1</width>
+    <role>readdatavalid</role>
+   </port>
   </interface>
   <interface name="conduit_end" kind="conduit_end" version="20.1">
    <!-- The connection points exposed by a module instance for the
@@ -40785,6 +41315,12 @@ parameters are a RESULT of the module parameters. -->
     <width>1</width>
     <role>hybridcpu_request</role>
    </port>
+   <port>
+    <name>HYBRIDCPU_LONGWORD</name>
+    <direction>Output</direction>
+    <width>1</width>
+    <role>hybridcpu_longword</role>
+   </port>
   </interface>
  </module>
  <module
@@ -40798,25 +41334,22 @@ the requested settings for a module instance. -->
    <name>interconnect_id.arm_irq_avalon_0.avalon_slave_0</name>
    <value>0</value>
   </assignment>
+  <assignment>
+   <name>interconnect_id.arm_regs_avalon_0.avalon_slave_0</name>
+   <value>1</value>
+  </assignment>
   <assignment>
    <name>interconnect_id.hps_0.h2f_axi_master</name>
    <value>0</value>
   </assignment>
   <assignment>
    <name>interconnect_id.hybridcpu0.avalon_slave_0</name>
-   <value>1</value>
+   <value>2</value>
   </assignment>
   <parameter name="COMPOSE_CONTENTS">
    <type>java.lang.String</type>
-   <value><![CDATA[add_instance {hybridcpu0_avalon_slave_0_translator} {altera_merlin_slave_translator};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_ADDRESS_W} {23};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_DATA_W} {16};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {UAV_DATA_W} {16};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_BYTEENABLE_W} {2};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {UAV_BYTEENABLE_W} {2};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {UAV_ADDRESS_W} {30};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {UAV_BURSTCOUNT_W} {2};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_READLATENCY} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_READDATA} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_READ} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_WRITE} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_CHIPSELECT} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_ADDRESS} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_BURSTCOUNT} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_READDATAVALID} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_LOCK} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_DEBUGACCESS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_SYMBOLS_PER_WORD} {2};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_ADDRESS_SYMBOLS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};add_instance {arm_irq_avalon_0_avalon_slave_0_translator} {altera_merlin_slave_translator};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_ADDRESS_W} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_DATA_W} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {UAV_DATA_W} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_BYTEENABLE_W} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {UAV_BYTEENABLE_W} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {UAV_ADDRESS_W} {30};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {UAV_BURSTCOUNT_W} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_READLATENCY} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_READDATA} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_WRITEDATA} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_READ} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_WRITE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_BYTEENABLE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_ADDRESS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_BURSTCOUNT} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_READDATAVALID} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_LOCK} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_DEBUGACCESS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_SYMBOLS_PER_WORD} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_ADDRESS_SYMBOLS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};add_instance {hps_0_h2f_axi_master_agent} {altera_merlin_axi_master_ni};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {ID_WIDTH} {12};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {ADDR_WIDTH} {30};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {RDATA_WIDTH} {32};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {WDATA_WIDTH} {32};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {ADDR_USER_WIDTH} {1};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {DATA_USER_WIDTH} {1};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {USE_ADDR_USER} {0};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {AXI_VERSION} {AXI3};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {WRITE_ISSUING_CAPABILITY} {8};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {READ_ISSUING_CAPABILITY} {8};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BEGIN_BURST} {93};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_CACHE_H} {115};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_CACHE_L} {112};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_ADDR_SIDEBAND_H} {91};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_ADDR_SIDEBAND_L} {91};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_PROTECTION_H} {111};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_PROTECTION_L} {109};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BURST_SIZE_H} {88};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BURST_SIZE_L} {86};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BURST_TYPE_H} {90};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BURST_TYPE_L} {89};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_RESPONSE_STATUS_L} {116};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_RESPONSE_STATUS_H} {117};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BURSTWRAP_H} {85};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BURSTWRAP_L} {79};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BYTE_CNT_H} {78};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BYTE_CNT_L} {72};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_ADDR_H} {65};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_ADDR_L} {36};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_TRANS_EXCLUSIVE} {71};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_TRANS_LOCK} {70};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_TRANS_COMPRESSED_READ} {66};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_TRANS_POSTED} {67};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_TRANS_WRITE} {68};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_TRANS_READ} {69};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_DATA_H} {31};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_DATA_L} {0};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BYTEEN_H} {35};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BYTEEN_L} {32};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_SRC_ID_H} {95};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_SRC_ID_L} {95};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_DEST_ID_H} {96};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_DEST_ID_L} {96};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_THREAD_ID_H} {108};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_THREAD_ID_L} {97};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_QOS_L} {94};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_QOS_H} {94};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_ORI_BURST_SIZE_L} {118};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_ORI_BURST_SIZE_H} {120};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_DATA_SIDEBAND_H} {92};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_DATA_SIDEBAND_L} {92};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {ST_DATA_W} {121};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {ST_CHANNEL_W} {2};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {ID} {0};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {ADDR_MAP} {<?xml version="1.0" encoding="UTF-8"?>
+   <value><![CDATA[add_instance {arm_irq_avalon_0_avalon_slave_0_translator} {altera_merlin_slave_translator};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_ADDRESS_W} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_DATA_W} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {UAV_DATA_W} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_BYTEENABLE_W} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {UAV_BYTEENABLE_W} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {UAV_ADDRESS_W} {30};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {UAV_BURSTCOUNT_W} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_READLATENCY} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_READDATA} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_WRITEDATA} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_READ} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_WRITE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_BYTEENABLE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_ADDRESS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_BURSTCOUNT} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_READDATAVALID} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_LOCK} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_DEBUGACCESS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_SYMBOLS_PER_WORD} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_ADDRESS_SYMBOLS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};add_instance {arm_regs_avalon_0_avalon_slave_0_translator} {altera_merlin_slave_translator};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_ADDRESS_W} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_DATA_W} {32};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {UAV_DATA_W} {32};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_BYTEENABLE_W} {4};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {UAV_BYTEENABLE_W} {4};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {UAV_ADDRESS_W} {30};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {UAV_BURSTCOUNT_W} {3};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_READLATENCY} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_READDATA} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_READ} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_WRITE} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_BYTEENABLE} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_ADDRESS} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_BURSTCOUNT} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_READDATAVALID} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_WAITREQUEST} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_LOCK} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_DEBUGACCESS} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_SYMBOLS_PER_WORD} {4};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_ADDRESS_SYMBOLS} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};add_instance {hybridcpu0_avalon_slave_0_translator} {altera_merlin_slave_translator};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_ADDRESS_W} {22};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_DATA_W} {32};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {UAV_DATA_W} {32};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_BYTEENABLE_W} {4};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {UAV_BYTEENABLE_W} {4};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {UAV_ADDRESS_W} {30};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {UAV_BURSTCOUNT_W} {3};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_READLATENCY} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_READDATA} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_READ} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_WRITE} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_ADDRESS} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_BURSTCOUNT} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_LOCK} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_DEBUGACCESS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_SYMBOLS_PER_WORD} {4};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_ADDRESS_SYMBOLS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {8};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};add_instance {hps_0_h2f_axi_master_agent} {altera_merlin_axi_master_ni};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {ID_WIDTH} {12};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {ADDR_WIDTH} {30};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {RDATA_WIDTH} {32};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {WDATA_WIDTH} {32};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {ADDR_USER_WIDTH} {1};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {DATA_USER_WIDTH} {1};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {USE_ADDR_USER} {0};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {AXI_VERSION} {AXI3};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {WRITE_ISSUING_CAPABILITY} {8};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {READ_ISSUING_CAPABILITY} {8};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BEGIN_BURST} {93};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_CACHE_H} {117};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_CACHE_L} {114};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_ADDR_SIDEBAND_H} {91};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_ADDR_SIDEBAND_L} {91};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_PROTECTION_H} {113};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_PROTECTION_L} {111};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BURST_SIZE_H} {88};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BURST_SIZE_L} {86};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BURST_TYPE_H} {90};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BURST_TYPE_L} {89};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_RESPONSE_STATUS_L} {118};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_RESPONSE_STATUS_H} {119};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BURSTWRAP_H} {85};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BURSTWRAP_L} {79};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BYTE_CNT_H} {78};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BYTE_CNT_L} {72};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_ADDR_H} {65};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_ADDR_L} {36};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_TRANS_EXCLUSIVE} {71};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_TRANS_LOCK} {70};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_TRANS_COMPRESSED_READ} {66};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_TRANS_POSTED} {67};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_TRANS_WRITE} {68};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_TRANS_READ} {69};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_DATA_H} {31};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_DATA_L} {0};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BYTEEN_H} {35};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_BYTEEN_L} {32};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_SRC_ID_H} {96};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_SRC_ID_L} {95};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_DEST_ID_H} {98};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_DEST_ID_L} {97};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_THREAD_ID_H} {110};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_THREAD_ID_L} {99};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_QOS_L} {94};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_QOS_H} {94};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_ORI_BURST_SIZE_L} {120};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_ORI_BURST_SIZE_H} {122};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_DATA_SIDEBAND_H} {92};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {PKT_DATA_SIDEBAND_L} {92};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {ST_DATA_W} {123};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {ST_CHANNEL_W} {3};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {ID} {0};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {ADDR_MAP} {<?xml version="1.0" encoding="UTF-8"?>
 <address_map>
- <slave
-   id="1"
-   name="hybridcpu0_avalon_slave_0_translator.avalon_universal_slave_0"
-   start="0x0000000000000000"
-   end="0x00000000001000000"
-   responds="1"
-   user_default="0" />
  <slave
    id="0"
    name="arm_irq_avalon_0_avalon_slave_0_translator.avalon_universal_slave_0"
@@ -40824,8 +41357,22 @@ the requested settings for a module instance. -->
    end="0x00000000001000001"
    responds="1"
    user_default="0" />
+ <slave
+   id="1"
+   name="arm_regs_avalon_0_avalon_slave_0_translator.avalon_universal_slave_0"
+   start="0x0000000001000008"
+   end="0x00000000001000010"
+   responds="0"
+   user_default="0" />
+ <slave
+   id="2"
+   name="hybridcpu0_avalon_slave_0_translator.avalon_universal_slave_0"
+   start="0x0000000000000000"
+   end="0x00000000001000000"
+   responds="1"
+   user_default="0" />
 </address_map>
-};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {MERLIN_PACKET_FORMAT} {ori_burst_size(120:118) response_status(117:116) cache(115:112) protection(111:109) thread_id(108:97) dest_id(96) src_id(95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {hybridcpu0_avalon_slave_0_agent} {altera_merlin_slave_agent};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_ORI_BURST_SIZE_H} {102};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_ORI_BURST_SIZE_L} {100};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_RESPONSE_STATUS_H} {99};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_RESPONSE_STATUS_L} {98};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BURST_SIZE_H} {70};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BURST_SIZE_L} {68};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_TRANS_LOCK} {52};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BEGIN_BURST} {75};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_PROTECTION_H} {93};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_PROTECTION_L} {91};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BURSTWRAP_H} {67};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BURSTWRAP_L} {61};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BYTE_CNT_H} {60};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BYTE_CNT_L} {54};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_ADDR_H} {47};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_ADDR_L} {18};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_TRANS_COMPRESSED_READ} {48};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_TRANS_POSTED} {49};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_TRANS_WRITE} {50};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_TRANS_READ} {51};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_DATA_H} {15};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_DATA_L} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BYTEEN_H} {17};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BYTEEN_L} {16};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_SRC_ID_H} {77};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_SRC_ID_L} {77};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_DEST_ID_H} {78};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_DEST_ID_L} {78};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {ST_CHANNEL_W} {2};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {ST_DATA_W} {103};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {AVS_BURSTCOUNT_W} {2};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {MERLIN_PACKET_FORMAT} {ori_burst_size(102:100) response_status(99:98) cache(97:94) protection(93:91) thread_id(90:79) dest_id(78) src_id(77) qos(76) begin_burst(75) data_sideband(74) addr_sideband(73) burst_type(72:71) burst_size(70:68) burstwrap(67:61) byte_cnt(60:54) trans_exclusive(53) trans_lock(52) trans_read(51) trans_write(50) trans_posted(49) trans_compressed_read(48) addr(47:18) byteen(17:16) data(15:0)};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {SUPPRESS_0_BYTEEN_CMD} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {MAX_BYTE_CNT} {2};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {MAX_BURSTWRAP} {127};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {ID} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {ECC_ENABLE} {0};add_instance {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {BITS_PER_SYMBOL} {104};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};add_instance {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {BITS_PER_SYMBOL} {18};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {USE_PACKETS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {EMPTY_LATENCY} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {EXPLICIT_MAXCHANNEL} {0};add_instance {arm_irq_avalon_0_avalon_slave_0_agent} {altera_merlin_slave_agent};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_ORI_BURST_SIZE_H} {93};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_ORI_BURST_SIZE_L} {91};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_RESPONSE_STATUS_H} {90};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_RESPONSE_STATUS_L} {89};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BURST_SIZE_H} {61};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BURST_SIZE_L} {59};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_TRANS_LOCK} {43};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BEGIN_BURST} {66};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_PROTECTION_H} {84};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_PROTECTION_L} {82};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BURSTWRAP_H} {58};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BURSTWRAP_L} {52};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BYTE_CNT_H} {51};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BYTE_CNT_L} {45};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_ADDR_H} {38};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_ADDR_L} {9};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_TRANS_COMPRESSED_READ} {39};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_TRANS_POSTED} {40};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_TRANS_WRITE} {41};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_TRANS_READ} {42};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_DATA_H} {7};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_DATA_L} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BYTEEN_H} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BYTEEN_L} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_SRC_ID_H} {68};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_SRC_ID_L} {68};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_DEST_ID_H} {69};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_DEST_ID_L} {69};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {ST_CHANNEL_W} {2};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {ST_DATA_W} {94};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {AVS_BURSTCOUNT_W} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {MERLIN_PACKET_FORMAT} {ori_burst_size(93:91) response_status(90:89) cache(88:85) protection(84:82) thread_id(81:70) dest_id(69) src_id(68) qos(67) begin_burst(66) data_sideband(65) addr_sideband(64) burst_type(63:62) burst_size(61:59) burstwrap(58:52) byte_cnt(51:45) trans_exclusive(44) trans_lock(43) trans_read(42) trans_write(41) trans_posted(40) trans_compressed_read(39) addr(38:9) byteen(8) data(7:0)};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {SUPPRESS_0_BYTEEN_CMD} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {MAX_BYTE_CNT} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {MAX_BURSTWRAP} {127};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {ID} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {ECC_ENABLE} {0};add_instance {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {BITS_PER_SYMBOL} {95};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};add_instance {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {BITS_PER_SYMBOL} {10};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_PACKETS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {EMPTY_LATENCY} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {EXPLICIT_MAXCHANNEL} {0};add_instance {router} {altera_merlin_router};set_instance_parameter_value {router} {DESTINATION_ID} {1 0 };set_instance_parameter_value {router} {CHANNEL_ID} {01 10 };set_instance_parameter_value {router} {TYPE_OF_TRANSACTION} {both read };set_instance_parameter_value {router} {START_ADDRESS} {0x0 0x1000000 };set_instance_parameter_value {router} {END_ADDRESS} {0x1000000 0x1000001 };set_instance_parameter_value {router} {NON_SECURED_TAG} {1 1 };set_instance_parameter_value {router} {SECURED_RANGE_PAIRS} {0 0 };set_instance_parameter_value {router} {SECURED_RANGE_LIST} {0 0 };set_instance_parameter_value {router} {SPAN_OFFSET} {};set_instance_parameter_value {router} {PKT_ADDR_H} {65};set_instance_parameter_value {router} {PKT_ADDR_L} {36};set_instance_parameter_value {router} {PKT_PROTECTION_H} {111};set_instance_parameter_value {router} {PKT_PROTECTION_L} {109};set_instance_parameter_value {router} {PKT_DEST_ID_H} {96};set_instance_parameter_value {router} {PKT_DEST_ID_L} {96};set_instance_parameter_value {router} {PKT_TRANS_WRITE} {68};set_instance_parameter_value {router} {PKT_TRANS_READ} {69};set_instance_parameter_value {router} {ST_DATA_W} {121};set_instance_parameter_value {router} {ST_CHANNEL_W} {2};set_instance_parameter_value {router} {DECODER_TYPE} {0};set_instance_parameter_value {router} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router} {DEFAULT_DESTID} {1};set_instance_parameter_value {router} {MERLIN_PACKET_FORMAT} {ori_burst_size(120:118) response_status(117:116) cache(115:112) protection(111:109) thread_id(108:97) dest_id(96) src_id(95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {router} {MEMORY_ALIASING_DECODE} {0};add_instance {router_001} {altera_merlin_router};set_instance_parameter_value {router_001} {DESTINATION_ID} {1 0 };set_instance_parameter_value {router_001} {CHANNEL_ID} {01 10 };set_instance_parameter_value {router_001} {TYPE_OF_TRANSACTION} {both read };set_instance_parameter_value {router_001} {START_ADDRESS} {0x0 0x1000000 };set_instance_parameter_value {router_001} {END_ADDRESS} {0x1000000 0x1000001 };set_instance_parameter_value {router_001} {NON_SECURED_TAG} {1 1 };set_instance_parameter_value {router_001} {SECURED_RANGE_PAIRS} {0 0 };set_instance_parameter_value {router_001} {SECURED_RANGE_LIST} {0 0 };set_instance_parameter_value {router_001} {SPAN_OFFSET} {};set_instance_parameter_value {router_001} {PKT_ADDR_H} {65};set_instance_parameter_value {router_001} {PKT_ADDR_L} {36};set_instance_parameter_value {router_001} {PKT_PROTECTION_H} {111};set_instance_parameter_value {router_001} {PKT_PROTECTION_L} {109};set_instance_parameter_value {router_001} {PKT_DEST_ID_H} {96};set_instance_parameter_value {router_001} {PKT_DEST_ID_L} {96};set_instance_parameter_value {router_001} {PKT_TRANS_WRITE} {68};set_instance_parameter_value {router_001} {PKT_TRANS_READ} {69};set_instance_parameter_value {router_001} {ST_DATA_W} {121};set_instance_parameter_value {router_001} {ST_CHANNEL_W} {2};set_instance_parameter_value {router_001} {DECODER_TYPE} {0};set_instance_parameter_value {router_001} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router_001} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_001} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_001} {DEFAULT_DESTID} {1};set_instance_parameter_value {router_001} {MERLIN_PACKET_FORMAT} {ori_burst_size(120:118) response_status(117:116) cache(115:112) protection(111:109) thread_id(108:97) dest_id(96) src_id(95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {router_001} {MEMORY_ALIASING_DECODE} {0};add_instance {router_002} {altera_merlin_router};set_instance_parameter_value {router_002} {DESTINATION_ID} {0 0 };set_instance_parameter_value {router_002} {CHANNEL_ID} {01 10 };set_instance_parameter_value {router_002} {TYPE_OF_TRANSACTION} {write read };set_instance_parameter_value {router_002} {START_ADDRESS} {0x0 0x0 };set_instance_parameter_value {router_002} {END_ADDRESS} {0x0 0x0 };set_instance_parameter_value {router_002} {NON_SECURED_TAG} {1 1 };set_instance_parameter_value {router_002} {SECURED_RANGE_PAIRS} {0 0 };set_instance_parameter_value {router_002} {SECURED_RANGE_LIST} {0 0 };set_instance_parameter_value {router_002} {SPAN_OFFSET} {};set_instance_parameter_value {router_002} {PKT_ADDR_H} {47};set_instance_parameter_value {router_002} {PKT_ADDR_L} {18};set_instance_parameter_value {router_002} {PKT_PROTECTION_H} {93};set_instance_parameter_value {router_002} {PKT_PROTECTION_L} {91};set_instance_parameter_value {router_002} {PKT_DEST_ID_H} {78};set_instance_parameter_value {router_002} {PKT_DEST_ID_L} {78};set_instance_parameter_value {router_002} {PKT_TRANS_WRITE} {50};set_instance_parameter_value {router_002} {PKT_TRANS_READ} {51};set_instance_parameter_value {router_002} {ST_DATA_W} {103};set_instance_parameter_value {router_002} {ST_CHANNEL_W} {2};set_instance_parameter_value {router_002} {DECODER_TYPE} {1};set_instance_parameter_value {router_002} {DEFAULT_CHANNEL} {-1};set_instance_parameter_value {router_002} {DEFAULT_WR_CHANNEL} {0};set_instance_parameter_value {router_002} {DEFAULT_RD_CHANNEL} {1};set_instance_parameter_value {router_002} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_002} {MERLIN_PACKET_FORMAT} {ori_burst_size(102:100) response_status(99:98) cache(97:94) protection(93:91) thread_id(90:79) dest_id(78) src_id(77) qos(76) begin_burst(75) data_sideband(74) addr_sideband(73) burst_type(72:71) burst_size(70:68) burstwrap(67:61) byte_cnt(60:54) trans_exclusive(53) trans_lock(52) trans_read(51) trans_write(50) trans_posted(49) trans_compressed_read(48) addr(47:18) byteen(17:16) data(15:0)};set_instance_parameter_value {router_002} {MEMORY_ALIASING_DECODE} {0};add_instance {router_003} {altera_merlin_router};set_instance_parameter_value {router_003} {DESTINATION_ID} {0 0 };set_instance_parameter_value {router_003} {CHANNEL_ID} {01 10 };set_instance_parameter_value {router_003} {TYPE_OF_TRANSACTION} {write read };set_instance_parameter_value {router_003} {START_ADDRESS} {0x0 0x0 };set_instance_parameter_value {router_003} {END_ADDRESS} {0x0 0x0 };set_instance_parameter_value {router_003} {NON_SECURED_TAG} {1 1 };set_instance_parameter_value {router_003} {SECURED_RANGE_PAIRS} {0 0 };set_instance_parameter_value {router_003} {SECURED_RANGE_LIST} {0 0 };set_instance_parameter_value {router_003} {SPAN_OFFSET} {};set_instance_parameter_value {router_003} {PKT_ADDR_H} {38};set_instance_parameter_value {router_003} {PKT_ADDR_L} {9};set_instance_parameter_value {router_003} {PKT_PROTECTION_H} {84};set_instance_parameter_value {router_003} {PKT_PROTECTION_L} {82};set_instance_parameter_value {router_003} {PKT_DEST_ID_H} {69};set_instance_parameter_value {router_003} {PKT_DEST_ID_L} {69};set_instance_parameter_value {router_003} {PKT_TRANS_WRITE} {41};set_instance_parameter_value {router_003} {PKT_TRANS_READ} {42};set_instance_parameter_value {router_003} {ST_DATA_W} {94};set_instance_parameter_value {router_003} {ST_CHANNEL_W} {2};set_instance_parameter_value {router_003} {DECODER_TYPE} {1};set_instance_parameter_value {router_003} {DEFAULT_CHANNEL} {-1};set_instance_parameter_value {router_003} {DEFAULT_WR_CHANNEL} {0};set_instance_parameter_value {router_003} {DEFAULT_RD_CHANNEL} {1};set_instance_parameter_value {router_003} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_003} {MERLIN_PACKET_FORMAT} {ori_burst_size(93:91) response_status(90:89) cache(88:85) protection(84:82) thread_id(81:70) dest_id(69) src_id(68) qos(67) begin_burst(66) data_sideband(65) addr_sideband(64) burst_type(63:62) burst_size(61:59) burstwrap(58:52) byte_cnt(51:45) trans_exclusive(44) trans_lock(43) trans_read(42) trans_write(41) trans_posted(40) trans_compressed_read(39) addr(38:9) byteen(8) data(7:0)};set_instance_parameter_value {router_003} {MEMORY_ALIASING_DECODE} {0};add_instance {hps_0_h2f_axi_master_wr_limiter} {altera_merlin_traffic_limiter};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_DEST_ID_H} {96};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_DEST_ID_L} {96};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_SRC_ID_H} {95};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_SRC_ID_L} {95};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_BYTE_CNT_H} {78};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_BYTE_CNT_L} {72};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_BYTEEN_H} {35};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_BYTEEN_L} {32};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_TRANS_POSTED} {67};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_TRANS_WRITE} {68};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_THREAD_ID_H} {108};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_THREAD_ID_L} {97};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {MAX_BURST_LENGTH} {16};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {MAX_OUTSTANDING_RESPONSES} {3};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PIPELINED} {0};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {ST_DATA_W} {121};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {ST_CHANNEL_W} {2};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {VALID_WIDTH} {2};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {ENFORCE_ORDER} {1};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PREVENT_HAZARDS} {0};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {SUPPORTS_POSTED_WRITES} {1};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {SUPPORTS_NONPOSTED_WRITES} {0};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {MERLIN_PACKET_FORMAT} {ori_burst_size(120:118) response_status(117:116) cache(115:112) protection(111:109) thread_id(108:97) dest_id(96) src_id(95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {REORDER} {0};add_instance {hps_0_h2f_axi_master_rd_limiter} {altera_merlin_traffic_limiter};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_DEST_ID_H} {96};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_DEST_ID_L} {96};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_SRC_ID_H} {95};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_SRC_ID_L} {95};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_BYTE_CNT_H} {78};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_BYTE_CNT_L} {72};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_BYTEEN_H} {35};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_BYTEEN_L} {32};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_TRANS_POSTED} {67};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_TRANS_WRITE} {68};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_THREAD_ID_H} {108};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_THREAD_ID_L} {97};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {MAX_BURST_LENGTH} {16};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {MAX_OUTSTANDING_RESPONSES} {3};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PIPELINED} {0};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {ST_DATA_W} {121};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {ST_CHANNEL_W} {2};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {VALID_WIDTH} {2};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {ENFORCE_ORDER} {1};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PREVENT_HAZARDS} {0};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {SUPPORTS_POSTED_WRITES} {1};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {SUPPORTS_NONPOSTED_WRITES} {0};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {MERLIN_PACKET_FORMAT} {ori_burst_size(120:118) response_status(117:116) cache(115:112) protection(111:109) thread_id(108:97) dest_id(96) src_id(95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {REORDER} {0};add_instance {hybridcpu0_avalon_slave_0_burst_adapter} {altera_merlin_burst_adapter};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_ADDR_H} {47};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_ADDR_L} {18};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BEGIN_BURST} {75};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BYTE_CNT_H} {60};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BYTE_CNT_L} {54};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BYTEEN_H} {17};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BYTEEN_L} {16};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BURST_SIZE_H} {70};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BURST_SIZE_L} {68};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BURST_TYPE_H} {72};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BURST_TYPE_L} {71};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BURSTWRAP_H} {67};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BURSTWRAP_L} {61};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_TRANS_COMPRESSED_READ} {48};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_TRANS_WRITE} {50};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_TRANS_READ} {51};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {OUT_NARROW_SIZE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {IN_NARROW_SIZE} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {OUT_FIXED} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {OUT_COMPLETE_WRAP} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {ST_DATA_W} {103};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {ST_CHANNEL_W} {2};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {OUT_BYTE_CNT_H} {55};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {OUT_BURSTWRAP_H} {67};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {MERLIN_PACKET_FORMAT} {ori_burst_size(102:100) response_status(99:98) cache(97:94) protection(93:91) thread_id(90:79) dest_id(78) src_id(77) qos(76) begin_burst(75) data_sideband(74) addr_sideband(73) burst_type(72:71) burst_size(70:68) burstwrap(67:61) byte_cnt(60:54) trans_exclusive(53) trans_lock(52) trans_read(51) trans_write(50) trans_posted(49) trans_compressed_read(48) addr(47:18) byteen(17:16) data(15:0)};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {COMPRESSED_READ_SUPPORT} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {BYTEENABLE_SYNTHESIS} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PIPE_INPUTS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {NO_WRAP_SUPPORT} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {INCOMPLETE_WRAP_SUPPORT} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {BURSTWRAP_CONST_MASK} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {BURSTWRAP_CONST_VALUE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {ADAPTER_VERSION} {13.1};add_instance {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {altera_merlin_burst_adapter};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_ADDR_H} {38};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_ADDR_L} {9};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BEGIN_BURST} {66};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BYTE_CNT_H} {51};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BYTE_CNT_L} {45};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BYTEEN_H} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BYTEEN_L} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURST_SIZE_H} {61};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURST_SIZE_L} {59};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURST_TYPE_H} {63};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURST_TYPE_L} {62};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURSTWRAP_H} {58};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURSTWRAP_L} {52};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_TRANS_COMPRESSED_READ} {39};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_TRANS_WRITE} {41};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_TRANS_READ} {42};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {OUT_NARROW_SIZE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {IN_NARROW_SIZE} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {OUT_FIXED} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {OUT_COMPLETE_WRAP} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {ST_DATA_W} {94};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {ST_CHANNEL_W} {2};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {OUT_BYTE_CNT_H} {45};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {OUT_BURSTWRAP_H} {58};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {MERLIN_PACKET_FORMAT} {ori_burst_size(93:91) response_status(90:89) cache(88:85) protection(84:82) thread_id(81:70) dest_id(69) src_id(68) qos(67) begin_burst(66) data_sideband(65) addr_sideband(64) burst_type(63:62) burst_size(61:59) burstwrap(58:52) byte_cnt(51:45) trans_exclusive(44) trans_lock(43) trans_read(42) trans_write(41) trans_posted(40) trans_compressed_read(39) addr(38:9) byteen(8) data(7:0)};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {COMPRESSED_READ_SUPPORT} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {BYTEENABLE_SYNTHESIS} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PIPE_INPUTS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {NO_WRAP_SUPPORT} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {INCOMPLETE_WRAP_SUPPORT} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {BURSTWRAP_CONST_MASK} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {BURSTWRAP_CONST_VALUE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {ADAPTER_VERSION} {13.1};add_instance {cmd_demux} {altera_merlin_demultiplexer};set_instance_parameter_value {cmd_demux} {ST_DATA_W} {121};set_instance_parameter_value {cmd_demux} {ST_CHANNEL_W} {2};set_instance_parameter_value {cmd_demux} {NUM_OUTPUTS} {2};set_instance_parameter_value {cmd_demux} {VALID_WIDTH} {2};set_instance_parameter_value {cmd_demux} {MERLIN_PACKET_FORMAT} {ori_burst_size(120:118) response_status(117:116) cache(115:112) protection(111:109) thread_id(108:97) dest_id(96) src_id(95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {cmd_demux_001} {altera_merlin_demultiplexer};set_instance_parameter_value {cmd_demux_001} {ST_DATA_W} {121};set_instance_parameter_value {cmd_demux_001} {ST_CHANNEL_W} {2};set_instance_parameter_value {cmd_demux_001} {NUM_OUTPUTS} {2};set_instance_parameter_value {cmd_demux_001} {VALID_WIDTH} {2};set_instance_parameter_value {cmd_demux_001} {MERLIN_PACKET_FORMAT} {ori_burst_size(120:118) response_status(117:116) cache(115:112) protection(111:109) thread_id(108:97) dest_id(96) src_id(95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {cmd_mux} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux} {ST_DATA_W} {121};set_instance_parameter_value {cmd_mux} {ST_CHANNEL_W} {2};set_instance_parameter_value {cmd_mux} {NUM_INPUTS} {2};set_instance_parameter_value {cmd_mux} {PIPELINE_ARB} {1};set_instance_parameter_value {cmd_mux} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux} {PKT_TRANS_LOCK} {70};set_instance_parameter_value {cmd_mux} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux} {ARBITRATION_SHARES} {1 1 };set_instance_parameter_value {cmd_mux} {MERLIN_PACKET_FORMAT} {ori_burst_size(120:118) response_status(117:116) cache(115:112) protection(111:109) thread_id(108:97) dest_id(96) src_id(95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {cmd_mux_001} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux_001} {ST_DATA_W} {121};set_instance_parameter_value {cmd_mux_001} {ST_CHANNEL_W} {2};set_instance_parameter_value {cmd_mux_001} {NUM_INPUTS} {2};set_instance_parameter_value {cmd_mux_001} {PIPELINE_ARB} {1};set_instance_parameter_value {cmd_mux_001} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux_001} {PKT_TRANS_LOCK} {70};set_instance_parameter_value {cmd_mux_001} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux_001} {ARBITRATION_SHARES} {1 1 };set_instance_parameter_value {cmd_mux_001} {MERLIN_PACKET_FORMAT} {ori_burst_size(120:118) response_status(117:116) cache(115:112) protection(111:109) thread_id(108:97) dest_id(96) src_id(95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {rsp_demux} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux} {ST_DATA_W} {121};set_instance_parameter_value {rsp_demux} {ST_CHANNEL_W} {2};set_instance_parameter_value {rsp_demux} {NUM_OUTPUTS} {2};set_instance_parameter_value {rsp_demux} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux} {MERLIN_PACKET_FORMAT} {ori_burst_size(120:118) response_status(117:116) cache(115:112) protection(111:109) thread_id(108:97) dest_id(96) src_id(95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {rsp_demux_001} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux_001} {ST_DATA_W} {121};set_instance_parameter_value {rsp_demux_001} {ST_CHANNEL_W} {2};set_instance_parameter_value {rsp_demux_001} {NUM_OUTPUTS} {2};set_instance_parameter_value {rsp_demux_001} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux_001} {MERLIN_PACKET_FORMAT} {ori_burst_size(120:118) response_status(117:116) cache(115:112) protection(111:109) thread_id(108:97) dest_id(96) src_id(95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {rsp_mux} {altera_merlin_multiplexer};set_instance_parameter_value {rsp_mux} {ST_DATA_W} {121};set_instance_parameter_value {rsp_mux} {ST_CHANNEL_W} {2};set_instance_parameter_value {rsp_mux} {NUM_INPUTS} {2};set_instance_parameter_value {rsp_mux} {PIPELINE_ARB} {0};set_instance_parameter_value {rsp_mux} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {rsp_mux} {PKT_TRANS_LOCK} {70};set_instance_parameter_value {rsp_mux} {ARBITRATION_SCHEME} {no-arb};set_instance_parameter_value {rsp_mux} {ARBITRATION_SHARES} {1 1 };set_instance_parameter_value {rsp_mux} {MERLIN_PACKET_FORMAT} {ori_burst_size(120:118) response_status(117:116) cache(115:112) protection(111:109) thread_id(108:97) dest_id(96) src_id(95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {rsp_mux_001} {altera_merlin_multiplexer};set_instance_parameter_value {rsp_mux_001} {ST_DATA_W} {121};set_instance_parameter_value {rsp_mux_001} {ST_CHANNEL_W} {2};set_instance_parameter_value {rsp_mux_001} {NUM_INPUTS} {2};set_instance_parameter_value {rsp_mux_001} {PIPELINE_ARB} {0};set_instance_parameter_value {rsp_mux_001} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {rsp_mux_001} {PKT_TRANS_LOCK} {70};set_instance_parameter_value {rsp_mux_001} {ARBITRATION_SCHEME} {no-arb};set_instance_parameter_value {rsp_mux_001} {ARBITRATION_SHARES} {1 1 };set_instance_parameter_value {rsp_mux_001} {MERLIN_PACKET_FORMAT} {ori_burst_size(120:118) response_status(117:116) cache(115:112) protection(111:109) thread_id(108:97) dest_id(96) src_id(95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {hybridcpu0_avalon_slave_0_rsp_width_adapter} {altera_merlin_width_adapter};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_ADDR_H} {47};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_ADDR_L} {18};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_DATA_H} {15};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_DATA_L} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BYTEEN_H} {17};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BYTEEN_L} {16};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BYTE_CNT_H} {60};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BYTE_CNT_L} {54};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_TRANS_COMPRESSED_READ} {48};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_TRANS_WRITE} {50};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURSTWRAP_H} {67};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURSTWRAP_L} {61};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURST_SIZE_H} {70};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURST_SIZE_L} {68};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_RESPONSE_STATUS_H} {99};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_RESPONSE_STATUS_L} {98};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_TRANS_EXCLUSIVE} {53};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURST_TYPE_H} {72};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURST_TYPE_L} {71};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_ORI_BURST_SIZE_L} {100};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_PKT_ORI_BURST_SIZE_H} {102};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_ST_DATA_W} {103};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_ADDR_H} {65};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_ADDR_L} {36};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_DATA_H} {31};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_DATA_L} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BYTEEN_H} {35};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BYTEEN_L} {32};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BYTE_CNT_H} {78};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BYTE_CNT_L} {72};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_TRANS_COMPRESSED_READ} {66};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BURST_SIZE_H} {88};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BURST_SIZE_L} {86};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_RESPONSE_STATUS_H} {117};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_RESPONSE_STATUS_L} {116};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_TRANS_EXCLUSIVE} {71};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BURST_TYPE_H} {90};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BURST_TYPE_L} {89};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_ORI_BURST_SIZE_L} {118};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_ORI_BURST_SIZE_H} {120};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_ST_DATA_W} {121};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {ST_CHANNEL_W} {2};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OPTIMIZE_FOR_RSP} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {RESPONSE_PATH} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {CONSTANT_BURST_SIZE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {PACKING} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {IN_MERLIN_PACKET_FORMAT} {ori_burst_size(102:100) response_status(99:98) cache(97:94) protection(93:91) thread_id(90:79) dest_id(78) src_id(77) qos(76) begin_burst(75) data_sideband(74) addr_sideband(73) burst_type(72:71) burst_size(70:68) burstwrap(67:61) byte_cnt(60:54) trans_exclusive(53) trans_lock(52) trans_read(51) trans_write(50) trans_posted(49) trans_compressed_read(48) addr(47:18) byteen(17:16) data(15:0)};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {OUT_MERLIN_PACKET_FORMAT} {ori_burst_size(120:118) response_status(117:116) cache(115:112) protection(111:109) thread_id(108:97) dest_id(96) src_id(95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {COMMAND_SIZE_W} {3};set_instance_parameter_value {hybridcpu0_avalon_slave_0_rsp_width_adapter} {ENABLE_ADDRESS_ALIGNMENT} {1};add_instance {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {altera_merlin_width_adapter};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_ADDR_H} {38};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_ADDR_L} {9};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_DATA_H} {7};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_DATA_L} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BYTEEN_H} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BYTEEN_L} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BYTE_CNT_H} {51};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BYTE_CNT_L} {45};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_TRANS_COMPRESSED_READ} {39};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_TRANS_WRITE} {41};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURSTWRAP_H} {58};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURSTWRAP_L} {52};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURST_SIZE_H} {61};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURST_SIZE_L} {59};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_RESPONSE_STATUS_H} {90};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_RESPONSE_STATUS_L} {89};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_TRANS_EXCLUSIVE} {44};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURST_TYPE_H} {63};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURST_TYPE_L} {62};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_ORI_BURST_SIZE_L} {91};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_ORI_BURST_SIZE_H} {93};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_ST_DATA_W} {94};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_ADDR_H} {65};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_ADDR_L} {36};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_DATA_H} {31};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_DATA_L} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BYTEEN_H} {35};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BYTEEN_L} {32};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BYTE_CNT_H} {78};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BYTE_CNT_L} {72};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_TRANS_COMPRESSED_READ} {66};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BURST_SIZE_H} {88};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BURST_SIZE_L} {86};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_RESPONSE_STATUS_H} {117};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_RESPONSE_STATUS_L} {116};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_TRANS_EXCLUSIVE} {71};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BURST_TYPE_H} {90};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BURST_TYPE_L} {89};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_ORI_BURST_SIZE_L} {118};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_ORI_BURST_SIZE_H} {120};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_ST_DATA_W} {121};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {ST_CHANNEL_W} {2};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OPTIMIZE_FOR_RSP} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {RESPONSE_PATH} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {CONSTANT_BURST_SIZE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {PACKING} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_MERLIN_PACKET_FORMAT} {ori_burst_size(93:91) response_status(90:89) cache(88:85) protection(84:82) thread_id(81:70) dest_id(69) src_id(68) qos(67) begin_burst(66) data_sideband(65) addr_sideband(64) burst_type(63:62) burst_size(61:59) burstwrap(58:52) byte_cnt(51:45) trans_exclusive(44) trans_lock(43) trans_read(42) trans_write(41) trans_posted(40) trans_compressed_read(39) addr(38:9) byteen(8) data(7:0)};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_MERLIN_PACKET_FORMAT} {ori_burst_size(120:118) response_status(117:116) cache(115:112) protection(111:109) thread_id(108:97) dest_id(96) src_id(95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {COMMAND_SIZE_W} {3};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {ENABLE_ADDRESS_ALIGNMENT} {1};add_instance {hybridcpu0_avalon_slave_0_cmd_width_adapter} {altera_merlin_width_adapter};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_ADDR_H} {65};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_ADDR_L} {36};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_DATA_H} {31};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_DATA_L} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BYTEEN_H} {35};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BYTEEN_L} {32};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BYTE_CNT_H} {78};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BYTE_CNT_L} {72};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_TRANS_COMPRESSED_READ} {66};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_TRANS_WRITE} {68};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURSTWRAP_H} {85};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURSTWRAP_L} {79};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURST_SIZE_H} {88};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURST_SIZE_L} {86};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_RESPONSE_STATUS_H} {117};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_RESPONSE_STATUS_L} {116};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_TRANS_EXCLUSIVE} {71};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURST_TYPE_H} {90};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURST_TYPE_L} {89};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_ORI_BURST_SIZE_L} {118};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_PKT_ORI_BURST_SIZE_H} {120};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_ST_DATA_W} {121};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_ADDR_H} {47};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_ADDR_L} {18};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_DATA_H} {15};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_DATA_L} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BYTEEN_H} {17};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BYTEEN_L} {16};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BYTE_CNT_H} {60};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BYTE_CNT_L} {54};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_TRANS_COMPRESSED_READ} {48};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BURST_SIZE_H} {70};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BURST_SIZE_L} {68};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_RESPONSE_STATUS_H} {99};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_RESPONSE_STATUS_L} {98};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_TRANS_EXCLUSIVE} {53};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BURST_TYPE_H} {72};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BURST_TYPE_L} {71};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_ORI_BURST_SIZE_L} {100};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_ORI_BURST_SIZE_H} {102};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_ST_DATA_W} {103};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {ST_CHANNEL_W} {2};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OPTIMIZE_FOR_RSP} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {RESPONSE_PATH} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {CONSTANT_BURST_SIZE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {PACKING} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {IN_MERLIN_PACKET_FORMAT} {ori_burst_size(120:118) response_status(117:116) cache(115:112) protection(111:109) thread_id(108:97) dest_id(96) src_id(95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {OUT_MERLIN_PACKET_FORMAT} {ori_burst_size(102:100) response_status(99:98) cache(97:94) protection(93:91) thread_id(90:79) dest_id(78) src_id(77) qos(76) begin_burst(75) data_sideband(74) addr_sideband(73) burst_type(72:71) burst_size(70:68) burstwrap(67:61) byte_cnt(60:54) trans_exclusive(53) trans_lock(52) trans_read(51) trans_write(50) trans_posted(49) trans_compressed_read(48) addr(47:18) byteen(17:16) data(15:0)};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {COMMAND_SIZE_W} {3};set_instance_parameter_value {hybridcpu0_avalon_slave_0_cmd_width_adapter} {ENABLE_ADDRESS_ALIGNMENT} {1};add_instance {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {altera_merlin_width_adapter};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_ADDR_H} {65};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_ADDR_L} {36};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_DATA_H} {31};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_DATA_L} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BYTEEN_H} {35};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BYTEEN_L} {32};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BYTE_CNT_H} {78};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BYTE_CNT_L} {72};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_TRANS_COMPRESSED_READ} {66};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_TRANS_WRITE} {68};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURSTWRAP_H} {85};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURSTWRAP_L} {79};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURST_SIZE_H} {88};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURST_SIZE_L} {86};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_RESPONSE_STATUS_H} {117};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_RESPONSE_STATUS_L} {116};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_TRANS_EXCLUSIVE} {71};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURST_TYPE_H} {90};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURST_TYPE_L} {89};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_ORI_BURST_SIZE_L} {118};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_ORI_BURST_SIZE_H} {120};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_ST_DATA_W} {121};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_ADDR_H} {38};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_ADDR_L} {9};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_DATA_H} {7};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_DATA_L} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BYTEEN_H} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BYTEEN_L} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BYTE_CNT_H} {51};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BYTE_CNT_L} {45};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_TRANS_COMPRESSED_READ} {39};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BURST_SIZE_H} {61};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BURST_SIZE_L} {59};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_RESPONSE_STATUS_H} {90};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_RESPONSE_STATUS_L} {89};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_TRANS_EXCLUSIVE} {44};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BURST_TYPE_H} {63};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BURST_TYPE_L} {62};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_ORI_BURST_SIZE_L} {91};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_ORI_BURST_SIZE_H} {93};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_ST_DATA_W} {94};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {ST_CHANNEL_W} {2};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OPTIMIZE_FOR_RSP} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {RESPONSE_PATH} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {CONSTANT_BURST_SIZE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {PACKING} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_MERLIN_PACKET_FORMAT} {ori_burst_size(120:118) response_status(117:116) cache(115:112) protection(111:109) thread_id(108:97) dest_id(96) src_id(95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_MERLIN_PACKET_FORMAT} {ori_burst_size(93:91) response_status(90:89) cache(88:85) protection(84:82) thread_id(81:70) dest_id(69) src_id(68) qos(67) begin_burst(66) data_sideband(65) addr_sideband(64) burst_type(63:62) burst_size(61:59) burstwrap(58:52) byte_cnt(51:45) trans_exclusive(44) trans_lock(43) trans_read(42) trans_write(41) trans_posted(40) trans_compressed_read(39) addr(38:9) byteen(8) data(7:0)};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {COMMAND_SIZE_W} {3};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {ENABLE_ADDRESS_ALIGNMENT} {1};add_instance {hybridcpu0_reset_reset_bridge} {altera_reset_bridge};set_instance_parameter_value {hybridcpu0_reset_reset_bridge} {ACTIVE_LOW_RESET} {0};set_instance_parameter_value {hybridcpu0_reset_reset_bridge} {SYNCHRONOUS_EDGES} {deassert};set_instance_parameter_value {hybridcpu0_reset_reset_bridge} {NUM_RESET_OUTPUTS} {1};set_instance_parameter_value {hybridcpu0_reset_reset_bridge} {USE_RESET_REQUEST} {0};add_instance {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge} {altera_reset_bridge};set_instance_parameter_value {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge} {ACTIVE_LOW_RESET} {0};set_instance_parameter_value {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge} {SYNCHRONOUS_EDGES} {deassert};set_instance_parameter_value {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge} {NUM_RESET_OUTPUTS} {1};set_instance_parameter_value {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge} {USE_RESET_REQUEST} {0};add_instance {clk_0_clk_clock_bridge} {altera_clock_bridge};set_instance_parameter_value {clk_0_clk_clock_bridge} {EXPLICIT_CLOCK_RATE} {114000000};set_instance_parameter_value {clk_0_clk_clock_bridge} {NUM_CLOCK_OUTPUTS} {1};add_connection {hybridcpu0_avalon_slave_0_agent.m0} {hybridcpu0_avalon_slave_0_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {hybridcpu0_avalon_slave_0_agent.m0/hybridcpu0_avalon_slave_0_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {hybridcpu0_avalon_slave_0_agent.m0/hybridcpu0_avalon_slave_0_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {hybridcpu0_avalon_slave_0_agent.m0/hybridcpu0_avalon_slave_0_translator.avalon_universal_slave_0} {defaultConnection} {false};add_connection {hybridcpu0_avalon_slave_0_agent.rf_source} {hybridcpu0_avalon_slave_0_agent_rsp_fifo.in} {avalon_streaming};add_connection {hybridcpu0_avalon_slave_0_agent_rsp_fifo.out} {hybridcpu0_avalon_slave_0_agent.rf_sink} {avalon_streaming};add_connection {hybridcpu0_avalon_slave_0_agent.rdata_fifo_src} {hybridcpu0_avalon_slave_0_agent_rdata_fifo.in} {avalon_streaming};add_connection {hybridcpu0_avalon_slave_0_agent_rdata_fifo.out} {hybridcpu0_avalon_slave_0_agent.rdata_fifo_sink} {avalon_streaming};add_connection {arm_irq_avalon_0_avalon_slave_0_agent.m0} {arm_irq_avalon_0_avalon_slave_0_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent.m0/arm_irq_avalon_0_avalon_slave_0_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent.m0/arm_irq_avalon_0_avalon_slave_0_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent.m0/arm_irq_avalon_0_avalon_slave_0_translator.avalon_universal_slave_0} {defaultConnection} {false};add_connection {arm_irq_avalon_0_avalon_slave_0_agent.rf_source} {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo.in} {avalon_streaming};add_connection {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo.out} {arm_irq_avalon_0_avalon_slave_0_agent.rf_sink} {avalon_streaming};add_connection {arm_irq_avalon_0_avalon_slave_0_agent.rdata_fifo_src} {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo.in} {avalon_streaming};add_connection {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo.out} {arm_irq_avalon_0_avalon_slave_0_agent.rdata_fifo_sink} {avalon_streaming};add_connection {hps_0_h2f_axi_master_agent.write_cp} {router.sink} {avalon_streaming};preview_set_connection_tag {hps_0_h2f_axi_master_agent.write_cp/router.sink} {qsys_mm.command};add_connection {hps_0_h2f_axi_master_agent.read_cp} {router_001.sink} {avalon_streaming};preview_set_connection_tag {hps_0_h2f_axi_master_agent.read_cp/router_001.sink} {qsys_mm.command};add_connection {hybridcpu0_avalon_slave_0_agent.rp} {router_002.sink} {avalon_streaming};preview_set_connection_tag {hybridcpu0_avalon_slave_0_agent.rp/router_002.sink} {qsys_mm.response};add_connection {arm_irq_avalon_0_avalon_slave_0_agent.rp} {router_003.sink} {avalon_streaming};preview_set_connection_tag {arm_irq_avalon_0_avalon_slave_0_agent.rp/router_003.sink} {qsys_mm.response};add_connection {router.src} {hps_0_h2f_axi_master_wr_limiter.cmd_sink} {avalon_streaming};preview_set_connection_tag {router.src/hps_0_h2f_axi_master_wr_limiter.cmd_sink} {qsys_mm.command};add_connection {hps_0_h2f_axi_master_wr_limiter.cmd_src} {cmd_demux.sink} {avalon_streaming};preview_set_connection_tag {hps_0_h2f_axi_master_wr_limiter.cmd_src/cmd_demux.sink} {qsys_mm.command};add_connection {rsp_mux.src} {hps_0_h2f_axi_master_wr_limiter.rsp_sink} {avalon_streaming};preview_set_connection_tag {rsp_mux.src/hps_0_h2f_axi_master_wr_limiter.rsp_sink} {qsys_mm.response};add_connection {hps_0_h2f_axi_master_wr_limiter.rsp_src} {hps_0_h2f_axi_master_agent.write_rp} {avalon_streaming};preview_set_connection_tag {hps_0_h2f_axi_master_wr_limiter.rsp_src/hps_0_h2f_axi_master_agent.write_rp} {qsys_mm.response};add_connection {router_001.src} {hps_0_h2f_axi_master_rd_limiter.cmd_sink} {avalon_streaming};preview_set_connection_tag {router_001.src/hps_0_h2f_axi_master_rd_limiter.cmd_sink} {qsys_mm.command};add_connection {hps_0_h2f_axi_master_rd_limiter.cmd_src} {cmd_demux_001.sink} {avalon_streaming};preview_set_connection_tag {hps_0_h2f_axi_master_rd_limiter.cmd_src/cmd_demux_001.sink} {qsys_mm.command};add_connection {rsp_mux_001.src} {hps_0_h2f_axi_master_rd_limiter.rsp_sink} {avalon_streaming};preview_set_connection_tag {rsp_mux_001.src/hps_0_h2f_axi_master_rd_limiter.rsp_sink} {qsys_mm.response};add_connection {hps_0_h2f_axi_master_rd_limiter.rsp_src} {hps_0_h2f_axi_master_agent.read_rp} {avalon_streaming};preview_set_connection_tag {hps_0_h2f_axi_master_rd_limiter.rsp_src/hps_0_h2f_axi_master_agent.read_rp} {qsys_mm.response};add_connection {hybridcpu0_avalon_slave_0_burst_adapter.source0} {hybridcpu0_avalon_slave_0_agent.cp} {avalon_streaming};preview_set_connection_tag {hybridcpu0_avalon_slave_0_burst_adapter.source0/hybridcpu0_avalon_slave_0_agent.cp} {qsys_mm.command};add_connection {arm_irq_avalon_0_avalon_slave_0_burst_adapter.source0} {arm_irq_avalon_0_avalon_slave_0_agent.cp} {avalon_streaming};preview_set_connection_tag {arm_irq_avalon_0_avalon_slave_0_burst_adapter.source0/arm_irq_avalon_0_avalon_slave_0_agent.cp} {qsys_mm.command};add_connection {cmd_demux.src0} {cmd_mux.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src0/cmd_mux.sink0} {qsys_mm.command};add_connection {cmd_demux.src1} {cmd_mux_001.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src1/cmd_mux_001.sink0} {qsys_mm.command};add_connection {cmd_demux_001.src0} {cmd_mux.sink1} {avalon_streaming};preview_set_connection_tag {cmd_demux_001.src0/cmd_mux.sink1} {qsys_mm.command};add_connection {cmd_demux_001.src1} {cmd_mux_001.sink1} {avalon_streaming};preview_set_connection_tag {cmd_demux_001.src1/cmd_mux_001.sink1} {qsys_mm.command};add_connection {rsp_demux.src0} {rsp_mux.sink0} {avalon_streaming};preview_set_connection_tag {rsp_demux.src0/rsp_mux.sink0} {qsys_mm.response};add_connection {rsp_demux.src1} {rsp_mux_001.sink0} {avalon_streaming};preview_set_connection_tag {rsp_demux.src1/rsp_mux_001.sink0} {qsys_mm.response};add_connection {rsp_demux_001.src0} {rsp_mux.sink1} {avalon_streaming};preview_set_connection_tag {rsp_demux_001.src0/rsp_mux.sink1} {qsys_mm.response};add_connection {rsp_demux_001.src1} {rsp_mux_001.sink1} {avalon_streaming};preview_set_connection_tag {rsp_demux_001.src1/rsp_mux_001.sink1} {qsys_mm.response};add_connection {router_002.src} {hybridcpu0_avalon_slave_0_rsp_width_adapter.sink} {avalon_streaming};preview_set_connection_tag {router_002.src/hybridcpu0_avalon_slave_0_rsp_width_adapter.sink} {qsys_mm.response};add_connection {hybridcpu0_avalon_slave_0_rsp_width_adapter.src} {rsp_demux.sink} {avalon_streaming};preview_set_connection_tag {hybridcpu0_avalon_slave_0_rsp_width_adapter.src/rsp_demux.sink} {qsys_mm.response};add_connection {router_003.src} {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter.sink} {avalon_streaming};preview_set_connection_tag {router_003.src/arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter.sink} {qsys_mm.response};add_connection {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter.src} {rsp_demux_001.sink} {avalon_streaming};preview_set_connection_tag {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter.src/rsp_demux_001.sink} {qsys_mm.response};add_connection {cmd_mux.src} {hybridcpu0_avalon_slave_0_cmd_width_adapter.sink} {avalon_streaming};preview_set_connection_tag {cmd_mux.src/hybridcpu0_avalon_slave_0_cmd_width_adapter.sink} {qsys_mm.command};add_connection {hybridcpu0_avalon_slave_0_cmd_width_adapter.src} {hybridcpu0_avalon_slave_0_burst_adapter.sink0} {avalon_streaming};preview_set_connection_tag {hybridcpu0_avalon_slave_0_cmd_width_adapter.src/hybridcpu0_avalon_slave_0_burst_adapter.sink0} {qsys_mm.command};add_connection {cmd_mux_001.src} {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter.sink} {avalon_streaming};preview_set_connection_tag {cmd_mux_001.src/arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter.sink} {qsys_mm.command};add_connection {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter.src} {arm_irq_avalon_0_avalon_slave_0_burst_adapter.sink0} {avalon_streaming};preview_set_connection_tag {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter.src/arm_irq_avalon_0_avalon_slave_0_burst_adapter.sink0} {qsys_mm.command};add_connection {hps_0_h2f_axi_master_wr_limiter.cmd_valid} {cmd_demux.sink_valid} {avalon_streaming};add_connection {hps_0_h2f_axi_master_rd_limiter.cmd_valid} {cmd_demux_001.sink_valid} {avalon_streaming};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {hybridcpu0_avalon_slave_0_translator.reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {arm_irq_avalon_0_avalon_slave_0_translator.reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {hybridcpu0_avalon_slave_0_agent.clk_reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {hybridcpu0_avalon_slave_0_agent_rsp_fifo.clk_reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {hybridcpu0_avalon_slave_0_agent_rdata_fifo.clk_reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {arm_irq_avalon_0_avalon_slave_0_agent.clk_reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo.clk_reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo.clk_reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {router_002.clk_reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {router_003.clk_reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {hybridcpu0_avalon_slave_0_burst_adapter.cr0_reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {arm_irq_avalon_0_avalon_slave_0_burst_adapter.cr0_reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {cmd_mux.clk_reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {cmd_mux_001.clk_reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {rsp_demux.clk_reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {rsp_demux_001.clk_reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {hybridcpu0_avalon_slave_0_rsp_width_adapter.clk_reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter.clk_reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {hybridcpu0_avalon_slave_0_cmd_width_adapter.clk_reset} {reset};add_connection {hybridcpu0_reset_reset_bridge.out_reset} {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {hps_0_h2f_axi_master_agent.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {router.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {router_001.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {hps_0_h2f_axi_master_wr_limiter.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {hps_0_h2f_axi_master_rd_limiter.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {cmd_demux.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {cmd_demux_001.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {rsp_mux.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {rsp_mux_001.clk_reset} {reset};add_connection {clk_0_clk_clock_bridge.out_clk} {hybridcpu0_avalon_slave_0_translator.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_irq_avalon_0_avalon_slave_0_translator.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hps_0_h2f_axi_master_agent.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hybridcpu0_avalon_slave_0_agent.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hybridcpu0_avalon_slave_0_agent_rsp_fifo.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hybridcpu0_avalon_slave_0_agent_rdata_fifo.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_irq_avalon_0_avalon_slave_0_agent.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {router.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {router_001.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {router_002.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {router_003.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hps_0_h2f_axi_master_wr_limiter.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hps_0_h2f_axi_master_rd_limiter.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hybridcpu0_avalon_slave_0_burst_adapter.cr0} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_irq_avalon_0_avalon_slave_0_burst_adapter.cr0} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {cmd_demux.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {rsp_mux.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {cmd_demux_001.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {rsp_mux_001.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {cmd_mux.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {rsp_demux.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {cmd_mux_001.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {rsp_demux_001.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hybridcpu0_avalon_slave_0_rsp_width_adapter.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hybridcpu0_avalon_slave_0_cmd_width_adapter.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hybridcpu0_reset_reset_bridge.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.clk} {clock};add_interface {hps_0_h2f_axi_master} {axi} {slave};set_interface_property {hps_0_h2f_axi_master} {EXPORT_OF} {hps_0_h2f_axi_master_agent.altera_axi_slave};add_interface {clk_0_clk} {clock} {slave};set_interface_property {clk_0_clk} {EXPORT_OF} {clk_0_clk_clock_bridge.in_clk};add_interface {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge_in_reset} {reset} {slave};set_interface_property {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge_in_reset} {EXPORT_OF} {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.in_reset};add_interface {hybridcpu0_reset_reset_bridge_in_reset} {reset} {slave};set_interface_property {hybridcpu0_reset_reset_bridge_in_reset} {EXPORT_OF} {hybridcpu0_reset_reset_bridge.in_reset};add_interface {arm_irq_avalon_0_avalon_slave_0} {avalon} {master};set_interface_property {arm_irq_avalon_0_avalon_slave_0} {EXPORT_OF} {arm_irq_avalon_0_avalon_slave_0_translator.avalon_anti_slave_0};add_interface {hybridcpu0_avalon_slave_0} {avalon} {master};set_interface_property {hybridcpu0_avalon_slave_0} {EXPORT_OF} {hybridcpu0_avalon_slave_0_translator.avalon_anti_slave_0};set_module_assignment {interconnect_id.arm_irq_avalon_0.avalon_slave_0} {0};set_module_assignment {interconnect_id.hps_0.h2f_axi_master} {0};set_module_assignment {interconnect_id.hybridcpu0.avalon_slave_0} {1};]]></value>
+};set_instance_parameter_value {hps_0_h2f_axi_master_agent} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {arm_irq_avalon_0_avalon_slave_0_agent} {altera_merlin_slave_agent};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_ORI_BURST_SIZE_H} {95};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_ORI_BURST_SIZE_L} {93};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_RESPONSE_STATUS_H} {92};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_RESPONSE_STATUS_L} {91};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BURST_SIZE_H} {61};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BURST_SIZE_L} {59};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_TRANS_LOCK} {43};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BEGIN_BURST} {66};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_PROTECTION_H} {86};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_PROTECTION_L} {84};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BURSTWRAP_H} {58};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BURSTWRAP_L} {52};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BYTE_CNT_H} {51};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BYTE_CNT_L} {45};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_ADDR_H} {38};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_ADDR_L} {9};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_TRANS_COMPRESSED_READ} {39};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_TRANS_POSTED} {40};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_TRANS_WRITE} {41};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_TRANS_READ} {42};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_DATA_H} {7};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_DATA_L} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BYTEEN_H} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_BYTEEN_L} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_SRC_ID_H} {69};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_SRC_ID_L} {68};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_DEST_ID_H} {71};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_DEST_ID_L} {70};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {ST_CHANNEL_W} {3};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {ST_DATA_W} {96};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {AVS_BURSTCOUNT_W} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {MERLIN_PACKET_FORMAT} {ori_burst_size(95:93) response_status(92:91) cache(90:87) protection(86:84) thread_id(83:72) dest_id(71:70) src_id(69:68) qos(67) begin_burst(66) data_sideband(65) addr_sideband(64) burst_type(63:62) burst_size(61:59) burstwrap(58:52) byte_cnt(51:45) trans_exclusive(44) trans_lock(43) trans_read(42) trans_write(41) trans_posted(40) trans_compressed_read(39) addr(38:9) byteen(8) data(7:0)};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {SUPPRESS_0_BYTEEN_CMD} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {MAX_BYTE_CNT} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {MAX_BURSTWRAP} {127};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {ID} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent} {ECC_ENABLE} {0};add_instance {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {BITS_PER_SYMBOL} {97};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};add_instance {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {BITS_PER_SYMBOL} {10};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_PACKETS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {EMPTY_LATENCY} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo} {EXPLICIT_MAXCHANNEL} {0};add_instance {arm_regs_avalon_0_avalon_slave_0_agent} {altera_merlin_slave_agent};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_ORI_BURST_SIZE_H} {122};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_ORI_BURST_SIZE_L} {120};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_RESPONSE_STATUS_H} {119};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_RESPONSE_STATUS_L} {118};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_BURST_SIZE_H} {88};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_BURST_SIZE_L} {86};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_TRANS_LOCK} {70};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_BEGIN_BURST} {93};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_PROTECTION_H} {113};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_PROTECTION_L} {111};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_BURSTWRAP_H} {85};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_BURSTWRAP_L} {79};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_BYTE_CNT_H} {78};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_BYTE_CNT_L} {72};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_ADDR_H} {65};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_ADDR_L} {36};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_TRANS_COMPRESSED_READ} {66};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_TRANS_POSTED} {67};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_TRANS_WRITE} {68};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_TRANS_READ} {69};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_DATA_H} {31};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_DATA_L} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_BYTEEN_H} {35};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_BYTEEN_L} {32};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_SRC_ID_H} {96};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_SRC_ID_L} {95};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_DEST_ID_H} {98};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_DEST_ID_L} {97};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {ST_CHANNEL_W} {3};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {ST_DATA_W} {123};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {AVS_BURSTCOUNT_W} {3};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {SUPPRESS_0_BYTEEN_CMD} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {MAX_BYTE_CNT} {4};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {MAX_BURSTWRAP} {127};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {ID} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent} {ECC_ENABLE} {0};add_instance {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo} {BITS_PER_SYMBOL} {124};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};add_instance {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo} {BITS_PER_SYMBOL} {34};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_PACKETS} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo} {EMPTY_LATENCY} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo} {EXPLICIT_MAXCHANNEL} {0};add_instance {hybridcpu0_avalon_slave_0_agent} {altera_merlin_slave_agent};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_ORI_BURST_SIZE_H} {122};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_ORI_BURST_SIZE_L} {120};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_RESPONSE_STATUS_H} {119};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_RESPONSE_STATUS_L} {118};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BURST_SIZE_H} {88};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BURST_SIZE_L} {86};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_TRANS_LOCK} {70};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BEGIN_BURST} {93};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_PROTECTION_H} {113};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_PROTECTION_L} {111};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BURSTWRAP_H} {85};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BURSTWRAP_L} {79};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BYTE_CNT_H} {78};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BYTE_CNT_L} {72};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_ADDR_H} {65};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_ADDR_L} {36};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_TRANS_COMPRESSED_READ} {66};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_TRANS_POSTED} {67};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_TRANS_WRITE} {68};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_TRANS_READ} {69};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_DATA_H} {31};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_DATA_L} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BYTEEN_H} {35};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_BYTEEN_L} {32};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_SRC_ID_H} {96};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_SRC_ID_L} {95};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_DEST_ID_H} {98};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_DEST_ID_L} {97};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {ST_CHANNEL_W} {3};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {ST_DATA_W} {123};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {AVS_BURSTCOUNT_W} {3};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {SUPPRESS_0_BYTEEN_CMD} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {MAX_BYTE_CNT} {4};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {MAX_BURSTWRAP} {127};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {ID} {2};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent} {ECC_ENABLE} {0};add_instance {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {BITS_PER_SYMBOL} {124};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {FIFO_DEPTH} {9};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};add_instance {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {BITS_PER_SYMBOL} {34};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {FIFO_DEPTH} {16};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {USE_PACKETS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {EMPTY_LATENCY} {3};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {USE_MEMORY_BLOCKS} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {hybridcpu0_avalon_slave_0_agent_rdata_fifo} {EXPLICIT_MAXCHANNEL} {0};add_instance {router} {altera_merlin_router};set_instance_parameter_value {router} {DESTINATION_ID} {2 0 1 };set_instance_parameter_value {router} {CHANNEL_ID} {100 001 010 };set_instance_parameter_value {router} {TYPE_OF_TRANSACTION} {both read write };set_instance_parameter_value {router} {START_ADDRESS} {0x0 0x1000000 0x1000008 };set_instance_parameter_value {router} {END_ADDRESS} {0x1000000 0x1000001 0x1000010 };set_instance_parameter_value {router} {NON_SECURED_TAG} {1 1 1 };set_instance_parameter_value {router} {SECURED_RANGE_PAIRS} {0 0 0 };set_instance_parameter_value {router} {SECURED_RANGE_LIST} {0 0 0 };set_instance_parameter_value {router} {SPAN_OFFSET} {};set_instance_parameter_value {router} {PKT_ADDR_H} {65};set_instance_parameter_value {router} {PKT_ADDR_L} {36};set_instance_parameter_value {router} {PKT_PROTECTION_H} {113};set_instance_parameter_value {router} {PKT_PROTECTION_L} {111};set_instance_parameter_value {router} {PKT_DEST_ID_H} {98};set_instance_parameter_value {router} {PKT_DEST_ID_L} {97};set_instance_parameter_value {router} {PKT_TRANS_WRITE} {68};set_instance_parameter_value {router} {PKT_TRANS_READ} {69};set_instance_parameter_value {router} {ST_DATA_W} {123};set_instance_parameter_value {router} {ST_CHANNEL_W} {3};set_instance_parameter_value {router} {DECODER_TYPE} {0};set_instance_parameter_value {router} {DEFAULT_CHANNEL} {2};set_instance_parameter_value {router} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router} {DEFAULT_DESTID} {2};set_instance_parameter_value {router} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {router} {MEMORY_ALIASING_DECODE} {0};add_instance {router_001} {altera_merlin_router};set_instance_parameter_value {router_001} {DESTINATION_ID} {2 0 1 };set_instance_parameter_value {router_001} {CHANNEL_ID} {100 001 010 };set_instance_parameter_value {router_001} {TYPE_OF_TRANSACTION} {both read write };set_instance_parameter_value {router_001} {START_ADDRESS} {0x0 0x1000000 0x1000008 };set_instance_parameter_value {router_001} {END_ADDRESS} {0x1000000 0x1000001 0x1000010 };set_instance_parameter_value {router_001} {NON_SECURED_TAG} {1 1 1 };set_instance_parameter_value {router_001} {SECURED_RANGE_PAIRS} {0 0 0 };set_instance_parameter_value {router_001} {SECURED_RANGE_LIST} {0 0 0 };set_instance_parameter_value {router_001} {SPAN_OFFSET} {};set_instance_parameter_value {router_001} {PKT_ADDR_H} {65};set_instance_parameter_value {router_001} {PKT_ADDR_L} {36};set_instance_parameter_value {router_001} {PKT_PROTECTION_H} {113};set_instance_parameter_value {router_001} {PKT_PROTECTION_L} {111};set_instance_parameter_value {router_001} {PKT_DEST_ID_H} {98};set_instance_parameter_value {router_001} {PKT_DEST_ID_L} {97};set_instance_parameter_value {router_001} {PKT_TRANS_WRITE} {68};set_instance_parameter_value {router_001} {PKT_TRANS_READ} {69};set_instance_parameter_value {router_001} {ST_DATA_W} {123};set_instance_parameter_value {router_001} {ST_CHANNEL_W} {3};set_instance_parameter_value {router_001} {DECODER_TYPE} {0};set_instance_parameter_value {router_001} {DEFAULT_CHANNEL} {2};set_instance_parameter_value {router_001} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_001} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_001} {DEFAULT_DESTID} {2};set_instance_parameter_value {router_001} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {router_001} {MEMORY_ALIASING_DECODE} {0};add_instance {router_002} {altera_merlin_router};set_instance_parameter_value {router_002} {DESTINATION_ID} {0 0 };set_instance_parameter_value {router_002} {CHANNEL_ID} {01 10 };set_instance_parameter_value {router_002} {TYPE_OF_TRANSACTION} {write read };set_instance_parameter_value {router_002} {START_ADDRESS} {0x0 0x0 };set_instance_parameter_value {router_002} {END_ADDRESS} {0x0 0x0 };set_instance_parameter_value {router_002} {NON_SECURED_TAG} {1 1 };set_instance_parameter_value {router_002} {SECURED_RANGE_PAIRS} {0 0 };set_instance_parameter_value {router_002} {SECURED_RANGE_LIST} {0 0 };set_instance_parameter_value {router_002} {SPAN_OFFSET} {};set_instance_parameter_value {router_002} {PKT_ADDR_H} {38};set_instance_parameter_value {router_002} {PKT_ADDR_L} {9};set_instance_parameter_value {router_002} {PKT_PROTECTION_H} {86};set_instance_parameter_value {router_002} {PKT_PROTECTION_L} {84};set_instance_parameter_value {router_002} {PKT_DEST_ID_H} {71};set_instance_parameter_value {router_002} {PKT_DEST_ID_L} {70};set_instance_parameter_value {router_002} {PKT_TRANS_WRITE} {41};set_instance_parameter_value {router_002} {PKT_TRANS_READ} {42};set_instance_parameter_value {router_002} {ST_DATA_W} {96};set_instance_parameter_value {router_002} {ST_CHANNEL_W} {3};set_instance_parameter_value {router_002} {DECODER_TYPE} {1};set_instance_parameter_value {router_002} {DEFAULT_CHANNEL} {-1};set_instance_parameter_value {router_002} {DEFAULT_WR_CHANNEL} {0};set_instance_parameter_value {router_002} {DEFAULT_RD_CHANNEL} {1};set_instance_parameter_value {router_002} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_002} {MERLIN_PACKET_FORMAT} {ori_burst_size(95:93) response_status(92:91) cache(90:87) protection(86:84) thread_id(83:72) dest_id(71:70) src_id(69:68) qos(67) begin_burst(66) data_sideband(65) addr_sideband(64) burst_type(63:62) burst_size(61:59) burstwrap(58:52) byte_cnt(51:45) trans_exclusive(44) trans_lock(43) trans_read(42) trans_write(41) trans_posted(40) trans_compressed_read(39) addr(38:9) byteen(8) data(7:0)};set_instance_parameter_value {router_002} {MEMORY_ALIASING_DECODE} {0};add_instance {router_003} {altera_merlin_router};set_instance_parameter_value {router_003} {DESTINATION_ID} {0 0 };set_instance_parameter_value {router_003} {CHANNEL_ID} {01 10 };set_instance_parameter_value {router_003} {TYPE_OF_TRANSACTION} {write read };set_instance_parameter_value {router_003} {START_ADDRESS} {0x0 0x0 };set_instance_parameter_value {router_003} {END_ADDRESS} {0x0 0x0 };set_instance_parameter_value {router_003} {NON_SECURED_TAG} {1 1 };set_instance_parameter_value {router_003} {SECURED_RANGE_PAIRS} {0 0 };set_instance_parameter_value {router_003} {SECURED_RANGE_LIST} {0 0 };set_instance_parameter_value {router_003} {SPAN_OFFSET} {};set_instance_parameter_value {router_003} {PKT_ADDR_H} {65};set_instance_parameter_value {router_003} {PKT_ADDR_L} {36};set_instance_parameter_value {router_003} {PKT_PROTECTION_H} {113};set_instance_parameter_value {router_003} {PKT_PROTECTION_L} {111};set_instance_parameter_value {router_003} {PKT_DEST_ID_H} {98};set_instance_parameter_value {router_003} {PKT_DEST_ID_L} {97};set_instance_parameter_value {router_003} {PKT_TRANS_WRITE} {68};set_instance_parameter_value {router_003} {PKT_TRANS_READ} {69};set_instance_parameter_value {router_003} {ST_DATA_W} {123};set_instance_parameter_value {router_003} {ST_CHANNEL_W} {3};set_instance_parameter_value {router_003} {DECODER_TYPE} {1};set_instance_parameter_value {router_003} {DEFAULT_CHANNEL} {-1};set_instance_parameter_value {router_003} {DEFAULT_WR_CHANNEL} {0};set_instance_parameter_value {router_003} {DEFAULT_RD_CHANNEL} {1};set_instance_parameter_value {router_003} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_003} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {router_003} {MEMORY_ALIASING_DECODE} {0};add_instance {router_004} {altera_merlin_router};set_instance_parameter_value {router_004} {DESTINATION_ID} {0 0 };set_instance_parameter_value {router_004} {CHANNEL_ID} {01 10 };set_instance_parameter_value {router_004} {TYPE_OF_TRANSACTION} {write read };set_instance_parameter_value {router_004} {START_ADDRESS} {0x0 0x0 };set_instance_parameter_value {router_004} {END_ADDRESS} {0x0 0x0 };set_instance_parameter_value {router_004} {NON_SECURED_TAG} {1 1 };set_instance_parameter_value {router_004} {SECURED_RANGE_PAIRS} {0 0 };set_instance_parameter_value {router_004} {SECURED_RANGE_LIST} {0 0 };set_instance_parameter_value {router_004} {SPAN_OFFSET} {};set_instance_parameter_value {router_004} {PKT_ADDR_H} {65};set_instance_parameter_value {router_004} {PKT_ADDR_L} {36};set_instance_parameter_value {router_004} {PKT_PROTECTION_H} {113};set_instance_parameter_value {router_004} {PKT_PROTECTION_L} {111};set_instance_parameter_value {router_004} {PKT_DEST_ID_H} {98};set_instance_parameter_value {router_004} {PKT_DEST_ID_L} {97};set_instance_parameter_value {router_004} {PKT_TRANS_WRITE} {68};set_instance_parameter_value {router_004} {PKT_TRANS_READ} {69};set_instance_parameter_value {router_004} {ST_DATA_W} {123};set_instance_parameter_value {router_004} {ST_CHANNEL_W} {3};set_instance_parameter_value {router_004} {DECODER_TYPE} {1};set_instance_parameter_value {router_004} {DEFAULT_CHANNEL} {-1};set_instance_parameter_value {router_004} {DEFAULT_WR_CHANNEL} {0};set_instance_parameter_value {router_004} {DEFAULT_RD_CHANNEL} {1};set_instance_parameter_value {router_004} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_004} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {router_004} {MEMORY_ALIASING_DECODE} {0};add_instance {hps_0_h2f_axi_master_wr_limiter} {altera_merlin_traffic_limiter};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_DEST_ID_H} {98};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_DEST_ID_L} {97};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_SRC_ID_H} {96};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_SRC_ID_L} {95};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_BYTE_CNT_H} {78};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_BYTE_CNT_L} {72};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_BYTEEN_H} {35};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_BYTEEN_L} {32};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_TRANS_POSTED} {67};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_TRANS_WRITE} {68};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_THREAD_ID_H} {110};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PKT_THREAD_ID_L} {99};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {MAX_BURST_LENGTH} {16};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {MAX_OUTSTANDING_RESPONSES} {10};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PIPELINED} {0};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {ST_DATA_W} {123};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {ST_CHANNEL_W} {3};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {VALID_WIDTH} {3};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {ENFORCE_ORDER} {1};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {PREVENT_HAZARDS} {0};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {SUPPORTS_POSTED_WRITES} {1};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {SUPPORTS_NONPOSTED_WRITES} {0};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {hps_0_h2f_axi_master_wr_limiter} {REORDER} {0};add_instance {hps_0_h2f_axi_master_rd_limiter} {altera_merlin_traffic_limiter};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_DEST_ID_H} {98};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_DEST_ID_L} {97};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_SRC_ID_H} {96};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_SRC_ID_L} {95};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_BYTE_CNT_H} {78};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_BYTE_CNT_L} {72};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_BYTEEN_H} {35};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_BYTEEN_L} {32};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_TRANS_POSTED} {67};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_TRANS_WRITE} {68};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_THREAD_ID_H} {110};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PKT_THREAD_ID_L} {99};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {MAX_BURST_LENGTH} {16};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {MAX_OUTSTANDING_RESPONSES} {10};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PIPELINED} {0};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {ST_DATA_W} {123};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {ST_CHANNEL_W} {3};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {VALID_WIDTH} {3};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {ENFORCE_ORDER} {1};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {PREVENT_HAZARDS} {0};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {SUPPORTS_POSTED_WRITES} {1};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {SUPPORTS_NONPOSTED_WRITES} {0};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {hps_0_h2f_axi_master_rd_limiter} {REORDER} {0};add_instance {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {altera_merlin_burst_adapter};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_ADDR_H} {38};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_ADDR_L} {9};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BEGIN_BURST} {66};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BYTE_CNT_H} {51};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BYTE_CNT_L} {45};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BYTEEN_H} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BYTEEN_L} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURST_SIZE_H} {61};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURST_SIZE_L} {59};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURST_TYPE_H} {63};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURST_TYPE_L} {62};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURSTWRAP_H} {58};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURSTWRAP_L} {52};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_TRANS_COMPRESSED_READ} {39};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_TRANS_WRITE} {41};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PKT_TRANS_READ} {42};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {OUT_NARROW_SIZE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {IN_NARROW_SIZE} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {OUT_FIXED} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {OUT_COMPLETE_WRAP} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {ST_DATA_W} {96};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {ST_CHANNEL_W} {3};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {OUT_BYTE_CNT_H} {45};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {OUT_BURSTWRAP_H} {58};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {MERLIN_PACKET_FORMAT} {ori_burst_size(95:93) response_status(92:91) cache(90:87) protection(86:84) thread_id(83:72) dest_id(71:70) src_id(69:68) qos(67) begin_burst(66) data_sideband(65) addr_sideband(64) burst_type(63:62) burst_size(61:59) burstwrap(58:52) byte_cnt(51:45) trans_exclusive(44) trans_lock(43) trans_read(42) trans_write(41) trans_posted(40) trans_compressed_read(39) addr(38:9) byteen(8) data(7:0)};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {COMPRESSED_READ_SUPPORT} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {BYTEENABLE_SYNTHESIS} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {PIPE_INPUTS} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {NO_WRAP_SUPPORT} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {INCOMPLETE_WRAP_SUPPORT} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {BURSTWRAP_CONST_MASK} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {BURSTWRAP_CONST_VALUE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_burst_adapter} {ADAPTER_VERSION} {13.1};add_instance {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {altera_merlin_burst_adapter};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {PKT_ADDR_H} {65};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {PKT_ADDR_L} {36};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {PKT_BEGIN_BURST} {93};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {PKT_BYTE_CNT_H} {78};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {PKT_BYTE_CNT_L} {72};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {PKT_BYTEEN_H} {35};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {PKT_BYTEEN_L} {32};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURST_SIZE_H} {88};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURST_SIZE_L} {86};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURST_TYPE_H} {90};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURST_TYPE_L} {89};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURSTWRAP_H} {85};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {PKT_BURSTWRAP_L} {79};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {PKT_TRANS_COMPRESSED_READ} {66};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {PKT_TRANS_WRITE} {68};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {PKT_TRANS_READ} {69};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {OUT_NARROW_SIZE} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {IN_NARROW_SIZE} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {OUT_FIXED} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {OUT_COMPLETE_WRAP} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {ST_DATA_W} {123};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {ST_CHANNEL_W} {3};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {OUT_BYTE_CNT_H} {74};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {OUT_BURSTWRAP_H} {85};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {COMPRESSED_READ_SUPPORT} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {BYTEENABLE_SYNTHESIS} {1};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {PIPE_INPUTS} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {NO_WRAP_SUPPORT} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {INCOMPLETE_WRAP_SUPPORT} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {BURSTWRAP_CONST_MASK} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {BURSTWRAP_CONST_VALUE} {0};set_instance_parameter_value {arm_regs_avalon_0_avalon_slave_0_burst_adapter} {ADAPTER_VERSION} {13.1};add_instance {hybridcpu0_avalon_slave_0_burst_adapter} {altera_merlin_burst_adapter};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_ADDR_H} {65};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_ADDR_L} {36};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BEGIN_BURST} {93};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BYTE_CNT_H} {78};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BYTE_CNT_L} {72};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BYTEEN_H} {35};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BYTEEN_L} {32};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BURST_SIZE_H} {88};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BURST_SIZE_L} {86};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BURST_TYPE_H} {90};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BURST_TYPE_L} {89};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BURSTWRAP_H} {85};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_BURSTWRAP_L} {79};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_TRANS_COMPRESSED_READ} {66};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_TRANS_WRITE} {68};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PKT_TRANS_READ} {69};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {OUT_NARROW_SIZE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {IN_NARROW_SIZE} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {OUT_FIXED} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {OUT_COMPLETE_WRAP} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {ST_DATA_W} {123};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {ST_CHANNEL_W} {3};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {OUT_BYTE_CNT_H} {74};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {OUT_BURSTWRAP_H} {85};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {COMPRESSED_READ_SUPPORT} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {BYTEENABLE_SYNTHESIS} {1};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {PIPE_INPUTS} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {NO_WRAP_SUPPORT} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {INCOMPLETE_WRAP_SUPPORT} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {BURSTWRAP_CONST_MASK} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {BURSTWRAP_CONST_VALUE} {0};set_instance_parameter_value {hybridcpu0_avalon_slave_0_burst_adapter} {ADAPTER_VERSION} {13.1};add_instance {cmd_demux} {altera_merlin_demultiplexer};set_instance_parameter_value {cmd_demux} {ST_DATA_W} {123};set_instance_parameter_value {cmd_demux} {ST_CHANNEL_W} {3};set_instance_parameter_value {cmd_demux} {NUM_OUTPUTS} {3};set_instance_parameter_value {cmd_demux} {VALID_WIDTH} {3};set_instance_parameter_value {cmd_demux} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {cmd_demux_001} {altera_merlin_demultiplexer};set_instance_parameter_value {cmd_demux_001} {ST_DATA_W} {123};set_instance_parameter_value {cmd_demux_001} {ST_CHANNEL_W} {3};set_instance_parameter_value {cmd_demux_001} {NUM_OUTPUTS} {3};set_instance_parameter_value {cmd_demux_001} {VALID_WIDTH} {3};set_instance_parameter_value {cmd_demux_001} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {cmd_mux} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux} {ST_DATA_W} {123};set_instance_parameter_value {cmd_mux} {ST_CHANNEL_W} {3};set_instance_parameter_value {cmd_mux} {NUM_INPUTS} {2};set_instance_parameter_value {cmd_mux} {PIPELINE_ARB} {0};set_instance_parameter_value {cmd_mux} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux} {PKT_TRANS_LOCK} {70};set_instance_parameter_value {cmd_mux} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux} {ARBITRATION_SHARES} {1 1 };set_instance_parameter_value {cmd_mux} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {cmd_mux_001} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux_001} {ST_DATA_W} {123};set_instance_parameter_value {cmd_mux_001} {ST_CHANNEL_W} {3};set_instance_parameter_value {cmd_mux_001} {NUM_INPUTS} {2};set_instance_parameter_value {cmd_mux_001} {PIPELINE_ARB} {0};set_instance_parameter_value {cmd_mux_001} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux_001} {PKT_TRANS_LOCK} {70};set_instance_parameter_value {cmd_mux_001} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux_001} {ARBITRATION_SHARES} {1 1 };set_instance_parameter_value {cmd_mux_001} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {cmd_mux_002} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux_002} {ST_DATA_W} {123};set_instance_parameter_value {cmd_mux_002} {ST_CHANNEL_W} {3};set_instance_parameter_value {cmd_mux_002} {NUM_INPUTS} {2};set_instance_parameter_value {cmd_mux_002} {PIPELINE_ARB} {0};set_instance_parameter_value {cmd_mux_002} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux_002} {PKT_TRANS_LOCK} {70};set_instance_parameter_value {cmd_mux_002} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux_002} {ARBITRATION_SHARES} {1 1 };set_instance_parameter_value {cmd_mux_002} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {rsp_demux} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux} {ST_DATA_W} {123};set_instance_parameter_value {rsp_demux} {ST_CHANNEL_W} {3};set_instance_parameter_value {rsp_demux} {NUM_OUTPUTS} {2};set_instance_parameter_value {rsp_demux} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {rsp_demux_001} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux_001} {ST_DATA_W} {123};set_instance_parameter_value {rsp_demux_001} {ST_CHANNEL_W} {3};set_instance_parameter_value {rsp_demux_001} {NUM_OUTPUTS} {2};set_instance_parameter_value {rsp_demux_001} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux_001} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {rsp_demux_002} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux_002} {ST_DATA_W} {123};set_instance_parameter_value {rsp_demux_002} {ST_CHANNEL_W} {3};set_instance_parameter_value {rsp_demux_002} {NUM_OUTPUTS} {2};set_instance_parameter_value {rsp_demux_002} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux_002} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {rsp_mux} {altera_merlin_multiplexer};set_instance_parameter_value {rsp_mux} {ST_DATA_W} {123};set_instance_parameter_value {rsp_mux} {ST_CHANNEL_W} {3};set_instance_parameter_value {rsp_mux} {NUM_INPUTS} {3};set_instance_parameter_value {rsp_mux} {PIPELINE_ARB} {0};set_instance_parameter_value {rsp_mux} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {rsp_mux} {PKT_TRANS_LOCK} {70};set_instance_parameter_value {rsp_mux} {ARBITRATION_SCHEME} {no-arb};set_instance_parameter_value {rsp_mux} {ARBITRATION_SHARES} {1 1 1 };set_instance_parameter_value {rsp_mux} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {rsp_mux_001} {altera_merlin_multiplexer};set_instance_parameter_value {rsp_mux_001} {ST_DATA_W} {123};set_instance_parameter_value {rsp_mux_001} {ST_CHANNEL_W} {3};set_instance_parameter_value {rsp_mux_001} {NUM_INPUTS} {3};set_instance_parameter_value {rsp_mux_001} {PIPELINE_ARB} {0};set_instance_parameter_value {rsp_mux_001} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {rsp_mux_001} {PKT_TRANS_LOCK} {70};set_instance_parameter_value {rsp_mux_001} {ARBITRATION_SCHEME} {no-arb};set_instance_parameter_value {rsp_mux_001} {ARBITRATION_SHARES} {1 1 1 };set_instance_parameter_value {rsp_mux_001} {MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};add_instance {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {altera_merlin_width_adapter};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_ADDR_H} {38};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_ADDR_L} {9};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_DATA_H} {7};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_DATA_L} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BYTEEN_H} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BYTEEN_L} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BYTE_CNT_H} {51};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BYTE_CNT_L} {45};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_TRANS_COMPRESSED_READ} {39};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_TRANS_WRITE} {41};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURSTWRAP_H} {58};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURSTWRAP_L} {52};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURST_SIZE_H} {61};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURST_SIZE_L} {59};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_RESPONSE_STATUS_H} {92};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_RESPONSE_STATUS_L} {91};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_TRANS_EXCLUSIVE} {44};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURST_TYPE_H} {63};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_BURST_TYPE_L} {62};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_ORI_BURST_SIZE_L} {93};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_PKT_ORI_BURST_SIZE_H} {95};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_ST_DATA_W} {96};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_ADDR_H} {65};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_ADDR_L} {36};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_DATA_H} {31};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_DATA_L} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BYTEEN_H} {35};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BYTEEN_L} {32};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BYTE_CNT_H} {78};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BYTE_CNT_L} {72};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_TRANS_COMPRESSED_READ} {66};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BURST_SIZE_H} {88};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BURST_SIZE_L} {86};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_RESPONSE_STATUS_H} {119};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_RESPONSE_STATUS_L} {118};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_TRANS_EXCLUSIVE} {71};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BURST_TYPE_H} {90};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_BURST_TYPE_L} {89};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_ORI_BURST_SIZE_L} {120};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_PKT_ORI_BURST_SIZE_H} {122};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_ST_DATA_W} {123};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {ST_CHANNEL_W} {3};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OPTIMIZE_FOR_RSP} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {RESPONSE_PATH} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {CONSTANT_BURST_SIZE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {PACKING} {1};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {IN_MERLIN_PACKET_FORMAT} {ori_burst_size(95:93) response_status(92:91) cache(90:87) protection(86:84) thread_id(83:72) dest_id(71:70) src_id(69:68) qos(67) begin_burst(66) data_sideband(65) addr_sideband(64) burst_type(63:62) burst_size(61:59) burstwrap(58:52) byte_cnt(51:45) trans_exclusive(44) trans_lock(43) trans_read(42) trans_write(41) trans_posted(40) trans_compressed_read(39) addr(38:9) byteen(8) data(7:0)};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {OUT_MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {COMMAND_SIZE_W} {3};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter} {ENABLE_ADDRESS_ALIGNMENT} {1};add_instance {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {altera_merlin_width_adapter};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_ADDR_H} {65};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_ADDR_L} {36};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_DATA_H} {31};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_DATA_L} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BYTEEN_H} {35};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BYTEEN_L} {32};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BYTE_CNT_H} {78};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BYTE_CNT_L} {72};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_TRANS_COMPRESSED_READ} {66};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_TRANS_WRITE} {68};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURSTWRAP_H} {85};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURSTWRAP_L} {79};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURST_SIZE_H} {88};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURST_SIZE_L} {86};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_RESPONSE_STATUS_H} {119};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_RESPONSE_STATUS_L} {118};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_TRANS_EXCLUSIVE} {71};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURST_TYPE_H} {90};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_BURST_TYPE_L} {89};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_ORI_BURST_SIZE_L} {120};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_PKT_ORI_BURST_SIZE_H} {122};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_ST_DATA_W} {123};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_ADDR_H} {38};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_ADDR_L} {9};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_DATA_H} {7};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_DATA_L} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BYTEEN_H} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BYTEEN_L} {8};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BYTE_CNT_H} {51};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BYTE_CNT_L} {45};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_TRANS_COMPRESSED_READ} {39};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BURST_SIZE_H} {61};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BURST_SIZE_L} {59};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_RESPONSE_STATUS_H} {92};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_RESPONSE_STATUS_L} {91};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_TRANS_EXCLUSIVE} {44};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BURST_TYPE_H} {63};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_BURST_TYPE_L} {62};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_ORI_BURST_SIZE_L} {93};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_PKT_ORI_BURST_SIZE_H} {95};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_ST_DATA_W} {96};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {ST_CHANNEL_W} {3};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OPTIMIZE_FOR_RSP} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {RESPONSE_PATH} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {CONSTANT_BURST_SIZE} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {PACKING} {0};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {IN_MERLIN_PACKET_FORMAT} {ori_burst_size(122:120) response_status(119:118) cache(117:114) protection(113:111) thread_id(110:99) dest_id(98:97) src_id(96:95) qos(94) begin_burst(93) data_sideband(92) addr_sideband(91) burst_type(90:89) burst_size(88:86) burstwrap(85:79) byte_cnt(78:72) trans_exclusive(71) trans_lock(70) trans_read(69) trans_write(68) trans_posted(67) trans_compressed_read(66) addr(65:36) byteen(35:32) data(31:0)};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {OUT_MERLIN_PACKET_FORMAT} {ori_burst_size(95:93) response_status(92:91) cache(90:87) protection(86:84) thread_id(83:72) dest_id(71:70) src_id(69:68) qos(67) begin_burst(66) data_sideband(65) addr_sideband(64) burst_type(63:62) burst_size(61:59) burstwrap(58:52) byte_cnt(51:45) trans_exclusive(44) trans_lock(43) trans_read(42) trans_write(41) trans_posted(40) trans_compressed_read(39) addr(38:9) byteen(8) data(7:0)};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {COMMAND_SIZE_W} {3};set_instance_parameter_value {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter} {ENABLE_ADDRESS_ALIGNMENT} {1};add_instance {arm_irq_avalon_0_reset_reset_bridge} {altera_reset_bridge};set_instance_parameter_value {arm_irq_avalon_0_reset_reset_bridge} {ACTIVE_LOW_RESET} {0};set_instance_parameter_value {arm_irq_avalon_0_reset_reset_bridge} {SYNCHRONOUS_EDGES} {deassert};set_instance_parameter_value {arm_irq_avalon_0_reset_reset_bridge} {NUM_RESET_OUTPUTS} {1};set_instance_parameter_value {arm_irq_avalon_0_reset_reset_bridge} {USE_RESET_REQUEST} {0};add_instance {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge} {altera_reset_bridge};set_instance_parameter_value {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge} {ACTIVE_LOW_RESET} {0};set_instance_parameter_value {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge} {SYNCHRONOUS_EDGES} {deassert};set_instance_parameter_value {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge} {NUM_RESET_OUTPUTS} {1};set_instance_parameter_value {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge} {USE_RESET_REQUEST} {0};add_instance {clk_0_clk_clock_bridge} {altera_clock_bridge};set_instance_parameter_value {clk_0_clk_clock_bridge} {EXPLICIT_CLOCK_RATE} {114000000};set_instance_parameter_value {clk_0_clk_clock_bridge} {NUM_CLOCK_OUTPUTS} {1};add_connection {arm_irq_avalon_0_avalon_slave_0_agent.m0} {arm_irq_avalon_0_avalon_slave_0_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent.m0/arm_irq_avalon_0_avalon_slave_0_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent.m0/arm_irq_avalon_0_avalon_slave_0_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {arm_irq_avalon_0_avalon_slave_0_agent.m0/arm_irq_avalon_0_avalon_slave_0_translator.avalon_universal_slave_0} {defaultConnection} {false};add_connection {arm_irq_avalon_0_avalon_slave_0_agent.rf_source} {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo.in} {avalon_streaming};add_connection {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo.out} {arm_irq_avalon_0_avalon_slave_0_agent.rf_sink} {avalon_streaming};add_connection {arm_irq_avalon_0_avalon_slave_0_agent.rdata_fifo_src} {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo.in} {avalon_streaming};add_connection {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo.out} {arm_irq_avalon_0_avalon_slave_0_agent.rdata_fifo_sink} {avalon_streaming};add_connection {arm_regs_avalon_0_avalon_slave_0_agent.m0} {arm_regs_avalon_0_avalon_slave_0_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent.m0/arm_regs_avalon_0_avalon_slave_0_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent.m0/arm_regs_avalon_0_avalon_slave_0_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {arm_regs_avalon_0_avalon_slave_0_agent.m0/arm_regs_avalon_0_avalon_slave_0_translator.avalon_universal_slave_0} {defaultConnection} {false};add_connection {arm_regs_avalon_0_avalon_slave_0_agent.rf_source} {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo.in} {avalon_streaming};add_connection {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo.out} {arm_regs_avalon_0_avalon_slave_0_agent.rf_sink} {avalon_streaming};add_connection {arm_regs_avalon_0_avalon_slave_0_agent.rdata_fifo_src} {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo.in} {avalon_streaming};add_connection {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo.out} {arm_regs_avalon_0_avalon_slave_0_agent.rdata_fifo_sink} {avalon_streaming};add_connection {hybridcpu0_avalon_slave_0_agent.m0} {hybridcpu0_avalon_slave_0_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {hybridcpu0_avalon_slave_0_agent.m0/hybridcpu0_avalon_slave_0_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {hybridcpu0_avalon_slave_0_agent.m0/hybridcpu0_avalon_slave_0_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {hybridcpu0_avalon_slave_0_agent.m0/hybridcpu0_avalon_slave_0_translator.avalon_universal_slave_0} {defaultConnection} {false};add_connection {hybridcpu0_avalon_slave_0_agent.rf_source} {hybridcpu0_avalon_slave_0_agent_rsp_fifo.in} {avalon_streaming};add_connection {hybridcpu0_avalon_slave_0_agent_rsp_fifo.out} {hybridcpu0_avalon_slave_0_agent.rf_sink} {avalon_streaming};add_connection {hybridcpu0_avalon_slave_0_agent.rdata_fifo_src} {hybridcpu0_avalon_slave_0_agent_rdata_fifo.in} {avalon_streaming};add_connection {hybridcpu0_avalon_slave_0_agent_rdata_fifo.out} {hybridcpu0_avalon_slave_0_agent.rdata_fifo_sink} {avalon_streaming};add_connection {hps_0_h2f_axi_master_agent.write_cp} {router.sink} {avalon_streaming};preview_set_connection_tag {hps_0_h2f_axi_master_agent.write_cp/router.sink} {qsys_mm.command};add_connection {hps_0_h2f_axi_master_agent.read_cp} {router_001.sink} {avalon_streaming};preview_set_connection_tag {hps_0_h2f_axi_master_agent.read_cp/router_001.sink} {qsys_mm.command};add_connection {arm_irq_avalon_0_avalon_slave_0_agent.rp} {router_002.sink} {avalon_streaming};preview_set_connection_tag {arm_irq_avalon_0_avalon_slave_0_agent.rp/router_002.sink} {qsys_mm.response};add_connection {arm_regs_avalon_0_avalon_slave_0_agent.rp} {router_003.sink} {avalon_streaming};preview_set_connection_tag {arm_regs_avalon_0_avalon_slave_0_agent.rp/router_003.sink} {qsys_mm.response};add_connection {router_003.src} {rsp_demux_001.sink} {avalon_streaming};preview_set_connection_tag {router_003.src/rsp_demux_001.sink} {qsys_mm.response};add_connection {hybridcpu0_avalon_slave_0_agent.rp} {router_004.sink} {avalon_streaming};preview_set_connection_tag {hybridcpu0_avalon_slave_0_agent.rp/router_004.sink} {qsys_mm.response};add_connection {router_004.src} {rsp_demux_002.sink} {avalon_streaming};preview_set_connection_tag {router_004.src/rsp_demux_002.sink} {qsys_mm.response};add_connection {router.src} {hps_0_h2f_axi_master_wr_limiter.cmd_sink} {avalon_streaming};preview_set_connection_tag {router.src/hps_0_h2f_axi_master_wr_limiter.cmd_sink} {qsys_mm.command};add_connection {hps_0_h2f_axi_master_wr_limiter.cmd_src} {cmd_demux.sink} {avalon_streaming};preview_set_connection_tag {hps_0_h2f_axi_master_wr_limiter.cmd_src/cmd_demux.sink} {qsys_mm.command};add_connection {rsp_mux.src} {hps_0_h2f_axi_master_wr_limiter.rsp_sink} {avalon_streaming};preview_set_connection_tag {rsp_mux.src/hps_0_h2f_axi_master_wr_limiter.rsp_sink} {qsys_mm.response};add_connection {hps_0_h2f_axi_master_wr_limiter.rsp_src} {hps_0_h2f_axi_master_agent.write_rp} {avalon_streaming};preview_set_connection_tag {hps_0_h2f_axi_master_wr_limiter.rsp_src/hps_0_h2f_axi_master_agent.write_rp} {qsys_mm.response};add_connection {router_001.src} {hps_0_h2f_axi_master_rd_limiter.cmd_sink} {avalon_streaming};preview_set_connection_tag {router_001.src/hps_0_h2f_axi_master_rd_limiter.cmd_sink} {qsys_mm.command};add_connection {hps_0_h2f_axi_master_rd_limiter.cmd_src} {cmd_demux_001.sink} {avalon_streaming};preview_set_connection_tag {hps_0_h2f_axi_master_rd_limiter.cmd_src/cmd_demux_001.sink} {qsys_mm.command};add_connection {rsp_mux_001.src} {hps_0_h2f_axi_master_rd_limiter.rsp_sink} {avalon_streaming};preview_set_connection_tag {rsp_mux_001.src/hps_0_h2f_axi_master_rd_limiter.rsp_sink} {qsys_mm.response};add_connection {hps_0_h2f_axi_master_rd_limiter.rsp_src} {hps_0_h2f_axi_master_agent.read_rp} {avalon_streaming};preview_set_connection_tag {hps_0_h2f_axi_master_rd_limiter.rsp_src/hps_0_h2f_axi_master_agent.read_rp} {qsys_mm.response};add_connection {arm_irq_avalon_0_avalon_slave_0_burst_adapter.source0} {arm_irq_avalon_0_avalon_slave_0_agent.cp} {avalon_streaming};preview_set_connection_tag {arm_irq_avalon_0_avalon_slave_0_burst_adapter.source0/arm_irq_avalon_0_avalon_slave_0_agent.cp} {qsys_mm.command};add_connection {cmd_mux_001.src} {arm_regs_avalon_0_avalon_slave_0_burst_adapter.sink0} {avalon_streaming};preview_set_connection_tag {cmd_mux_001.src/arm_regs_avalon_0_avalon_slave_0_burst_adapter.sink0} {qsys_mm.command};add_connection {arm_regs_avalon_0_avalon_slave_0_burst_adapter.source0} {arm_regs_avalon_0_avalon_slave_0_agent.cp} {avalon_streaming};preview_set_connection_tag {arm_regs_avalon_0_avalon_slave_0_burst_adapter.source0/arm_regs_avalon_0_avalon_slave_0_agent.cp} {qsys_mm.command};add_connection {cmd_mux_002.src} {hybridcpu0_avalon_slave_0_burst_adapter.sink0} {avalon_streaming};preview_set_connection_tag {cmd_mux_002.src/hybridcpu0_avalon_slave_0_burst_adapter.sink0} {qsys_mm.command};add_connection {hybridcpu0_avalon_slave_0_burst_adapter.source0} {hybridcpu0_avalon_slave_0_agent.cp} {avalon_streaming};preview_set_connection_tag {hybridcpu0_avalon_slave_0_burst_adapter.source0/hybridcpu0_avalon_slave_0_agent.cp} {qsys_mm.command};add_connection {cmd_demux.src0} {cmd_mux.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src0/cmd_mux.sink0} {qsys_mm.command};add_connection {cmd_demux.src1} {cmd_mux_001.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src1/cmd_mux_001.sink0} {qsys_mm.command};add_connection {cmd_demux.src2} {cmd_mux_002.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src2/cmd_mux_002.sink0} {qsys_mm.command};add_connection {cmd_demux_001.src0} {cmd_mux.sink1} {avalon_streaming};preview_set_connection_tag {cmd_demux_001.src0/cmd_mux.sink1} {qsys_mm.command};add_connection {cmd_demux_001.src1} {cmd_mux_001.sink1} {avalon_streaming};preview_set_connection_tag {cmd_demux_001.src1/cmd_mux_001.sink1} {qsys_mm.command};add_connection {cmd_demux_001.src2} {cmd_mux_002.sink1} {avalon_streaming};preview_set_connection_tag {cmd_demux_001.src2/cmd_mux_002.sink1} {qsys_mm.command};add_connection {rsp_demux.src0} {rsp_mux.sink0} {avalon_streaming};preview_set_connection_tag {rsp_demux.src0/rsp_mux.sink0} {qsys_mm.response};add_connection {rsp_demux.src1} {rsp_mux_001.sink0} {avalon_streaming};preview_set_connection_tag {rsp_demux.src1/rsp_mux_001.sink0} {qsys_mm.response};add_connection {rsp_demux_001.src0} {rsp_mux.sink1} {avalon_streaming};preview_set_connection_tag {rsp_demux_001.src0/rsp_mux.sink1} {qsys_mm.response};add_connection {rsp_demux_001.src1} {rsp_mux_001.sink1} {avalon_streaming};preview_set_connection_tag {rsp_demux_001.src1/rsp_mux_001.sink1} {qsys_mm.response};add_connection {rsp_demux_002.src0} {rsp_mux.sink2} {avalon_streaming};preview_set_connection_tag {rsp_demux_002.src0/rsp_mux.sink2} {qsys_mm.response};add_connection {rsp_demux_002.src1} {rsp_mux_001.sink2} {avalon_streaming};preview_set_connection_tag {rsp_demux_002.src1/rsp_mux_001.sink2} {qsys_mm.response};add_connection {router_002.src} {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter.sink} {avalon_streaming};preview_set_connection_tag {router_002.src/arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter.sink} {qsys_mm.response};add_connection {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter.src} {rsp_demux.sink} {avalon_streaming};preview_set_connection_tag {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter.src/rsp_demux.sink} {qsys_mm.response};add_connection {cmd_mux.src} {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter.sink} {avalon_streaming};preview_set_connection_tag {cmd_mux.src/arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter.sink} {qsys_mm.command};add_connection {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter.src} {arm_irq_avalon_0_avalon_slave_0_burst_adapter.sink0} {avalon_streaming};preview_set_connection_tag {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter.src/arm_irq_avalon_0_avalon_slave_0_burst_adapter.sink0} {qsys_mm.command};add_connection {hps_0_h2f_axi_master_wr_limiter.cmd_valid} {cmd_demux.sink_valid} {avalon_streaming};add_connection {hps_0_h2f_axi_master_rd_limiter.cmd_valid} {cmd_demux_001.sink_valid} {avalon_streaming};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {arm_irq_avalon_0_avalon_slave_0_translator.reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {arm_regs_avalon_0_avalon_slave_0_translator.reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {hybridcpu0_avalon_slave_0_translator.reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {arm_irq_avalon_0_avalon_slave_0_agent.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {arm_regs_avalon_0_avalon_slave_0_agent.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {hybridcpu0_avalon_slave_0_agent.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {hybridcpu0_avalon_slave_0_agent_rsp_fifo.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {hybridcpu0_avalon_slave_0_agent_rdata_fifo.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {router_002.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {router_003.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {router_004.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {arm_irq_avalon_0_avalon_slave_0_burst_adapter.cr0_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {arm_regs_avalon_0_avalon_slave_0_burst_adapter.cr0_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {hybridcpu0_avalon_slave_0_burst_adapter.cr0_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {cmd_mux.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {cmd_mux_001.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {cmd_mux_002.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {rsp_demux.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {rsp_demux_001.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {rsp_demux_002.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter.clk_reset} {reset};add_connection {arm_irq_avalon_0_reset_reset_bridge.out_reset} {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {hps_0_h2f_axi_master_agent.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {router.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {router_001.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {hps_0_h2f_axi_master_wr_limiter.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {hps_0_h2f_axi_master_rd_limiter.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {cmd_demux.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {cmd_demux_001.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {rsp_mux.clk_reset} {reset};add_connection {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.out_reset} {rsp_mux_001.clk_reset} {reset};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_irq_avalon_0_avalon_slave_0_translator.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_regs_avalon_0_avalon_slave_0_translator.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hybridcpu0_avalon_slave_0_translator.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hps_0_h2f_axi_master_agent.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_irq_avalon_0_avalon_slave_0_agent.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_regs_avalon_0_avalon_slave_0_agent.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hybridcpu0_avalon_slave_0_agent.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hybridcpu0_avalon_slave_0_agent_rsp_fifo.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hybridcpu0_avalon_slave_0_agent_rdata_fifo.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {router.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {router_001.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {router_002.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {router_003.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {router_004.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hps_0_h2f_axi_master_wr_limiter.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hps_0_h2f_axi_master_rd_limiter.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_irq_avalon_0_avalon_slave_0_burst_adapter.cr0} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_regs_avalon_0_avalon_slave_0_burst_adapter.cr0} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hybridcpu0_avalon_slave_0_burst_adapter.cr0} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {cmd_demux.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {rsp_mux.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {cmd_demux_001.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {rsp_mux_001.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {cmd_mux.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {rsp_demux.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {cmd_mux_001.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {rsp_demux_001.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {cmd_mux_002.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {rsp_demux_002.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {arm_irq_avalon_0_reset_reset_bridge.clk} {clock};add_connection {clk_0_clk_clock_bridge.out_clk} {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.clk} {clock};add_interface {hps_0_h2f_axi_master} {axi} {slave};set_interface_property {hps_0_h2f_axi_master} {EXPORT_OF} {hps_0_h2f_axi_master_agent.altera_axi_slave};add_interface {clk_0_clk} {clock} {slave};set_interface_property {clk_0_clk} {EXPORT_OF} {clk_0_clk_clock_bridge.in_clk};add_interface {arm_irq_avalon_0_reset_reset_bridge_in_reset} {reset} {slave};set_interface_property {arm_irq_avalon_0_reset_reset_bridge_in_reset} {EXPORT_OF} {arm_irq_avalon_0_reset_reset_bridge.in_reset};add_interface {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge_in_reset} {reset} {slave};set_interface_property {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge_in_reset} {EXPORT_OF} {hps_0_h2f_axi_master_agent_clk_reset_reset_bridge.in_reset};add_interface {arm_irq_avalon_0_avalon_slave_0} {avalon} {master};set_interface_property {arm_irq_avalon_0_avalon_slave_0} {EXPORT_OF} {arm_irq_avalon_0_avalon_slave_0_translator.avalon_anti_slave_0};add_interface {arm_regs_avalon_0_avalon_slave_0} {avalon} {master};set_interface_property {arm_regs_avalon_0_avalon_slave_0} {EXPORT_OF} {arm_regs_avalon_0_avalon_slave_0_translator.avalon_anti_slave_0};add_interface {hybridcpu0_avalon_slave_0} {avalon} {master};set_interface_property {hybridcpu0_avalon_slave_0} {EXPORT_OF} {hybridcpu0_avalon_slave_0_translator.avalon_anti_slave_0};set_module_assignment {interconnect_id.arm_irq_avalon_0.avalon_slave_0} {0};set_module_assignment {interconnect_id.arm_regs_avalon_0.avalon_slave_0} {1};set_module_assignment {interconnect_id.hps_0.h2f_axi_master} {0};set_module_assignment {interconnect_id.hybridcpu0.avalon_slave_0} {2};]]></value>
    <derived>false</derived>
    <enabled>true</enabled>
    <visible>true</visible>
@@ -41254,113 +41801,405 @@ parameters are a RESULT of the module parameters. -->
     <visible>true</visible>
     <valid>true</valid>
    </parameter>
-   <type>clock</type>
-   <isStart>false</isStart>
+   <type>clock</type>
+   <isStart>false</isStart>
+   <port>
+    <name>clk_0_clk_clk</name>
+    <direction>Input</direction>
+    <width>1</width>
+    <role>clk</role>
+   </port>
+  </interface>
+  <interface
+     name="arm_irq_avalon_0_reset_reset_bridge_in_reset"
+     kind="reset_sink"
+     version="20.1">
+   <!-- The connection points exposed by a module instance for the
+particular module parameters. Connection points and their
+parameters are a RESULT of the module parameters. -->
+   <parameter name="associatedClock">
+    <type>java.lang.String</type>
+    <value>clk_0_clk</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="synchronousEdges">
+    <type>com.altera.sopcmodel.reset.Reset$Edges</type>
+    <value>DEASSERT</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="deviceFamily">
+    <type>java.lang.String</type>
+    <value>UNKNOWN</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="generateLegacySim">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <type>reset</type>
+   <isStart>false</isStart>
+   <port>
+    <name>arm_irq_avalon_0_reset_reset_bridge_in_reset_reset</name>
+    <direction>Input</direction>
+    <width>1</width>
+    <role>reset</role>
+   </port>
+  </interface>
+  <interface
+     name="hps_0_h2f_axi_master_agent_clk_reset_reset_bridge_in_reset"
+     kind="reset_sink"
+     version="20.1">
+   <!-- The connection points exposed by a module instance for the
+particular module parameters. Connection points and their
+parameters are a RESULT of the module parameters. -->
+   <parameter name="associatedClock">
+    <type>java.lang.String</type>
+    <value>clk_0_clk</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="synchronousEdges">
+    <type>com.altera.sopcmodel.reset.Reset$Edges</type>
+    <value>DEASSERT</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="deviceFamily">
+    <type>java.lang.String</type>
+    <value>UNKNOWN</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="generateLegacySim">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <type>reset</type>
+   <isStart>false</isStart>
+   <port>
+    <name>hps_0_h2f_axi_master_agent_clk_reset_reset_bridge_in_reset_reset</name>
+    <direction>Input</direction>
+    <width>1</width>
+    <role>reset</role>
+   </port>
+  </interface>
+  <interface
+     name="arm_irq_avalon_0_avalon_slave_0"
+     kind="avalon_master"
+     version="20.1">
+   <!-- The connection points exposed by a module instance for the
+particular module parameters. Connection points and their
+parameters are a RESULT of the module parameters. -->
+   <parameter name="adaptsTo">
+    <type>com.altera.entityinterfaces.IConnectionPoint</type>
+    <value></value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="addressGroup">
+    <type>int</type>
+    <value>0</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="addressUnits">
+    <type>com.altera.sopcmodel.avalon.EAddrBurstUnits</type>
+    <value>WORDS</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="alwaysBurstMaxBurst">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="associatedClock">
+    <type>java.lang.String</type>
+    <value>clk_0_clk</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="associatedReset">
+    <type>java.lang.String</type>
+    <value>arm_irq_avalon_0_reset_reset_bridge_in_reset</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="bitsPerSymbol">
+    <type>int</type>
+    <value>8</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="burstOnBurstBoundariesOnly">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="burstcountUnits">
+    <type>com.altera.sopcmodel.avalon.EAddrBurstUnits</type>
+    <value>WORDS</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="constantBurstBehavior">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="dBSBigEndian">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="doStreamReads">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="doStreamWrites">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="holdTime">
+    <type>int</type>
+    <value>0</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="interleaveBursts">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="isAsynchronous">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="isBigEndian">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="isReadable">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="isWriteable">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="linewrapBursts">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="maxAddressWidth">
+    <type>int</type>
+    <value>32</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="maximumPendingReadTransactions">
+    <type>int</type>
+    <value>0</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="maximumPendingWriteTransactions">
+    <type>int</type>
+    <value>0</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="readLatency">
+    <type>int</type>
+    <value>0</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="readWaitTime">
+    <type>int</type>
+    <value>1</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="registerIncomingSignals">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="registerOutgoingSignals">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="setupTime">
+    <type>int</type>
+    <value>0</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="timingUnits">
+    <type>com.altera.sopcmodel.avalon.TimingUnits</type>
+    <value>Cycles</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="writeWaitTime">
+    <type>int</type>
+    <value>0</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>false</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="deviceFamily">
+    <type>java.lang.String</type>
+    <value>UNKNOWN</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <parameter name="generateLegacySim">
+    <type>boolean</type>
+    <value>false</value>
+    <derived>false</derived>
+    <enabled>true</enabled>
+    <visible>true</visible>
+    <valid>true</valid>
+   </parameter>
+   <type>avalon</type>
+   <isStart>true</isStart>
    <port>
-    <name>clk_0_clk_clk</name>
-    <direction>Input</direction>
+    <name>arm_irq_avalon_0_avalon_slave_0_read</name>
+    <direction>Output</direction>
     <width>1</width>
-    <role>clk</role>
+    <role>read</role>
    </port>
-  </interface>
-  <interface
-     name="hps_0_h2f_axi_master_agent_clk_reset_reset_bridge_in_reset"
-     kind="reset_sink"
-     version="20.1">
-   <!-- The connection points exposed by a module instance for the
-particular module parameters. Connection points and their
-parameters are a RESULT of the module parameters. -->
-   <parameter name="associatedClock">
-    <type>java.lang.String</type>
-    <value>clk_0_clk</value>
-    <derived>false</derived>
-    <enabled>true</enabled>
-    <visible>true</visible>
-    <valid>true</valid>
-   </parameter>
-   <parameter name="synchronousEdges">
-    <type>com.altera.sopcmodel.reset.Reset$Edges</type>
-    <value>DEASSERT</value>
-    <derived>false</derived>
-    <enabled>true</enabled>
-    <visible>true</visible>
-    <valid>true</valid>
-   </parameter>
-   <parameter name="deviceFamily">
-    <type>java.lang.String</type>
-    <value>UNKNOWN</value>
-    <derived>false</derived>
-    <enabled>true</enabled>
-    <visible>true</visible>
-    <valid>true</valid>
-   </parameter>
-   <parameter name="generateLegacySim">
-    <type>boolean</type>
-    <value>false</value>
-    <derived>false</derived>
-    <enabled>true</enabled>
-    <visible>true</visible>
-    <valid>true</valid>
-   </parameter>
-   <type>reset</type>
-   <isStart>false</isStart>
    <port>
-    <name>hps_0_h2f_axi_master_agent_clk_reset_reset_bridge_in_reset_reset</name>
+    <name>arm_irq_avalon_0_avalon_slave_0_readdata</name>
     <direction>Input</direction>
-    <width>1</width>
-    <role>reset</role>
+    <width>8</width>
+    <role>readdata</role>
    </port>
-  </interface>
-  <interface
-     name="hybridcpu0_reset_reset_bridge_in_reset"
-     kind="reset_sink"
-     version="20.1">
-   <!-- The connection points exposed by a module instance for the
-particular module parameters. Connection points and their
-parameters are a RESULT of the module parameters. -->
-   <parameter name="associatedClock">
-    <type>java.lang.String</type>
-    <value>clk_0_clk</value>
-    <derived>false</derived>
-    <enabled>true</enabled>
-    <visible>true</visible>
-    <valid>true</valid>
-   </parameter>
-   <parameter name="synchronousEdges">
-    <type>com.altera.sopcmodel.reset.Reset$Edges</type>
-    <value>DEASSERT</value>
-    <derived>false</derived>
-    <enabled>true</enabled>
-    <visible>true</visible>
-    <valid>true</valid>
-   </parameter>
-   <parameter name="deviceFamily">
-    <type>java.lang.String</type>
-    <value>UNKNOWN</value>
-    <derived>false</derived>
-    <enabled>true</enabled>
-    <visible>true</visible>
-    <valid>true</valid>
-   </parameter>
-   <parameter name="generateLegacySim">
-    <type>boolean</type>
-    <value>false</value>
-    <derived>false</derived>
-    <enabled>true</enabled>
-    <visible>true</visible>
-    <valid>true</valid>
-   </parameter>
-   <type>reset</type>
-   <isStart>false</isStart>
    <port>
-    <name>hybridcpu0_reset_reset_bridge_in_reset_reset</name>
+    <name>arm_irq_avalon_0_avalon_slave_0_waitrequest</name>
     <direction>Input</direction>
     <width>1</width>
-    <role>reset</role>
+    <role>waitrequest</role>
    </port>
+   <memoryBlock>
+    <isBridge>false</isBridge>
+    <moduleName>arm_irq_avalon_0</moduleName>
+    <slaveName>avalon_slave_0</slaveName>
+    <name>arm_irq_avalon_0.avalon_slave_0</name>
+    <baseAddress>0</baseAddress>
+    <span>1</span>
+   </memoryBlock>
   </interface>
   <interface
-     name="arm_irq_avalon_0_avalon_slave_0"
+     name="arm_regs_avalon_0_avalon_slave_0"
      kind="avalon_master"
      version="20.1">
    <!-- The connection points exposed by a module instance for the
@@ -41408,7 +42247,7 @@ parameters are a RESULT of the module parameters. -->
    </parameter>
    <parameter name="associatedReset">
     <type>java.lang.String</type>
-    <value>hybridcpu0_reset_reset_bridge_in_reset</value>
+    <value>arm_irq_avalon_0_reset_reset_bridge_in_reset</value>
     <derived>false</derived>
     <enabled>true</enabled>
     <visible>true</visible>
@@ -41625,30 +42464,30 @@ parameters are a RESULT of the module parameters. -->
    <type>avalon</type>
    <isStart>true</isStart>
    <port>
-    <name>arm_irq_avalon_0_avalon_slave_0_read</name>
+    <name>arm_regs_avalon_0_avalon_slave_0_address</name>
     <direction>Output</direction>
     <width>1</width>
-    <role>read</role>
+    <role>address</role>
    </port>
    <port>
-    <name>arm_irq_avalon_0_avalon_slave_0_readdata</name>
-    <direction>Input</direction>
-    <width>8</width>
-    <role>readdata</role>
+    <name>arm_regs_avalon_0_avalon_slave_0_write</name>
+    <direction>Output</direction>
+    <width>1</width>
+    <role>write</role>
    </port>
    <port>
-    <name>arm_irq_avalon_0_avalon_slave_0_waitrequest</name>
-    <direction>Input</direction>
-    <width>1</width>
-    <role>waitrequest</role>
+    <name>arm_regs_avalon_0_avalon_slave_0_writedata</name>
+    <direction>Output</direction>
+    <width>32</width>
+    <role>writedata</role>
    </port>
    <memoryBlock>
     <isBridge>false</isBridge>
-    <moduleName>arm_irq_avalon_0</moduleName>
+    <moduleName>arm_regs_avalon_0</moduleName>
     <slaveName>avalon_slave_0</slaveName>
-    <name>arm_irq_avalon_0.avalon_slave_0</name>
+    <name>arm_regs_avalon_0.avalon_slave_0</name>
     <baseAddress>0</baseAddress>
-    <span>1</span>
+    <span>8</span>
    </memoryBlock>
   </interface>
   <interface name="hybridcpu0_avalon_slave_0" kind="avalon_master" version="20.1">
@@ -41697,7 +42536,7 @@ parameters are a RESULT of the module parameters. -->
    </parameter>
    <parameter name="associatedReset">
     <type>java.lang.String</type>
-    <value>hybridcpu0_reset_reset_bridge_in_reset</value>
+    <value>arm_irq_avalon_0_reset_reset_bridge_in_reset</value>
     <derived>false</derived>
     <enabled>true</enabled>
     <visible>true</visible>
@@ -41825,7 +42664,7 @@ parameters are a RESULT of the module parameters. -->
    </parameter>
    <parameter name="maximumPendingReadTransactions">
     <type>int</type>
-    <value>0</value>
+    <value>8</value>
     <derived>false</derived>
     <enabled>true</enabled>
     <visible>false</visible>
@@ -41916,7 +42755,7 @@ parameters are a RESULT of the module parameters. -->
    <port>
     <name>hybridcpu0_avalon_slave_0_address</name>
     <direction>Output</direction>
-    <width>23</width>
+    <width>22</width>
     <role>address</role>
    </port>
    <port>
@@ -41934,32 +42773,32 @@ parameters are a RESULT of the module parameters. -->
    <port>
     <name>hybridcpu0_avalon_slave_0_readdata</name>
     <direction>Input</direction>
-    <width>16</width>
+    <width>32</width>
     <role>readdata</role>
    </port>
    <port>
     <name>hybridcpu0_avalon_slave_0_writedata</name>
     <direction>Output</direction>
-    <width>16</width>
+    <width>32</width>
     <role>writedata</role>
    </port>
    <port>
     <name>hybridcpu0_avalon_slave_0_byteenable</name>
     <direction>Output</direction>
-    <width>2</width>
+    <width>4</width>
     <role>byteenable</role>
    </port>
    <port>
-    <name>hybridcpu0_avalon_slave_0_waitrequest</name>
+    <name>hybridcpu0_avalon_slave_0_readdatavalid</name>
     <direction>Input</direction>
     <width>1</width>
-    <role>waitrequest</role>
+    <role>readdatavalid</role>
    </port>
    <port>
-    <name>hybridcpu0_avalon_slave_0_chipselect</name>
-    <direction>Output</direction>
+    <name>hybridcpu0_avalon_slave_0_waitrequest</name>
+    <direction>Input</direction>
     <width>1</width>
-    <role>chipselect</role>
+    <role>waitrequest</role>
    </port>
    <memoryBlock>
     <isBridge>false</isBridge>
@@ -42722,11 +43561,11 @@ parameters are a RESULT of the module parameters. -->
   </interface>
  </module>
  <connection
-   name="clk_0.clk/hybridcpu0.clock"
+   name="clk_0.clk/arm_irq_avalon_0.clock"
    kind="clock"
    version="20.1"
    start="clk_0.clk"
-   end="hybridcpu0.clock">
+   end="arm_irq_avalon_0.clock">
   <parameter name="deviceFamily">
    <type>java.lang.String</type>
    <value>UNKNOWN</value>
@@ -42745,15 +43584,15 @@ parameters are a RESULT of the module parameters. -->
   </parameter>
   <startModule>clk_0</startModule>
   <startConnectionPoint>clk</startConnectionPoint>
-  <endModule>hybridcpu0</endModule>
+  <endModule>arm_irq_avalon_0</endModule>
   <endConnectionPoint>clock</endConnectionPoint>
  </connection>
  <connection
-   name="clk_0.clk/arm_irq_avalon_0.clock"
+   name="clk_0.clk/arm_regs_avalon_0.clock"
    kind="clock"
    version="20.1"
    start="clk_0.clk"
-   end="arm_irq_avalon_0.clock">
+   end="arm_regs_avalon_0.clock">
   <parameter name="deviceFamily">
    <type>java.lang.String</type>
    <value>UNKNOWN</value>
@@ -42772,7 +43611,34 @@ parameters are a RESULT of the module parameters. -->
   </parameter>
   <startModule>clk_0</startModule>
   <startConnectionPoint>clk</startConnectionPoint>
-  <endModule>arm_irq_avalon_0</endModule>
+  <endModule>arm_regs_avalon_0</endModule>
+  <endConnectionPoint>clock</endConnectionPoint>
+ </connection>
+ <connection
+   name="clk_0.clk/hybridcpu0.clock"
+   kind="clock"
+   version="20.1"
+   start="clk_0.clk"
+   end="hybridcpu0.clock">
+  <parameter name="deviceFamily">
+   <type>java.lang.String</type>
+   <value>UNKNOWN</value>
+   <derived>false</derived>
+   <enabled>true</enabled>
+   <visible>true</visible>
+   <valid>true</valid>
+  </parameter>
+  <parameter name="generateLegacySim">
+   <type>boolean</type>
+   <value>false</value>
+   <derived>false</derived>
+   <enabled>true</enabled>
+   <visible>true</visible>
+   <valid>true</valid>
+  </parameter>
+  <startModule>clk_0</startModule>
+  <startConnectionPoint>clk</startConnectionPoint>
+  <endModule>hybridcpu0</endModule>
   <endConnectionPoint>clock</endConnectionPoint>
  </connection>
  <connection
@@ -42908,11 +43774,11 @@ parameters are a RESULT of the module parameters. -->
   <endConnectionPoint>clk_0_clk</endConnectionPoint>
  </connection>
  <connection
-   name="mm_interconnect_0.hybridcpu0_avalon_slave_0/hybridcpu0.avalon_slave_0"
+   name="mm_interconnect_0.arm_irq_avalon_0_avalon_slave_0/arm_irq_avalon_0.avalon_slave_0"
    kind="avalon"
    version="20.1"
-   start="mm_interconnect_0.hybridcpu0_avalon_slave_0"
-   end="hybridcpu0.avalon_slave_0">
+   start="mm_interconnect_0.arm_irq_avalon_0_avalon_slave_0"
+   end="arm_irq_avalon_0.avalon_slave_0">
   <parameter name="arbitrationPriority">
    <type>int</type>
    <value>1</value>
@@ -42954,16 +43820,16 @@ parameters are a RESULT of the module parameters. -->
    <valid>true</valid>
   </parameter>
   <startModule>mm_interconnect_0</startModule>
-  <startConnectionPoint>hybridcpu0_avalon_slave_0</startConnectionPoint>
-  <endModule>hybridcpu0</endModule>
+  <startConnectionPoint>arm_irq_avalon_0_avalon_slave_0</startConnectionPoint>
+  <endModule>arm_irq_avalon_0</endModule>
   <endConnectionPoint>avalon_slave_0</endConnectionPoint>
  </connection>
  <connection
-   name="mm_interconnect_0.arm_irq_avalon_0_avalon_slave_0/arm_irq_avalon_0.avalon_slave_0"
+   name="mm_interconnect_0.arm_regs_avalon_0_avalon_slave_0/arm_regs_avalon_0.avalon_slave_0"
    kind="avalon"
    version="20.1"
-   start="mm_interconnect_0.arm_irq_avalon_0_avalon_slave_0"
-   end="arm_irq_avalon_0.avalon_slave_0">
+   start="mm_interconnect_0.arm_regs_avalon_0_avalon_slave_0"
+   end="arm_regs_avalon_0.avalon_slave_0">
   <parameter name="arbitrationPriority">
    <type>int</type>
    <value>1</value>
@@ -43005,8 +43871,59 @@ parameters are a RESULT of the module parameters. -->
    <valid>true</valid>
   </parameter>
   <startModule>mm_interconnect_0</startModule>
-  <startConnectionPoint>arm_irq_avalon_0_avalon_slave_0</startConnectionPoint>
-  <endModule>arm_irq_avalon_0</endModule>
+  <startConnectionPoint>arm_regs_avalon_0_avalon_slave_0</startConnectionPoint>
+  <endModule>arm_regs_avalon_0</endModule>
+  <endConnectionPoint>avalon_slave_0</endConnectionPoint>
+ </connection>
+ <connection
+   name="mm_interconnect_0.hybridcpu0_avalon_slave_0/hybridcpu0.avalon_slave_0"
+   kind="avalon"
+   version="20.1"
+   start="mm_interconnect_0.hybridcpu0_avalon_slave_0"
+   end="hybridcpu0.avalon_slave_0">
+  <parameter name="arbitrationPriority">
+   <type>int</type>
+   <value>1</value>
+   <derived>false</derived>
+   <enabled>true</enabled>
+   <visible>true</visible>
+   <valid>true</valid>
+  </parameter>
+  <parameter name="baseAddress">
+   <type>java.math.BigInteger</type>
+   <value>0x0000</value>
+   <derived>false</derived>
+   <enabled>true</enabled>
+   <visible>true</visible>
+   <valid>true</valid>
+  </parameter>
+  <parameter name="defaultConnection">
+   <type>boolean</type>
+   <value>false</value>
+   <derived>false</derived>
+   <enabled>true</enabled>
+   <visible>true</visible>
+   <valid>true</valid>
+  </parameter>
+  <parameter name="deviceFamily">
+   <type>java.lang.String</type>
+   <value>UNKNOWN</value>
+   <derived>false</derived>
+   <enabled>true</enabled>
+   <visible>true</visible>
+   <valid>true</valid>
+  </parameter>
+  <parameter name="generateLegacySim">
+   <type>boolean</type>
+   <value>false</value>
+   <derived>false</derived>
+   <enabled>true</enabled>
+   <visible>true</visible>
+   <valid>true</valid>
+  </parameter>
+  <startModule>mm_interconnect_0</startModule>
+  <startConnectionPoint>hybridcpu0_avalon_slave_0</startConnectionPoint>
+  <endModule>hybridcpu0</endModule>
   <endConnectionPoint>avalon_slave_0</endConnectionPoint>
  </connection>
  <connection
@@ -43036,6 +43953,33 @@ parameters are a RESULT of the module parameters. -->
   <endModule>arm_irq_avalon_0</endModule>
   <endConnectionPoint>reset</endConnectionPoint>
  </connection>
+ <connection
+   name="rst_controller.reset_out/arm_regs_avalon_0.reset"
+   kind="reset"
+   version="20.1"
+   start="rst_controller.reset_out"
+   end="arm_regs_avalon_0.reset">
+  <parameter name="deviceFamily">
+   <type>java.lang.String</type>
+   <value>UNKNOWN</value>
+   <derived>false</derived>
+   <enabled>true</enabled>
+   <visible>true</visible>
+   <valid>true</valid>
+  </parameter>
+  <parameter name="generateLegacySim">
+   <type>boolean</type>
+   <value>false</value>
+   <derived>false</derived>
+   <enabled>true</enabled>
+   <visible>true</visible>
+   <valid>true</valid>
+  </parameter>
+  <startModule>rst_controller</startModule>
+  <startConnectionPoint>reset_out</startConnectionPoint>
+  <endModule>arm_regs_avalon_0</endModule>
+  <endConnectionPoint>reset</endConnectionPoint>
+ </connection>
  <connection
    name="rst_controller.reset_out/hybridcpu0.reset"
    kind="reset"
@@ -43064,11 +44008,11 @@ parameters are a RESULT of the module parameters. -->
   <endConnectionPoint>reset</endConnectionPoint>
  </connection>
  <connection
-   name="rst_controller.reset_out/mm_interconnect_0.hybridcpu0_reset_reset_bridge_in_reset"
+   name="rst_controller.reset_out/mm_interconnect_0.arm_irq_avalon_0_reset_reset_bridge_in_reset"
    kind="reset"
    version="20.1"
    start="rst_controller.reset_out"
-   end="mm_interconnect_0.hybridcpu0_reset_reset_bridge_in_reset">
+   end="mm_interconnect_0.arm_irq_avalon_0_reset_reset_bridge_in_reset">
   <parameter name="deviceFamily">
    <type>java.lang.String</type>
    <value>UNKNOWN</value>
@@ -43088,7 +44032,7 @@ parameters are a RESULT of the module parameters. -->
   <startModule>rst_controller</startModule>
   <startConnectionPoint>reset_out</startConnectionPoint>
   <endModule>mm_interconnect_0</endModule>
-  <endConnectionPoint>hybridcpu0_reset_reset_bridge_in_reset</endConnectionPoint>
+  <endConnectionPoint>arm_irq_avalon_0_reset_reset_bridge_in_reset</endConnectionPoint>
  </connection>
  <connection
    name="clk_0.clk_reset/rst_controller.reset_in0"
@@ -43234,7 +44178,7 @@ parameters are a RESULT of the module parameters. -->
   <version>1.0</version>
  </plugin>
  <plugin>
-  <instanceCount>7</instanceCount>
+  <instanceCount>8</instanceCount>
   <name>clock_sink</name>
   <type>com.altera.entityinterfaces.IElementClass</type>
   <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
@@ -43242,7 +44186,7 @@ parameters are a RESULT of the module parameters. -->
   <version>20.1</version>
  </plugin>
  <plugin>
-  <instanceCount>6</instanceCount>
+  <instanceCount>7</instanceCount>
   <name>reset_sink</name>
   <type>com.altera.entityinterfaces.IElementClass</type>
   <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
@@ -43250,7 +44194,7 @@ parameters are a RESULT of the module parameters. -->
   <version>20.1</version>
  </plugin>
  <plugin>
-  <instanceCount>2</instanceCount>
+  <instanceCount>3</instanceCount>
   <name>avalon_slave</name>
   <type>com.altera.entityinterfaces.IElementClass</type>
   <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
@@ -43258,13 +44202,21 @@ parameters are a RESULT of the module parameters. -->
   <version>20.1</version>
  </plugin>
  <plugin>
-  <instanceCount>4</instanceCount>
+  <instanceCount>5</instanceCount>
   <name>conduit_end</name>
   <type>com.altera.entityinterfaces.IElementClass</type>
   <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
   <displayName>Conduit</displayName>
   <version>20.1</version>
  </plugin>
+ <plugin>
+  <instanceCount>1</instanceCount>
+  <name>arm_regs_avalon</name>
+  <type>com.altera.entityinterfaces.IElementClass</type>
+  <subtype>com.altera.entityinterfaces.IModule</subtype>
+  <displayName>arm_regs_avalon</displayName>
+  <version>1.0</version>
+ </plugin>
  <plugin>
   <instanceCount>1</instanceCount>
   <name>clock_source</name>
@@ -43370,7 +44322,7 @@ parameters are a RESULT of the module parameters. -->
   <version>20.1</version>
  </plugin>
  <plugin>
-  <instanceCount>2</instanceCount>
+  <instanceCount>3</instanceCount>
   <name>avalon_master</name>
   <type>com.altera.entityinterfaces.IElementClass</type>
   <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
@@ -43386,7 +44338,7 @@ parameters are a RESULT of the module parameters. -->
   <version>20.1</version>
  </plugin>
  <plugin>
-  <instanceCount>3</instanceCount>
+  <instanceCount>4</instanceCount>
   <name>clock</name>
   <type>com.altera.entityinterfaces.IElementClass</type>
   <subtype>com.altera.entityinterfaces.IConnection</subtype>
@@ -43402,7 +44354,7 @@ parameters are a RESULT of the module parameters. -->
   <version>20.1</version>
  </plugin>
  <plugin>
-  <instanceCount>3</instanceCount>
+  <instanceCount>4</instanceCount>
   <name>avalon</name>
   <type>com.altera.entityinterfaces.IElementClass</type>
   <subtype>com.altera.entityinterfaces.IConnection</subtype>
@@ -43418,7 +44370,7 @@ parameters are a RESULT of the module parameters. -->
   <version>20.1</version>
  </plugin>
  <plugin>
-  <instanceCount>6</instanceCount>
+  <instanceCount>7</instanceCount>
   <name>reset</name>
   <type>com.altera.entityinterfaces.IElementClass</type>
   <subtype>com.altera.entityinterfaces.IConnection</subtype>
@@ -43426,5 +44378,5 @@ parameters are a RESULT of the module parameters. -->
   <version>20.1</version>
  </plugin>
  <reportVersion>20.1 720</reportVersion>
- <uniqueIdentifier>0242355DED3F0000017E5D1E56C4</uniqueIdentifier>
+ <uniqueIdentifier>EEEEEEEEEEEE000001829B84BA17</uniqueIdentifier>
 </EnsembleReport>
diff --git a/sys/hps_fpga_bridge/synthesis/hps_fpga_bridge.qip b/sys/hps_fpga_bridge/synthesis/hps_fpga_bridge.qip
index cf53fe8..0d05d62 100644
--- a/sys/hps_fpga_bridge/synthesis/hps_fpga_bridge.qip
+++ b/sys/hps_fpga_bridge/synthesis/hps_fpga_bridge.qip
@@ -2,7 +2,7 @@ set_global_assignment -entity "hps_fpga_bridge" -library "hps_fpga_bridge" -name
 set_global_assignment -entity "hps_fpga_bridge" -library "hps_fpga_bridge" -name IP_TOOL_VERSION "20.1"
 set_global_assignment -entity "hps_fpga_bridge" -library "hps_fpga_bridge" -name IP_TOOL_ENV "Qsys"
 set_global_assignment -library "hps_fpga_bridge" -name SOPCINFO_FILE [file join $::quartus(qip_path) "../../hps_fpga_bridge.sopcinfo"]
-set_global_assignment -entity "hps_fpga_bridge" -library "hps_fpga_bridge" -name SLD_INFO "QSYS_NAME hps_fpga_bridge HAS_SOPCINFO 1 GENERATION_ID 1642239754"
+set_global_assignment -entity "hps_fpga_bridge" -library "hps_fpga_bridge" -name SLD_INFO "QSYS_NAME hps_fpga_bridge HAS_SOPCINFO 1 GENERATION_ID 1660466520"
 set_global_assignment -library "hps_fpga_bridge" -name MISC_FILE [file join $::quartus(qip_path) "../hps_fpga_bridge.cmp"]
 set_global_assignment -library "hps_fpga_bridge" -name SLD_FILE [file join $::quartus(qip_path) "hps_fpga_bridge.regmap"]
 set_global_assignment -library "hps_fpga_bridge" -name MISC_FILE [file join $::quartus(qip_path) "hps_fpga_bridge_hps_0_hps.svd"]
@@ -17,7 +17,7 @@ set_global_assignment -entity "hps_fpga_bridge" -library "hps_fpga_bridge" -name
 set_global_assignment -entity "hps_fpga_bridge" -library "hps_fpga_bridge" -name IP_COMPONENT_REPORT_HIERARCHY "On"
 set_global_assignment -entity "hps_fpga_bridge" -library "hps_fpga_bridge" -name IP_COMPONENT_INTERNAL "Off"
 set_global_assignment -entity "hps_fpga_bridge" -library "hps_fpga_bridge" -name IP_COMPONENT_VERSION "MS4w"
-set_global_assignment -entity "hps_fpga_bridge" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVVUT19HRU5FUkFUSU9OX0lE::MTY0MjIzOTc1NA==::QXV0byBHRU5FUkFUSU9OX0lE"
+set_global_assignment -entity "hps_fpga_bridge" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVVUT19HRU5FUkFUSU9OX0lE::MTY2MDQ2NjUyMA==::QXV0byBHRU5FUkFUSU9OX0lE"
 set_global_assignment -entity "hps_fpga_bridge" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVVUT19ERVZJQ0VfRkFNSUxZ::Q3ljbG9uZSBW::QXV0byBERVZJQ0VfRkFNSUxZ"
 set_global_assignment -entity "hps_fpga_bridge" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVVUT19ERVZJQ0U=::NUNTRUJBNlUyM0k3::QXV0byBERVZJQ0U="
 set_global_assignment -entity "hps_fpga_bridge" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVVUT19ERVZJQ0VfU1BFRURHUkFERQ==::Nw==::QXV0byBERVZJQ0VfU1BFRURHUkFERQ=="
@@ -72,9 +72,9 @@ set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapt
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_AUTHOR "QWx0ZXJhIENvcnBvcmF0aW9u"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_VERSION "MjAuMQ=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_DESCRIPTION "QWRhcHQgbWlzbWF0Y2hlZCBBdmFsb24tU1QgZW5kcG9pbnRz"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5CaXRzUGVyU3ltYm9s::MTA=::U3ltYm9sIFdpZHRo"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5CaXRzUGVyU3ltYm9s::MzQ=::U3ltYm9sIFdpZHRo"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5Vc2VQYWNrZXRz::MA==::VXNlIFBhY2tldA=="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5EYXRhV2lkdGg=::MTA=::U291cmNlIERhdGEgV2lkdGg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5EYXRhV2lkdGg=::MzQ=::U291cmNlIERhdGEgV2lkdGg="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5NYXhDaGFubmVs::MA==::U291cmNlIE1heCBDaGFubmVs"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5DaGFubmVsV2lkdGg=::MA==::U291cmNlIENoYW5uZWwgUG9ydCBXaWR0aA=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5FcnJvcldpZHRo::MA==::U291cmNlIEVycm9yIFBvcnQgV2lkdGg="
@@ -83,7 +83,7 @@ set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapt
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5Vc2VWYWxpZA==::MQ==::U291cmNlIFVzZXMgVmFsaWQgUG9ydA=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5Vc2VSZWFkeQ==::MQ==::U291cmNlIFVzZXMgUmVhZHkgUG9ydA=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5SZWFkeUxhdGVuY3k=::MA==::U291cmNlIFJlYWR5IExhdGVuY3k="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "b3V0RGF0YVdpZHRo::MTA=::U2luayBEYXRhIFdpZHRo"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "b3V0RGF0YVdpZHRo::MzQ=::U2luayBEYXRhIFdpZHRo"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "b3V0TWF4Q2hhbm5lbA==::MA==::U2luayBNYXggQ2hhbm5lbA=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "b3V0Q2hhbm5lbFdpZHRo::MA==::U2luayBDaGFubmVsIFBvcnQgV2lkdGg="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "b3V0RXJyb3JXaWR0aA==::MQ==::U2luayBFcnJvciBQb3J0IFdpZHRo"
@@ -102,7 +102,7 @@ set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapt
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001_error_adapter_0" -library "hps_fpga_bridge" -name IP_COMPONENT_VERSION "MjAuMQ=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001_error_adapter_0" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5DaGFubmVsV2lkdGg=::MA==::Q2hhbm5lbCBTaWduYWwgV2lkdGggKGJpdHMp"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001_error_adapter_0" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5NYXhDaGFubmVs::MA==::TWF4IENoYW5uZWw="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001_error_adapter_0" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5CaXRzUGVyU3ltYm9s::MTA=::RGF0YSBCaXRzIFBlciBTeW1ib2w="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001_error_adapter_0" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5CaXRzUGVyU3ltYm9s::MzQ=::RGF0YSBCaXRzIFBlciBTeW1ib2w="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001_error_adapter_0" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5Vc2VQYWNrZXRz::ZmFsc2U=::SW5jbHVkZSBQYWNrZXQgU3VwcG9ydA=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001_error_adapter_0" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5Vc2VFbXB0eQ==::ZmFsc2U=::aW5Vc2VFbXB0eQ=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001_error_adapter_0" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5TeW1ib2xzUGVyQmVhdA==::MQ==::RGF0YSBTeW1ib2xzIFBlciBCZWF0"
@@ -117,9 +117,9 @@ set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapt
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_AUTHOR "QWx0ZXJhIENvcnBvcmF0aW9u"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_VERSION "MjAuMQ=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_DESCRIPTION "QWRhcHQgbWlzbWF0Y2hlZCBBdmFsb24tU1QgZW5kcG9pbnRz"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5CaXRzUGVyU3ltYm9s::MTg=::U3ltYm9sIFdpZHRo"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5CaXRzUGVyU3ltYm9s::MTA=::U3ltYm9sIFdpZHRo"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5Vc2VQYWNrZXRz::MA==::VXNlIFBhY2tldA=="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5EYXRhV2lkdGg=::MTg=::U291cmNlIERhdGEgV2lkdGg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5EYXRhV2lkdGg=::MTA=::U291cmNlIERhdGEgV2lkdGg="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5NYXhDaGFubmVs::MA==::U291cmNlIE1heCBDaGFubmVs"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5DaGFubmVsV2lkdGg=::MA==::U291cmNlIENoYW5uZWwgUG9ydCBXaWR0aA=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5FcnJvcldpZHRo::MA==::U291cmNlIEVycm9yIFBvcnQgV2lkdGg="
@@ -128,7 +128,7 @@ set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapt
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5Vc2VWYWxpZA==::MQ==::U291cmNlIFVzZXMgVmFsaWQgUG9ydA=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5Vc2VSZWFkeQ==::MQ==::U291cmNlIFVzZXMgUmVhZHkgUG9ydA=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5SZWFkeUxhdGVuY3k=::MA==::U291cmNlIFJlYWR5IExhdGVuY3k="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "b3V0RGF0YVdpZHRo::MTg=::U2luayBEYXRhIFdpZHRo"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "b3V0RGF0YVdpZHRo::MTA=::U2luayBEYXRhIFdpZHRo"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "b3V0TWF4Q2hhbm5lbA==::MA==::U2luayBNYXggQ2hhbm5lbA=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "b3V0Q2hhbm5lbFdpZHRo::MA==::U2luayBDaGFubmVsIFBvcnQgV2lkdGg="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "b3V0RXJyb3JXaWR0aA==::MQ==::U2luayBFcnJvciBQb3J0IFdpZHRo"
@@ -147,7 +147,7 @@ set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapt
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_error_adapter_0" -library "hps_fpga_bridge" -name IP_COMPONENT_VERSION "MjAuMQ=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_error_adapter_0" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5DaGFubmVsV2lkdGg=::MA==::Q2hhbm5lbCBTaWduYWwgV2lkdGggKGJpdHMp"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_error_adapter_0" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5NYXhDaGFubmVs::MA==::TWF4IENoYW5uZWw="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_error_adapter_0" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5CaXRzUGVyU3ltYm9s::MTg=::RGF0YSBCaXRzIFBlciBTeW1ib2w="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_error_adapter_0" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5CaXRzUGVyU3ltYm9s::MTA=::RGF0YSBCaXRzIFBlciBTeW1ib2w="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_error_adapter_0" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5Vc2VQYWNrZXRz::ZmFsc2U=::SW5jbHVkZSBQYWNrZXQgU3VwcG9ydA=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_error_adapter_0" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5Vc2VFbXB0eQ==::ZmFsc2U=::aW5Vc2VFbXB0eQ=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_error_adapter_0" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW5TeW1ib2xzUGVyQmVhdA==::MQ==::RGF0YSBTeW1ib2xzIFBlciBCZWF0"
@@ -162,28 +162,28 @@ set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_b
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_AUTHOR "QWx0ZXJhIENvcnBvcmF0aW9u"
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_VERSION "MjAuMQ=="
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_DESCRIPTION "Q29udmVydHMgYmV0d2VlbiBBdmFsb24tTU0gbWFzdGVyIGFuZCBzbGF2ZXMgd2l0aCBkaWZmZXJlbnQgZGF0YSBhbmQgYnl0ZSBlbmFibGUgd2lkdGhzLg=="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0FERFJfSA==::NDc=::SW5wdXQgcGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0FERFJfTA==::MTg=::SW5wdXQgcGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0RBVEFfSA==::MTU=::SW5wdXQgcGFja2V0IGRhdGEgZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0FERFJfSA==::Mzg=::SW5wdXQgcGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0FERFJfTA==::OQ==::SW5wdXQgcGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBsb3c="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0RBVEFfSA==::Nw==::SW5wdXQgcGFja2V0IGRhdGEgZmllbGQgaW5kZXggLSBoaWdo"
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0RBVEFfTA==::MA==::SW5wdXQgcGFja2V0IGRhdGEgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JZVEVFTl9I::MTc=::SW5wdXQgcGFja2V0IGJ5dGVlbmFibGUgZmllbGQgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JZVEVFTl9M::MTY=::SW5wdXQgcGFja2V0IGJ5dGVlbmFibGUgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JZVEVfQ05UX0g=::NjA=::SW5wdXQgcGFja2V0IGJ5dGUgY291bnQgZmllbGQgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JZVEVfQ05UX0w=::NTQ=::SW5wdXQgcGFja2V0IGJ5dGUgY291bnQgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX1RSQU5TX0NPTVBSRVNTRURfUkVBRA==::NDg=::SW5wdXQgcGFja2V0IGNvbXByZXNzZWQgcmVhZCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleA=="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX1RSQU5TX1dSSVRF::NTA=::SW5wdXQgcGFja2V0IHdyaXRlIHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4"
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JVUlNUV1JBUF9I::Njc=::SW5wdXQgcGFja2V0IGJ1cnN0d3JhcCBmaWVsZCBpbmRleCAtIGhpZ2g="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JVUlNUV1JBUF9M::NjE=::SW5wdXQgcGFja2V0IGJ1cnN0d3JhcCBmaWVsZCBpbmRleCAtIGxvdw=="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JVUlNUX1NJWkVfSA==::NzA=::SW5wdXQgcGFja2V0IGJ1cnN0IHNpemUgZmllbGQgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JVUlNUX1NJWkVfTA==::Njg=::SW5wdXQgcGFja2V0IGJ1cnN0IHNpemUgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX1JFU1BPTlNFX1NUQVRVU19I::OTk=::SW5wdXQgcGFja2V0IHJlc3BvbnNlIHN0YXR1cyBmaWVsZCBpbmRleCAtIGhpZ2g="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX1JFU1BPTlNFX1NUQVRVU19M::OTg=::SW5wdXQgcGFja2V0IHJlc3BvbnNlIHN0YXR1cyBmaWVsZCBpbmRleCAtIGxvdw=="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX1RSQU5TX0VYQ0xVU0lWRQ==::NTM=::SW5wdXQgcGFja2V0IGV4Y2x1c2l2ZSB0cmFucyBmaWVsZA=="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JVUlNUX1RZUEVfSA==::NzI=::SW5wdXQgcGFja2V0IGJ1cnN0IHR5cGUgZmllbGQgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JVUlNUX1RZUEVfTA==::NzE=::SW5wdXQgcGFja2V0IGJ1cnN0IHR5cGUgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX09SSV9CVVJTVF9TSVpFX0w=::MTAw::UGFja2V0IG9yaWdpbmFsIGJ1cnN0IHNpemUgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX09SSV9CVVJTVF9TSVpFX0g=::MTAy::UGFja2V0IG9yaWdpbmFsIGJ1cnN0IHNpemUgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fU1RfREFUQV9X::MTAz::SW5wdXQgZGF0YSB3aWR0aA=="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JZVEVFTl9I::OA==::SW5wdXQgcGFja2V0IGJ5dGVlbmFibGUgZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JZVEVFTl9M::OA==::SW5wdXQgcGFja2V0IGJ5dGVlbmFibGUgZmllbGQgaW5kZXggLSBsb3c="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JZVEVfQ05UX0g=::NTE=::SW5wdXQgcGFja2V0IGJ5dGUgY291bnQgZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JZVEVfQ05UX0w=::NDU=::SW5wdXQgcGFja2V0IGJ5dGUgY291bnQgZmllbGQgaW5kZXggLSBsb3c="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX1RSQU5TX0NPTVBSRVNTRURfUkVBRA==::Mzk=::SW5wdXQgcGFja2V0IGNvbXByZXNzZWQgcmVhZCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleA=="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX1RSQU5TX1dSSVRF::NDE=::SW5wdXQgcGFja2V0IHdyaXRlIHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4"
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JVUlNUV1JBUF9I::NTg=::SW5wdXQgcGFja2V0IGJ1cnN0d3JhcCBmaWVsZCBpbmRleCAtIGhpZ2g="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JVUlNUV1JBUF9M::NTI=::SW5wdXQgcGFja2V0IGJ1cnN0d3JhcCBmaWVsZCBpbmRleCAtIGxvdw=="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JVUlNUX1NJWkVfSA==::NjE=::SW5wdXQgcGFja2V0IGJ1cnN0IHNpemUgZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JVUlNUX1NJWkVfTA==::NTk=::SW5wdXQgcGFja2V0IGJ1cnN0IHNpemUgZmllbGQgaW5kZXggLSBsb3c="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX1JFU1BPTlNFX1NUQVRVU19I::OTI=::SW5wdXQgcGFja2V0IHJlc3BvbnNlIHN0YXR1cyBmaWVsZCBpbmRleCAtIGhpZ2g="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX1JFU1BPTlNFX1NUQVRVU19M::OTE=::SW5wdXQgcGFja2V0IHJlc3BvbnNlIHN0YXR1cyBmaWVsZCBpbmRleCAtIGxvdw=="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX1RSQU5TX0VYQ0xVU0lWRQ==::NDQ=::SW5wdXQgcGFja2V0IGV4Y2x1c2l2ZSB0cmFucyBmaWVsZA=="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JVUlNUX1RZUEVfSA==::NjM=::SW5wdXQgcGFja2V0IGJ1cnN0IHR5cGUgZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX0JVUlNUX1RZUEVfTA==::NjI=::SW5wdXQgcGFja2V0IGJ1cnN0IHR5cGUgZmllbGQgaW5kZXggLSBsb3c="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX09SSV9CVVJTVF9TSVpFX0w=::OTM=::UGFja2V0IG9yaWdpbmFsIGJ1cnN0IHNpemUgaW5kZXggLSBsb3c="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fUEtUX09SSV9CVVJTVF9TSVpFX0g=::OTU=::UGFja2V0IG9yaWdpbmFsIGJ1cnN0IHNpemUgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fU1RfREFUQV9X::OTY=::SW5wdXQgZGF0YSB3aWR0aA=="
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1BLVF9BRERSX0g=::NjU=::T3V0cHV0IHBhY2tldCBhZGRyZXNzIGZpZWxkIGluZGV4IC0gaGlnaA=="
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1BLVF9BRERSX0w=::MzY=::T3V0cHV0IHBhY2tldCBhZGRyZXNzIGZpZWxkIGluZGV4IC0gbG93"
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1BLVF9EQVRBX0g=::MzE=::T3V0cHV0IHBhY2tldCBieXRlZW5hYmxlIGZpZWxkIGluZGV4IC0gaGlnaA=="
@@ -195,21 +195,21 @@ set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_b
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1BLVF9UUkFOU19DT01QUkVTU0VEX1JFQUQ=::NjY=::T3V0cHV0IHBhY2tldCBkYXRhIGZpZWxkIGluZGV4IC0gaGlnaA=="
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1BLVF9CVVJTVF9TSVpFX0g=::ODg=::T3V0cHV0IHBhY2tldCBidXJzdCBzaXplIGZpZWxkIGluZGV4IC0gaGlnaA=="
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1BLVF9CVVJTVF9TSVpFX0w=::ODY=::T3V0cHV0IHBhY2tldCBidXJzdCBzaXplIGZpZWxkIGluZGV4IC0gbG93"
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1BLVF9SRVNQT05TRV9TVEFUVVNfSA==::MTE3::T3V0cHV0IHBhY2tldCByZXNwb25zZSBzdGF0dXMgZmllbGQgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1BLVF9SRVNQT05TRV9TVEFUVVNfTA==::MTE2::T3V0cHV0IHBhY2tldCByZXNwb25zZSBzdGF0dXMgZmllbGQgaW5kZXggLSBsb3c="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1BLVF9SRVNQT05TRV9TVEFUVVNfSA==::MTE5::T3V0cHV0IHBhY2tldCByZXNwb25zZSBzdGF0dXMgZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1BLVF9SRVNQT05TRV9TVEFUVVNfTA==::MTE4::T3V0cHV0IHBhY2tldCByZXNwb25zZSBzdGF0dXMgZmllbGQgaW5kZXggLSBsb3c="
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1BLVF9UUkFOU19FWENMVVNJVkU=::NzE=::T3V0cHV0IHBhY2tldCBleGNsdXNpdmUgdHJhbnMgZmllbGQ="
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1BLVF9CVVJTVF9UWVBFX0g=::OTA=::SW5wdXQgcGFja2V0IGJ1cnN0IHR5cGUgZmllbGQgaW5kZXggLSBoaWdo"
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1BLVF9CVVJTVF9UWVBFX0w=::ODk=::SW5wdXQgcGFja2V0IGJ1cnN0IHR5cGUgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1BLVF9PUklfQlVSU1RfU0laRV9M::MTE4::UGFja2V0IG9yaWdpbmFsIGJ1cnN0IHNpemUgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1BLVF9PUklfQlVSU1RfU0laRV9I::MTIw::UGFja2V0IG9yaWdpbmFsIGJ1cnN0IHNpemUgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1NUX0RBVEFfVw==::MTIx::T3V0cHV0IHBhY2tldCBkYXRhIGZpZWxkIGluZGV4IC0gbG93"
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mg==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1BLVF9PUklfQlVSU1RfU0laRV9M::MTIw::UGFja2V0IG9yaWdpbmFsIGJ1cnN0IHNpemUgaW5kZXggLSBsb3c="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1BLVF9PUklfQlVSU1RfU0laRV9I::MTIy::UGFja2V0IG9yaWdpbmFsIGJ1cnN0IHNpemUgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX1NUX0RBVEFfVw==::MTIz::T3V0cHV0IHBhY2tldCBkYXRhIGZpZWxkIGluZGV4IC0gbG93"
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mw==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1BUSU1JWkVfRk9SX1JTUA==::MA==::T3B0aW1pemUgZm9yIHJlc3BvbnNl"
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UkVTUE9OU0VfUEFUSA==::MQ==::UmVzcG9uc2Ugd2lkdGggYWRhcHRlcg=="
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "Q09OU1RBTlRfQlVSU1RfU0laRQ==::MA==::U3lzdGVtIG9ubHkgaGF2ZSBjb25zdGFudCBidXJzdCBzaXpl"
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEFDS0lORw==::MQ==::TmFycm93LXRvLVdpZGUgcGFja2luZw=="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fTUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTAyOjEwMCkgcmVzcG9uc2Vfc3RhdHVzKDk5Ojk4KSBjYWNoZSg5Nzo5NCkgcHJvdGVjdGlvbig5Mzo5MSkgdGhyZWFkX2lkKDkwOjc5KSBkZXN0X2lkKDc4KSBzcmNfaWQoNzcpIHFvcyg3NikgYmVnaW5fYnVyc3QoNzUpIGRhdGFfc2lkZWJhbmQoNzQpIGFkZHJfc2lkZWJhbmQoNzMpIGJ1cnN0X3R5cGUoNzI6NzEpIGJ1cnN0X3NpemUoNzA6NjgpIGJ1cnN0d3JhcCg2Nzo2MSkgYnl0ZV9jbnQoNjA6NTQpIHRyYW5zX2V4Y2x1c2l2ZSg1MykgdHJhbnNfbG9jayg1MikgdHJhbnNfcmVhZCg1MSkgdHJhbnNfd3JpdGUoNTApIHRyYW5zX3Bvc3RlZCg0OSkgdHJhbnNfY29tcHJlc3NlZF9yZWFkKDQ4KSBhZGRyKDQ3OjE4KSBieXRlZW4oMTc6MTYpIGRhdGEoMTU6MCk=::SW5wdXQgTWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
-set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX01FUkxJTl9QQUNLRVRfRk9STUFU::b3JpX2J1cnN0X3NpemUoMTIwOjExOCkgcmVzcG9uc2Vfc3RhdHVzKDExNzoxMTYpIGNhY2hlKDExNToxMTIpIHByb3RlY3Rpb24oMTExOjEwOSkgdGhyZWFkX2lkKDEwODo5NykgZGVzdF9pZCg5Nikgc3JjX2lkKDk1KSBxb3MoOTQpIGJlZ2luX2J1cnN0KDkzKSBkYXRhX3NpZGViYW5kKDkyKSBhZGRyX3NpZGViYW5kKDkxKSBidXJzdF90eXBlKDkwOjg5KSBidXJzdF9zaXplKDg4Ojg2KSBidXJzdHdyYXAoODU6NzkpIGJ5dGVfY250KDc4OjcyKSB0cmFuc19leGNsdXNpdmUoNzEpIHRyYW5zX2xvY2soNzApIHRyYW5zX3JlYWQoNjkpIHRyYW5zX3dyaXRlKDY4KSB0cmFuc19wb3N0ZWQoNjcpIHRyYW5zX2NvbXByZXNzZWRfcmVhZCg2NikgYWRkcig2NTozNikgYnl0ZWVuKDM1OjMyKSBkYXRhKDMxOjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvciAtIG91dHB1dA=="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fTUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoOTU6OTMpIHJlc3BvbnNlX3N0YXR1cyg5Mjo5MSkgY2FjaGUoOTA6ODcpIHByb3RlY3Rpb24oODY6ODQpIHRocmVhZF9pZCg4Mzo3MikgZGVzdF9pZCg3MTo3MCkgc3JjX2lkKDY5OjY4KSBxb3MoNjcpIGJlZ2luX2J1cnN0KDY2KSBkYXRhX3NpZGViYW5kKDY1KSBhZGRyX3NpZGViYW5kKDY0KSBidXJzdF90eXBlKDYzOjYyKSBidXJzdF9zaXplKDYxOjU5KSBidXJzdHdyYXAoNTg6NTIpIGJ5dGVfY250KDUxOjQ1KSB0cmFuc19leGNsdXNpdmUoNDQpIHRyYW5zX2xvY2soNDMpIHRyYW5zX3JlYWQoNDIpIHRyYW5zX3dyaXRlKDQxKSB0cmFuc19wb3N0ZWQoNDApIHRyYW5zX2NvbXByZXNzZWRfcmVhZCgzOSkgYWRkcigzODo5KSBieXRlZW4oOCkgZGF0YSg3OjAp::SW5wdXQgTWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
+set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX01FUkxJTl9QQUNLRVRfRk9STUFU::b3JpX2J1cnN0X3NpemUoMTIyOjEyMCkgcmVzcG9uc2Vfc3RhdHVzKDExOToxMTgpIGNhY2hlKDExNzoxMTQpIHByb3RlY3Rpb24oMTEzOjExMSkgdGhyZWFkX2lkKDExMDo5OSkgZGVzdF9pZCg5ODo5Nykgc3JjX2lkKDk2Ojk1KSBxb3MoOTQpIGJlZ2luX2J1cnN0KDkzKSBkYXRhX3NpZGViYW5kKDkyKSBhZGRyX3NpZGViYW5kKDkxKSBidXJzdF90eXBlKDkwOjg5KSBidXJzdF9zaXplKDg4Ojg2KSBidXJzdHdyYXAoODU6NzkpIGJ5dGVfY250KDc4OjcyKSB0cmFuc19leGNsdXNpdmUoNzEpIHRyYW5zX2xvY2soNzApIHRyYW5zX3JlYWQoNjkpIHRyYW5zX3dyaXRlKDY4KSB0cmFuc19wb3N0ZWQoNjcpIHRyYW5zX2NvbXByZXNzZWRfcmVhZCg2NikgYWRkcig2NTozNikgYnl0ZWVuKDM1OjMyKSBkYXRhKDMxOjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvciAtIG91dHB1dA=="
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "Q09NTUFORF9TSVpFX1c=::Mw==::Q29tbWFuZC1zaXplIGlucHV0IHdpZHRo"
 set_global_assignment -entity "altera_merlin_width_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "RU5BQkxFX0FERFJFU1NfQUxJR05NRU5U::MQ==::QWRkcmVzcyBhbGlnbm1lbnQ="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_NAME "aHBzX2ZwZ2FfYnJpZGdlX21tX2ludGVyY29ubmVjdF8wX3JzcF9tdXg="
@@ -219,15 +219,15 @@ set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -libra
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_AUTHOR "QWx0ZXJhIENvcnBvcmF0aW9u"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_VERSION "MjAuMQ=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_DESCRIPTION "QXJiaXRyYXRlcyBiZXR3ZWVuIHJlcXVlc3RpbmcgbWFzdGVycyB1c2luZyBhbiBlcXVhbCBzaGFyZSwgcm91bmQtcm9iaW4gYWxnb3JpdGhtLiBUaGUgYXJiaXRyYXRpb24gc2NoZW1lIGNhbiBiZSBjaGFuZ2VkIHRvIHdlaWdodGVkIHJvdW5kLXJvYmluIGJ5IHNwZWNpZnlpbmcgYSByZWxhdGl2ZSBudW1iZXIgb2YgYXJiaXRyYXRpb24gc2hhcmVzIHRvIHRoZSBtYXN0ZXJzIHRoYXQgYWNjZXNzIGEgcGFydGljdWxhciBzbGF2ZS4="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTIx::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mg==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TlVNX0lOUFVUUw==::Mg==::TnVtYmVyIG9mIG11eCBpbnB1dHM="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTIz::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mw==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TlVNX0lOUFVUUw==::Mw==::TnVtYmVyIG9mIG11eCBpbnB1dHM="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UElQRUxJTkVfQVJC::MA==::UGlwZWxpbmVkIGFyYml0cmF0aW9u"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX0VYVEVSTkFMX0FSQg==::MA==::VXNlIGV4dGVybmFsIGFyYml0cmF0aW9u"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX0xPQ0s=::NzA=::UGFja2V0IGxvY2sgdHJhbnNhY3Rpb24gZmllbGQgaW5kZXg="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVJCSVRSQVRJT05fU0NIRU1F::bm8tYXJi::QXJiaXRyYXRpb24gc2NoZW1l"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVJCSVRSQVRJT05fU0hBUkVT::MSwx::QXJiaXRyYXRpb24gc2hhcmVz"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTIwOjExOCkgcmVzcG9uc2Vfc3RhdHVzKDExNzoxMTYpIGNhY2hlKDExNToxMTIpIHByb3RlY3Rpb24oMTExOjEwOSkgdGhyZWFkX2lkKDEwODo5NykgZGVzdF9pZCg5Nikgc3JjX2lkKDk1KSBxb3MoOTQpIGJlZ2luX2J1cnN0KDkzKSBkYXRhX3NpZGViYW5kKDkyKSBhZGRyX3NpZGViYW5kKDkxKSBidXJzdF90eXBlKDkwOjg5KSBidXJzdF9zaXplKDg4Ojg2KSBidXJzdHdyYXAoODU6NzkpIGJ5dGVfY250KDc4OjcyKSB0cmFuc19leGNsdXNpdmUoNzEpIHRyYW5zX2xvY2soNzApIHRyYW5zX3JlYWQoNjkpIHRyYW5zX3dyaXRlKDY4KSB0cmFuc19wb3N0ZWQoNjcpIHRyYW5zX2NvbXByZXNzZWRfcmVhZCg2NikgYWRkcig2NTozNikgYnl0ZWVuKDM1OjMyKSBkYXRhKDMxOjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVJCSVRSQVRJT05fU0hBUkVT::MSwxLDE=::QXJiaXRyYXRpb24gc2hhcmVz"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTIyOjEyMCkgcmVzcG9uc2Vfc3RhdHVzKDExOToxMTgpIGNhY2hlKDExNzoxMTQpIHByb3RlY3Rpb24oMTEzOjExMSkgdGhyZWFkX2lkKDExMDo5OSkgZGVzdF9pZCg5ODo5Nykgc3JjX2lkKDk2Ojk1KSBxb3MoOTQpIGJlZ2luX2J1cnN0KDkzKSBkYXRhX3NpZGViYW5kKDkyKSBhZGRyX3NpZGViYW5kKDkxKSBidXJzdF90eXBlKDkwOjg5KSBidXJzdF9zaXplKDg4Ojg2KSBidXJzdHdyYXAoODU6NzkpIGJ5dGVfY250KDc4OjcyKSB0cmFuc19leGNsdXNpdmUoNzEpIHRyYW5zX2xvY2soNzApIHRyYW5zX3JlYWQoNjkpIHRyYW5zX3dyaXRlKDY4KSB0cmFuc19wb3N0ZWQoNjcpIHRyYW5zX2NvbXByZXNzZWRfcmVhZCg2NikgYWRkcig2NTozNikgYnl0ZWVuKDM1OjMyKSBkYXRhKDMxOjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_NAME "aHBzX2ZwZ2FfYnJpZGdlX21tX2ludGVyY29ubmVjdF8wX3JzcF9kZW11eA=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_DISPLAY_NAME "TWVtb3J5IE1hcHBlZCBEZW11bHRpcGxleGVy"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_REPORT_HIERARCHY "Off"
@@ -235,11 +235,11 @@ set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_demux" -lib
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_AUTHOR "QWx0ZXJhIENvcnBvcmF0aW9u"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_VERSION "MjAuMQ=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_DESCRIPTION "QWNjZXB0cyBjaGFubmVsaXplZCBkYXRhIG9uIGl0cyBzaW5rIGludGVyZmFjZSBhbmQgdHJhbnNtaXRzIHRoZSBkYXRhIG9uIG9uZSBvZiBpdHMgc291cmNlIGludGVyZmFjZXMu"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTIx::UGFja2V0IGRhdGEgd2lkdGg="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mg==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTIz::UGFja2V0IGRhdGEgd2lkdGg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mw==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TlVNX09VVFBVVFM=::Mg==::TnVtYmVyIG9mIGRlbXV4IG91dHB1dHM="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VkFMSURfV0lEVEg=::MQ==::VmFsaWQgd2lkdGg="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTIwOjExOCkgcmVzcG9uc2Vfc3RhdHVzKDExNzoxMTYpIGNhY2hlKDExNToxMTIpIHByb3RlY3Rpb24oMTExOjEwOSkgdGhyZWFkX2lkKDEwODo5NykgZGVzdF9pZCg5Nikgc3JjX2lkKDk1KSBxb3MoOTQpIGJlZ2luX2J1cnN0KDkzKSBkYXRhX3NpZGViYW5kKDkyKSBhZGRyX3NpZGViYW5kKDkxKSBidXJzdF90eXBlKDkwOjg5KSBidXJzdF9zaXplKDg4Ojg2KSBidXJzdHdyYXAoODU6NzkpIGJ5dGVfY250KDc4OjcyKSB0cmFuc19leGNsdXNpdmUoNzEpIHRyYW5zX2xvY2soNzApIHRyYW5zX3JlYWQoNjkpIHRyYW5zX3dyaXRlKDY4KSB0cmFuc19wb3N0ZWQoNjcpIHRyYW5zX2NvbXByZXNzZWRfcmVhZCg2NikgYWRkcig2NTozNikgYnl0ZWVuKDM1OjMyKSBkYXRhKDMxOjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTIyOjEyMCkgcmVzcG9uc2Vfc3RhdHVzKDExOToxMTgpIGNhY2hlKDExNzoxMTQpIHByb3RlY3Rpb24oMTEzOjExMSkgdGhyZWFkX2lkKDExMDo5OSkgZGVzdF9pZCg5ODo5Nykgc3JjX2lkKDk2Ojk1KSBxb3MoOTQpIGJlZ2luX2J1cnN0KDkzKSBkYXRhX3NpZGViYW5kKDkyKSBhZGRyX3NpZGViYW5kKDkxKSBidXJzdF90eXBlKDkwOjg5KSBidXJzdF9zaXplKDg4Ojg2KSBidXJzdHdyYXAoODU6NzkpIGJ5dGVfY250KDc4OjcyKSB0cmFuc19leGNsdXNpdmUoNzEpIHRyYW5zX2xvY2soNzApIHRyYW5zX3JlYWQoNjkpIHRyYW5zX3dyaXRlKDY4KSB0cmFuc19wb3N0ZWQoNjcpIHRyYW5zX2NvbXByZXNzZWRfcmVhZCg2NikgYWRkcig2NTozNikgYnl0ZWVuKDM1OjMyKSBkYXRhKDMxOjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVVUT19ERVZJQ0VfRkFNSUxZ::Q3ljbG9uZSBW::QXV0byBERVZJQ0VfRkFNSUxZ"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_rsp_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVVUT19DTEtfQ0xPQ0tfUkFURQ==::MTE0MDAwMDAw::QXV0byBDTE9DS19SQVRF"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_NAME "aHBzX2ZwZ2FfYnJpZGdlX21tX2ludGVyY29ubmVjdF8wX2NtZF9tdXg="
@@ -249,15 +249,15 @@ set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -libra
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_AUTHOR "QWx0ZXJhIENvcnBvcmF0aW9u"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_VERSION "MjAuMQ=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_DESCRIPTION "QXJiaXRyYXRlcyBiZXR3ZWVuIHJlcXVlc3RpbmcgbWFzdGVycyB1c2luZyBhbiBlcXVhbCBzaGFyZSwgcm91bmQtcm9iaW4gYWxnb3JpdGhtLiBUaGUgYXJiaXRyYXRpb24gc2NoZW1lIGNhbiBiZSBjaGFuZ2VkIHRvIHdlaWdodGVkIHJvdW5kLXJvYmluIGJ5IHNwZWNpZnlpbmcgYSByZWxhdGl2ZSBudW1iZXIgb2YgYXJiaXRyYXRpb24gc2hhcmVzIHRvIHRoZSBtYXN0ZXJzIHRoYXQgYWNjZXNzIGEgcGFydGljdWxhciBzbGF2ZS4="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTIx::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mg==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTIz::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mw==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TlVNX0lOUFVUUw==::Mg==::TnVtYmVyIG9mIG11eCBpbnB1dHM="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UElQRUxJTkVfQVJC::MQ==::UGlwZWxpbmVkIGFyYml0cmF0aW9u"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UElQRUxJTkVfQVJC::MA==::UGlwZWxpbmVkIGFyYml0cmF0aW9u"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX0VYVEVSTkFMX0FSQg==::MA==::VXNlIGV4dGVybmFsIGFyYml0cmF0aW9u"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX0xPQ0s=::NzA=::UGFja2V0IGxvY2sgdHJhbnNhY3Rpb24gZmllbGQgaW5kZXg="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVJCSVRSQVRJT05fU0NIRU1F::cm91bmQtcm9iaW4=::QXJiaXRyYXRpb24gc2NoZW1l"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVJCSVRSQVRJT05fU0hBUkVT::MSwx::QXJiaXRyYXRpb24gc2hhcmVz"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTIwOjExOCkgcmVzcG9uc2Vfc3RhdHVzKDExNzoxMTYpIGNhY2hlKDExNToxMTIpIHByb3RlY3Rpb24oMTExOjEwOSkgdGhyZWFkX2lkKDEwODo5NykgZGVzdF9pZCg5Nikgc3JjX2lkKDk1KSBxb3MoOTQpIGJlZ2luX2J1cnN0KDkzKSBkYXRhX3NpZGViYW5kKDkyKSBhZGRyX3NpZGViYW5kKDkxKSBidXJzdF90eXBlKDkwOjg5KSBidXJzdF9zaXplKDg4Ojg2KSBidXJzdHdyYXAoODU6NzkpIGJ5dGVfY250KDc4OjcyKSB0cmFuc19leGNsdXNpdmUoNzEpIHRyYW5zX2xvY2soNzApIHRyYW5zX3JlYWQoNjkpIHRyYW5zX3dyaXRlKDY4KSB0cmFuc19wb3N0ZWQoNjcpIHRyYW5zX2NvbXByZXNzZWRfcmVhZCg2NikgYWRkcig2NTozNikgYnl0ZWVuKDM1OjMyKSBkYXRhKDMxOjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_mux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTIyOjEyMCkgcmVzcG9uc2Vfc3RhdHVzKDExOToxMTgpIGNhY2hlKDExNzoxMTQpIHByb3RlY3Rpb24oMTEzOjExMSkgdGhyZWFkX2lkKDExMDo5OSkgZGVzdF9pZCg5ODo5Nykgc3JjX2lkKDk2Ojk1KSBxb3MoOTQpIGJlZ2luX2J1cnN0KDkzKSBkYXRhX3NpZGViYW5kKDkyKSBhZGRyX3NpZGViYW5kKDkxKSBidXJzdF90eXBlKDkwOjg5KSBidXJzdF9zaXplKDg4Ojg2KSBidXJzdHdyYXAoODU6NzkpIGJ5dGVfY250KDc4OjcyKSB0cmFuc19leGNsdXNpdmUoNzEpIHRyYW5zX2xvY2soNzApIHRyYW5zX3JlYWQoNjkpIHRyYW5zX3dyaXRlKDY4KSB0cmFuc19wb3N0ZWQoNjcpIHRyYW5zX2NvbXByZXNzZWRfcmVhZCg2NikgYWRkcig2NTozNikgYnl0ZWVuKDM1OjMyKSBkYXRhKDMxOjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_NAME "aHBzX2ZwZ2FfYnJpZGdlX21tX2ludGVyY29ubmVjdF8wX2NtZF9kZW11eA=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_DISPLAY_NAME "TWVtb3J5IE1hcHBlZCBEZW11bHRpcGxleGVy"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_REPORT_HIERARCHY "Off"
@@ -265,11 +265,11 @@ set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -lib
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_AUTHOR "QWx0ZXJhIENvcnBvcmF0aW9u"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_VERSION "MjAuMQ=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_DESCRIPTION "QWNjZXB0cyBjaGFubmVsaXplZCBkYXRhIG9uIGl0cyBzaW5rIGludGVyZmFjZSBhbmQgdHJhbnNtaXRzIHRoZSBkYXRhIG9uIG9uZSBvZiBpdHMgc291cmNlIGludGVyZmFjZXMu"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTIx::UGFja2V0IGRhdGEgd2lkdGg="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mg==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TlVNX09VVFBVVFM=::Mg==::TnVtYmVyIG9mIGRlbXV4IG91dHB1dHM="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VkFMSURfV0lEVEg=::Mg==::VmFsaWQgd2lkdGg="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTIwOjExOCkgcmVzcG9uc2Vfc3RhdHVzKDExNzoxMTYpIGNhY2hlKDExNToxMTIpIHByb3RlY3Rpb24oMTExOjEwOSkgdGhyZWFkX2lkKDEwODo5NykgZGVzdF9pZCg5Nikgc3JjX2lkKDk1KSBxb3MoOTQpIGJlZ2luX2J1cnN0KDkzKSBkYXRhX3NpZGViYW5kKDkyKSBhZGRyX3NpZGViYW5kKDkxKSBidXJzdF90eXBlKDkwOjg5KSBidXJzdF9zaXplKDg4Ojg2KSBidXJzdHdyYXAoODU6NzkpIGJ5dGVfY250KDc4OjcyKSB0cmFuc19leGNsdXNpdmUoNzEpIHRyYW5zX2xvY2soNzApIHRyYW5zX3JlYWQoNjkpIHRyYW5zX3dyaXRlKDY4KSB0cmFuc19wb3N0ZWQoNjcpIHRyYW5zX2NvbXByZXNzZWRfcmVhZCg2NikgYWRkcig2NTozNikgYnl0ZWVuKDM1OjMyKSBkYXRhKDMxOjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTIz::UGFja2V0IGRhdGEgd2lkdGg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mw==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TlVNX09VVFBVVFM=::Mw==::TnVtYmVyIG9mIGRlbXV4IG91dHB1dHM="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VkFMSURfV0lEVEg=::Mw==::VmFsaWQgd2lkdGg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTIyOjEyMCkgcmVzcG9uc2Vfc3RhdHVzKDExOToxMTgpIGNhY2hlKDExNzoxMTQpIHByb3RlY3Rpb24oMTEzOjExMSkgdGhyZWFkX2lkKDExMDo5OSkgZGVzdF9pZCg5ODo5Nykgc3JjX2lkKDk2Ojk1KSBxb3MoOTQpIGJlZ2luX2J1cnN0KDkzKSBkYXRhX3NpZGViYW5kKDkyKSBhZGRyX3NpZGViYW5kKDkxKSBidXJzdF90eXBlKDkwOjg5KSBidXJzdF9zaXplKDg4Ojg2KSBidXJzdHdyYXAoODU6NzkpIGJ5dGVfY250KDc4OjcyKSB0cmFuc19leGNsdXNpdmUoNzEpIHRyYW5zX2xvY2soNzApIHRyYW5zX3JlYWQoNjkpIHRyYW5zX3dyaXRlKDY4KSB0cmFuc19wb3N0ZWQoNjcpIHRyYW5zX2NvbXByZXNzZWRfcmVhZCg2NikgYWRkcig2NTozNikgYnl0ZWVuKDM1OjMyKSBkYXRhKDMxOjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVVUT19ERVZJQ0VfRkFNSUxZ::Q3ljbG9uZSBW::QXV0byBERVZJQ0VfRkFNSUxZ"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_cmd_demux" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVVUT19DTEtfQ0xPQ0tfUkFURQ==::MTE0MDAwMDAw::QXV0byBDTE9DS19SQVRF"
 set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_NAME "YWx0ZXJhX21lcmxpbl9idXJzdF9hZGFwdGVy"
@@ -279,31 +279,31 @@ set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_b
 set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_AUTHOR "QWx0ZXJhIENvcnBvcmF0aW9u"
 set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_VERSION "MjAuMQ=="
 set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_DESCRIPTION "QWNjb21tb2RhdGVzIHRoZSBidXJzdCBjYXBhYmlsaXRpZXMgb2YgZWFjaCBpbnRlcmZhY2UgaW4gdGhlIHN5c3RlbSwgaW5jbHVkaW5nIGludGVyZmFjZXMgdGhhdCBkbyBub3Qgc3VwcG9ydCBidXJzdCB0cmFuc2ZlcnMsIHRyYW5zbGF0aW5nIGJ1cnN0IHNpemVzIGFzIHJlcXVpcmVkLg=="
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfSA==::NDc=::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfTA==::MTg=::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JFR0lOX0JVUlNU::NzU=::UGFja2V0IGJlZ2luIGJ1cnN0IGZpZWxkIGluZGV4"
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVfQ05UX0g=::NjA=::UGFja2V0IGJ5dGUgY291bnQgZmllbGQgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVfQ05UX0w=::NTQ=::UGFja2V0IGJ5dGUgY291bnQgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVFTl9I::MTc=::UGFja2V0IGJ5dGVlbmFibGUgZmllbGQgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVFTl9M::MTY=::UGFja2V0IGJ5dGVlbmFibGUgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUX1NJWkVfSA==::NzA=::UGFja2V0IGJ1cnN0c2l6ZSBmaWVsZCBpbmRleCAtIGhpZ2g="
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUX1NJWkVfTA==::Njg=::UGFja2V0IGJ1cnN0c2l6ZSBmaWVsZCBpbmRleCAtIGxvdw=="
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUX1RZUEVfSA==::NzI=::UGFja2V0IGJ1cnN0dHlwZSBmaWVsZCBpbmRleCAtIGhpZ2g="
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUX1RZUEVfTA==::NzE=::UGFja2V0IGJ1cnN0dHlwZSBmaWVsZCBpbmRleCAtIGxvdw=="
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUV1JBUF9I::Njc=::UGFja2V0IGJ1cnN0d3JhcCBmaWVsZCBpbmRleCAtIGhpZ2g="
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUV1JBUF9M::NjE=::UGFja2V0IGJ1cnN0d3JhcCBmaWVsZCBpbmRleCAtIGxvdw=="
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX0NPTVBSRVNTRURfUkVBRA==::NDg=::UGFja2V0IGNvbXByZXNzZWQgcmVhZCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleA=="
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1dSSVRF::NTA=::UGFja2V0IHdyaXRlIHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4"
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1JFQUQ=::NTE=::UGFja2V0IHJlYWQgdHJhbnNhY3Rpb24gZmllbGQgaW5kZXg="
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfSA==::Mzg=::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfTA==::OQ==::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBsb3c="
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JFR0lOX0JVUlNU::NjY=::UGFja2V0IGJlZ2luIGJ1cnN0IGZpZWxkIGluZGV4"
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVfQ05UX0g=::NTE=::UGFja2V0IGJ5dGUgY291bnQgZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVfQ05UX0w=::NDU=::UGFja2V0IGJ5dGUgY291bnQgZmllbGQgaW5kZXggLSBsb3c="
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVFTl9I::OA==::UGFja2V0IGJ5dGVlbmFibGUgZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVFTl9M::OA==::UGFja2V0IGJ5dGVlbmFibGUgZmllbGQgaW5kZXggLSBsb3c="
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUX1NJWkVfSA==::NjE=::UGFja2V0IGJ1cnN0c2l6ZSBmaWVsZCBpbmRleCAtIGhpZ2g="
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUX1NJWkVfTA==::NTk=::UGFja2V0IGJ1cnN0c2l6ZSBmaWVsZCBpbmRleCAtIGxvdw=="
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUX1RZUEVfSA==::NjM=::UGFja2V0IGJ1cnN0dHlwZSBmaWVsZCBpbmRleCAtIGhpZ2g="
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUX1RZUEVfTA==::NjI=::UGFja2V0IGJ1cnN0dHlwZSBmaWVsZCBpbmRleCAtIGxvdw=="
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUV1JBUF9I::NTg=::UGFja2V0IGJ1cnN0d3JhcCBmaWVsZCBpbmRleCAtIGhpZ2g="
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUV1JBUF9M::NTI=::UGFja2V0IGJ1cnN0d3JhcCBmaWVsZCBpbmRleCAtIGxvdw=="
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX0NPTVBSRVNTRURfUkVBRA==::Mzk=::UGFja2V0IGNvbXByZXNzZWQgcmVhZCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleA=="
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1dSSVRF::NDE=::UGFja2V0IHdyaXRlIHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4"
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1JFQUQ=::NDI=::UGFja2V0IHJlYWQgdHJhbnNhY3Rpb24gZmllbGQgaW5kZXg="
 set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX05BUlJPV19TSVpF::MA==::c2xhdmUgbmFycm93IHNpemVkIG91dHB1dA=="
 set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SU5fTkFSUk9XX1NJWkU=::MQ==::c2xhdmUgbmFycm93IHNpemVkIG91dHB1dA=="
 set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX0ZJWEVE::MA==::c2xhdmUgZml4ZWQgb3V0cHV0"
 set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX0NPTVBMRVRFX1dSQVA=::MA==::c2xhdmUgY29tcGxldGUgd3JhcCBvdXRwdXQ="
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTAz::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mg==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX0JZVEVfQ05UX0g=::NTU=::TWF4aW11bSBvdXRwdXQgcGFja2V0IGJ5dGUgY291bnQgaW5kZXg="
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX0JVUlNUV1JBUF9I::Njc=::TWF4aW11bSBvdXRwdXQgcGFja2V0IGJ1cnN0d3JhcCBpbmRleA=="
-set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTAyOjEwMCkgcmVzcG9uc2Vfc3RhdHVzKDk5Ojk4KSBjYWNoZSg5Nzo5NCkgcHJvdGVjdGlvbig5Mzo5MSkgdGhyZWFkX2lkKDkwOjc5KSBkZXN0X2lkKDc4KSBzcmNfaWQoNzcpIHFvcyg3NikgYmVnaW5fYnVyc3QoNzUpIGRhdGFfc2lkZWJhbmQoNzQpIGFkZHJfc2lkZWJhbmQoNzMpIGJ1cnN0X3R5cGUoNzI6NzEpIGJ1cnN0X3NpemUoNzA6NjgpIGJ1cnN0d3JhcCg2Nzo2MSkgYnl0ZV9jbnQoNjA6NTQpIHRyYW5zX2V4Y2x1c2l2ZSg1MykgdHJhbnNfbG9jayg1MikgdHJhbnNfcmVhZCg1MSkgdHJhbnNfd3JpdGUoNTApIHRyYW5zX3Bvc3RlZCg0OSkgdHJhbnNfY29tcHJlc3NlZF9yZWFkKDQ4KSBhZGRyKDQ3OjE4KSBieXRlZW4oMTc6MTYpIGRhdGEoMTU6MCk=::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::OTY=::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mw==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX0JZVEVfQ05UX0g=::NDU=::TWF4aW11bSBvdXRwdXQgcGFja2V0IGJ5dGUgY291bnQgaW5kZXg="
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "T1VUX0JVUlNUV1JBUF9I::NTg=::TWF4aW11bSBvdXRwdXQgcGFja2V0IGJ1cnN0d3JhcCBpbmRleA=="
+set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoOTU6OTMpIHJlc3BvbnNlX3N0YXR1cyg5Mjo5MSkgY2FjaGUoOTA6ODcpIHByb3RlY3Rpb24oODY6ODQpIHRocmVhZF9pZCg4Mzo3MikgZGVzdF9pZCg3MTo3MCkgc3JjX2lkKDY5OjY4KSBxb3MoNjcpIGJlZ2luX2J1cnN0KDY2KSBkYXRhX3NpZGViYW5kKDY1KSBhZGRyX3NpZGViYW5kKDY0KSBidXJzdF90eXBlKDYzOjYyKSBidXJzdF9zaXplKDYxOjU5KSBidXJzdHdyYXAoNTg6NTIpIGJ5dGVfY250KDUxOjQ1KSB0cmFuc19leGNsdXNpdmUoNDQpIHRyYW5zX2xvY2soNDMpIHRyYW5zX3JlYWQoNDIpIHRyYW5zX3dyaXRlKDQxKSB0cmFuc19wb3N0ZWQoNDApIHRyYW5zX2NvbXByZXNzZWRfcmVhZCgzOSkgYWRkcigzODo5KSBieXRlZW4oOCkgZGF0YSg3OjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
 set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "Q09NUFJFU1NFRF9SRUFEX1NVUFBPUlQ=::MQ==::Q29tcHJlc3NlZCByZWFkIHN1cHBvcnQ="
 set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QllURUVOQUJMRV9TWU5USEVTSVM=::MQ==::Qnl0ZWVuYWJsZSBTeW50aGVzaXMgU3VwcG9ydA=="
 set_global_assignment -entity "altera_merlin_burst_adapter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UElQRV9JTlBVVFM=::MA==::QnVyc3QgYWRhcHRlciBpbnB1dCBwaXBlbGluZQ=="
@@ -319,9 +319,9 @@ set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga
 set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_AUTHOR "QWx0ZXJhIENvcnBvcmF0aW9u"
 set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_VERSION "MjAuMQ=="
 set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_DESCRIPTION "RW5zdXJlcyB0aGUgcmVzcG9uc2VzIGFycml2ZSBpbiBvcmRlciwgc2ltcGxpZnlpbmcgdGhlIFFzeXMgcmVzcG9uc2UgbmV0d29yay4="
-set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfSA==::OTY=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gaGlnaA=="
-set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfTA==::OTY=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gbG93"
-set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1NSQ19JRF9I::OTU=::UGFja2V0IHNvdXJjZSBpZCBmaWVsZCBpbmRleCAtIGhpZ2g="
+set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfSA==::OTg=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gaGlnaA=="
+set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfTA==::OTc=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gbG93"
+set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1NSQ19JRF9I::OTY=::UGFja2V0IHNvdXJjZSBpZCBmaWVsZCBpbmRleCAtIGhpZ2g="
 set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1NSQ19JRF9M::OTU=::UGFja2V0IHNvdXJjZSBpZCBmaWVsZCBpbmRleCAtIGxvdw=="
 set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVfQ05UX0g=::Nzg=::UGFja2V0IGJ5dGUgY291bnQgZmllbGQgaW5kZXggLSBoaWdo"
 set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVfQ05UX0w=::NzI=::UGFja2V0IGJ5dGUgY291bnQgZmllbGQgaW5kZXggLSBsb3c="
@@ -329,19 +329,19 @@ set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga
 set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVFTl9M::MzI=::UGFja2V0IGJ5dGVlbmFibGUgZmllbGQgaW5kZXggLSBsb3c="
 set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1BPU1RFRA==::Njc=::UGFja2V0IHBvc3RlZCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleA=="
 set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1dSSVRF::Njg=::UGFja2V0IHdyaXRlIHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4"
-set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RIUkVBRF9JRF9I::MTA4::UGFja2V0IHRocmVhZCBJRCBmaWVsZCBpbmRleCBNU0I="
-set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RIUkVBRF9JRF9M::OTc=::UGFja2V0IHRocmVhZCBJRCBmaWVsZCBpbmRleCBMU0I="
+set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RIUkVBRF9JRF9I::MTEw::UGFja2V0IHRocmVhZCBJRCBmaWVsZCBpbmRleCBNU0I="
+set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RIUkVBRF9JRF9M::OTk=::UGFja2V0IHRocmVhZCBJRCBmaWVsZCBpbmRleCBMU0I="
 set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUFYX0JVUlNUX0xFTkdUSA==::MTY=::TWF4aW11bSBidXJzdCBsZW5ndGg="
-set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUFYX09VVFNUQU5ESU5HX1JFU1BPTlNFUw==::Mw==::TWF4aW11bSBvdXRzdGFuZGluZyByZXNwb25zZXM="
+set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUFYX09VVFNUQU5ESU5HX1JFU1BPTlNFUw==::MTA=::TWF4aW11bSBvdXRzdGFuZGluZyByZXNwb25zZXM="
 set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UElQRUxJTkVE::MA==::UGlwZWxpbmU="
-set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTIx::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
-set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mg==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
-set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VkFMSURfV0lEVEg=::Mg==::VmFsaWQgd2lkdGg="
+set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTIz::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
+set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mw==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
+set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VkFMSURfV0lEVEg=::Mw==::VmFsaWQgd2lkdGg="
 set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "RU5GT1JDRV9PUkRFUg==::MQ==::RW5mb3JjZSBvcmRlcg=="
 set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UFJFVkVOVF9IQVpBUkRT::MA==::UHJldmVudCBoYXphcmRz"
 set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1VQUE9SVFNfUE9TVEVEX1dSSVRFUw==::MQ==::SGF6YXJkIHByZXZlbnRpb246IHBvc3RlZCB3cml0ZSBzdXBwb3J0"
 set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1VQUE9SVFNfTk9OUE9TVEVEX1dSSVRFUw==::MA==::SGF6YXJkIHByZXZlbnRpb246IG5vbi1wb3N0ZWQgd3JpdGUgc3VwcG9ydA=="
-set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTIwOjExOCkgcmVzcG9uc2Vfc3RhdHVzKDExNzoxMTYpIGNhY2hlKDExNToxMTIpIHByb3RlY3Rpb24oMTExOjEwOSkgdGhyZWFkX2lkKDEwODo5NykgZGVzdF9pZCg5Nikgc3JjX2lkKDk1KSBxb3MoOTQpIGJlZ2luX2J1cnN0KDkzKSBkYXRhX3NpZGViYW5kKDkyKSBhZGRyX3NpZGViYW5kKDkxKSBidXJzdF90eXBlKDkwOjg5KSBidXJzdF9zaXplKDg4Ojg2KSBidXJzdHdyYXAoODU6NzkpIGJ5dGVfY250KDc4OjcyKSB0cmFuc19leGNsdXNpdmUoNzEpIHRyYW5zX2xvY2soNzApIHRyYW5zX3JlYWQoNjkpIHRyYW5zX3dyaXRlKDY4KSB0cmFuc19wb3N0ZWQoNjcpIHRyYW5zX2NvbXByZXNzZWRfcmVhZCg2NikgYWRkcig2NTozNikgYnl0ZWVuKDM1OjMyKSBkYXRhKDMxOjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
+set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTIyOjEyMCkgcmVzcG9uc2Vfc3RhdHVzKDExOToxMTgpIGNhY2hlKDExNzoxMTQpIHByb3RlY3Rpb24oMTEzOjExMSkgdGhyZWFkX2lkKDExMDo5OSkgZGVzdF9pZCg5ODo5Nykgc3JjX2lkKDk2Ojk1KSBxb3MoOTQpIGJlZ2luX2J1cnN0KDkzKSBkYXRhX3NpZGViYW5kKDkyKSBhZGRyX3NpZGViYW5kKDkxKSBidXJzdF90eXBlKDkwOjg5KSBidXJzdF9zaXplKDg4Ojg2KSBidXJzdHdyYXAoODU6NzkpIGJ5dGVfY250KDc4OjcyKSB0cmFuc19leGNsdXNpdmUoNzEpIHRyYW5zX2xvY2soNzApIHRyYW5zX3JlYWQoNjkpIHRyYW5zX3dyaXRlKDY4KSB0cmFuc19wb3N0ZWQoNjcpIHRyYW5zX2NvbXByZXNzZWRfcmVhZCg2NikgYWRkcig2NTozNikgYnl0ZWVuKDM1OjMyKSBkYXRhKDMxOjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
 set_global_assignment -entity "altera_merlin_traffic_limiter" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UkVPUkRFUg==::MA==::RW5hYmxlIHJlb3JkZXIgYnVmZmVy"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_NAME "aHBzX2ZwZ2FfYnJpZGdlX21tX2ludGVyY29ubmVjdF8wX3JvdXRlcl8wMDM="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_DISPLAY_NAME "TWVtb3J5IE1hcHBlZCBSb3V0ZXI="
@@ -358,23 +358,23 @@ set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -li
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "Tk9OX1NFQ1VSRURfVEFH::MSwx::Tm9uLXNlY3VyZWQgdGFncw=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U0VDVVJFRF9SQU5HRV9QQUlSUw==::MCww::TnVtYmVyIG9mIHNlY3VyZWQgcmFuZ2UgcGFpcnM="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U0VDVVJFRF9SQU5HRV9MSVNU::MCww::U2VjdXJlZCByYW5nZSBwYWlycw=="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfSA==::Mzg=::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfTA==::OQ==::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fSA==::ODQ=::UGFja2V0IEFYSSBwcm90ZWN0aW9uIGZpZWxkIGluZGV4IC0gaGlnaA=="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fTA==::ODI=::UGFja2V0IEFYSSBwcm90ZWN0aW9uIGZpZWxkIGluZGV4IC0gbG93"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfSA==::Njk=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gaGlnaA=="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfTA==::Njk=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gbG93"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1dSSVRF::NDE=::UGFja2V0IHdyaXRlIHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1JFQUQ=::NDI=::UGFja2V0IHJlYWQgdHJhbnNhY3Rpb24gZmllbGQgaW5kZXg="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::OTQ=::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mg==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfSA==::NjU=::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfTA==::MzY=::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBsb3c="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fSA==::MTEz::UGFja2V0IEFYSSBwcm90ZWN0aW9uIGZpZWxkIGluZGV4IC0gaGlnaA=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fTA==::MTEx::UGFja2V0IEFYSSBwcm90ZWN0aW9uIGZpZWxkIGluZGV4IC0gbG93"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfSA==::OTg=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gaGlnaA=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfTA==::OTc=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gbG93"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1dSSVRF::Njg=::UGFja2V0IHdyaXRlIHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1JFQUQ=::Njk=::UGFja2V0IHJlYWQgdHJhbnNhY3Rpb24gZmllbGQgaW5kZXg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTIz::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mw==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U0xBVkVTX0lORk8=::MDowMToweDA6MHgwOndyaXRlOjE6MDowOjEsMDoxMDoweDA6MHgwOnJlYWQ6MTowOjA6MQ==::U0xBVkVTX0lORk8="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVDT0RFUl9UWVBF::MQ==::RGVjb2RlciB0eXBl"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVGQVVMVF9DSEFOTkVM::LTE=::RGVmYXVsdCBjaGFubmVs"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVGQVVMVF9XUl9DSEFOTkVM::MA==::RGVmYXVsdCB3ciBjaGFubmVs"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVGQVVMVF9SRF9DSEFOTkVM::MQ==::RGVmYXVsdCByZCBjaGFubmVs"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVGQVVMVF9ERVNUSUQ=::MA==::RGVmYXVsdCBkZXN0aW5hdGlvbiBJRA=="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoOTM6OTEpIHJlc3BvbnNlX3N0YXR1cyg5MDo4OSkgY2FjaGUoODg6ODUpIHByb3RlY3Rpb24oODQ6ODIpIHRocmVhZF9pZCg4MTo3MCkgZGVzdF9pZCg2OSkgc3JjX2lkKDY4KSBxb3MoNjcpIGJlZ2luX2J1cnN0KDY2KSBkYXRhX3NpZGViYW5kKDY1KSBhZGRyX3NpZGViYW5kKDY0KSBidXJzdF90eXBlKDYzOjYyKSBidXJzdF9zaXplKDYxOjU5KSBidXJzdHdyYXAoNTg6NTIpIGJ5dGVfY250KDUxOjQ1KSB0cmFuc19leGNsdXNpdmUoNDQpIHRyYW5zX2xvY2soNDMpIHRyYW5zX3JlYWQoNDIpIHRyYW5zX3dyaXRlKDQxKSB0cmFuc19wb3N0ZWQoNDApIHRyYW5zX2NvbXByZXNzZWRfcmVhZCgzOSkgYWRkcigzODo5KSBieXRlZW4oOCkgZGF0YSg3OjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTIyOjEyMCkgcmVzcG9uc2Vfc3RhdHVzKDExOToxMTgpIGNhY2hlKDExNzoxMTQpIHByb3RlY3Rpb24oMTEzOjExMSkgdGhyZWFkX2lkKDExMDo5OSkgZGVzdF9pZCg5ODo5Nykgc3JjX2lkKDk2Ojk1KSBxb3MoOTQpIGJlZ2luX2J1cnN0KDkzKSBkYXRhX3NpZGViYW5kKDkyKSBhZGRyX3NpZGViYW5kKDkxKSBidXJzdF90eXBlKDkwOjg5KSBidXJzdF9zaXplKDg4Ojg2KSBidXJzdHdyYXAoODU6NzkpIGJ5dGVfY250KDc4OjcyKSB0cmFuc19leGNsdXNpdmUoNzEpIHRyYW5zX2xvY2soNzApIHRyYW5zX3JlYWQoNjkpIHRyYW5zX3dyaXRlKDY4KSB0cmFuc19wb3N0ZWQoNjcpIHRyYW5zX2NvbXByZXNzZWRfcmVhZCg2NikgYWRkcig2NTozNikgYnl0ZWVuKDM1OjMyKSBkYXRhKDMxOjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_003" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVNT1JZX0FMSUFTSU5HX0RFQ09ERQ==::MA==::TWVtb3J5IEFsaWFzaW5nIERlY29kZQ=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_NAME "aHBzX2ZwZ2FfYnJpZGdlX21tX2ludGVyY29ubmVjdF8wX3JvdXRlcl8wMDI="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_DISPLAY_NAME "TWVtb3J5IE1hcHBlZCBSb3V0ZXI="
@@ -391,23 +391,23 @@ set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -li
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "Tk9OX1NFQ1VSRURfVEFH::MSwx::Tm9uLXNlY3VyZWQgdGFncw=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U0VDVVJFRF9SQU5HRV9QQUlSUw==::MCww::TnVtYmVyIG9mIHNlY3VyZWQgcmFuZ2UgcGFpcnM="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U0VDVVJFRF9SQU5HRV9MSVNU::MCww::U2VjdXJlZCByYW5nZSBwYWlycw=="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfSA==::NDc=::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfTA==::MTg=::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fSA==::OTM=::UGFja2V0IEFYSSBwcm90ZWN0aW9uIGZpZWxkIGluZGV4IC0gaGlnaA=="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fTA==::OTE=::UGFja2V0IEFYSSBwcm90ZWN0aW9uIGZpZWxkIGluZGV4IC0gbG93"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfSA==::Nzg=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gaGlnaA=="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfTA==::Nzg=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gbG93"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1dSSVRF::NTA=::UGFja2V0IHdyaXRlIHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1JFQUQ=::NTE=::UGFja2V0IHJlYWQgdHJhbnNhY3Rpb24gZmllbGQgaW5kZXg="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTAz::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mg==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfSA==::Mzg=::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfTA==::OQ==::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBsb3c="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fSA==::ODY=::UGFja2V0IEFYSSBwcm90ZWN0aW9uIGZpZWxkIGluZGV4IC0gaGlnaA=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fTA==::ODQ=::UGFja2V0IEFYSSBwcm90ZWN0aW9uIGZpZWxkIGluZGV4IC0gbG93"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfSA==::NzE=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gaGlnaA=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfTA==::NzA=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gbG93"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1dSSVRF::NDE=::UGFja2V0IHdyaXRlIHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1JFQUQ=::NDI=::UGFja2V0IHJlYWQgdHJhbnNhY3Rpb24gZmllbGQgaW5kZXg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::OTY=::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mw==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U0xBVkVTX0lORk8=::MDowMToweDA6MHgwOndyaXRlOjE6MDowOjEsMDoxMDoweDA6MHgwOnJlYWQ6MTowOjA6MQ==::U0xBVkVTX0lORk8="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVDT0RFUl9UWVBF::MQ==::RGVjb2RlciB0eXBl"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVGQVVMVF9DSEFOTkVM::LTE=::RGVmYXVsdCBjaGFubmVs"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVGQVVMVF9XUl9DSEFOTkVM::MA==::RGVmYXVsdCB3ciBjaGFubmVs"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVGQVVMVF9SRF9DSEFOTkVM::MQ==::RGVmYXVsdCByZCBjaGFubmVs"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVGQVVMVF9ERVNUSUQ=::MA==::RGVmYXVsdCBkZXN0aW5hdGlvbiBJRA=="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTAyOjEwMCkgcmVzcG9uc2Vfc3RhdHVzKDk5Ojk4KSBjYWNoZSg5Nzo5NCkgcHJvdGVjdGlvbig5Mzo5MSkgdGhyZWFkX2lkKDkwOjc5KSBkZXN0X2lkKDc4KSBzcmNfaWQoNzcpIHFvcyg3NikgYmVnaW5fYnVyc3QoNzUpIGRhdGFfc2lkZWJhbmQoNzQpIGFkZHJfc2lkZWJhbmQoNzMpIGJ1cnN0X3R5cGUoNzI6NzEpIGJ1cnN0X3NpemUoNzA6NjgpIGJ1cnN0d3JhcCg2Nzo2MSkgYnl0ZV9jbnQoNjA6NTQpIHRyYW5zX2V4Y2x1c2l2ZSg1MykgdHJhbnNfbG9jayg1MikgdHJhbnNfcmVhZCg1MSkgdHJhbnNfd3JpdGUoNTApIHRyYW5zX3Bvc3RlZCg0OSkgdHJhbnNfY29tcHJlc3NlZF9yZWFkKDQ4KSBhZGRyKDQ3OjE4KSBieXRlZW4oMTc6MTYpIGRhdGEoMTU6MCk=::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoOTU6OTMpIHJlc3BvbnNlX3N0YXR1cyg5Mjo5MSkgY2FjaGUoOTA6ODcpIHByb3RlY3Rpb24oODY6ODQpIHRocmVhZF9pZCg4Mzo3MikgZGVzdF9pZCg3MTo3MCkgc3JjX2lkKDY5OjY4KSBxb3MoNjcpIGJlZ2luX2J1cnN0KDY2KSBkYXRhX3NpZGViYW5kKDY1KSBhZGRyX3NpZGViYW5kKDY0KSBidXJzdF90eXBlKDYzOjYyKSBidXJzdF9zaXplKDYxOjU5KSBidXJzdHdyYXAoNTg6NTIpIGJ5dGVfY250KDUxOjQ1KSB0cmFuc19leGNsdXNpdmUoNDQpIHRyYW5zX2xvY2soNDMpIHRyYW5zX3JlYWQoNDIpIHRyYW5zX3dyaXRlKDQxKSB0cmFuc19wb3N0ZWQoNDApIHRyYW5zX2NvbXByZXNzZWRfcmVhZCgzOSkgYWRkcigzODo5KSBieXRlZW4oOCkgZGF0YSg3OjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router_002" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVNT1JZX0FMSUFTSU5HX0RFQ09ERQ==::MA==::TWVtb3J5IEFsaWFzaW5nIERlY29kZQ=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_NAME "aHBzX2ZwZ2FfYnJpZGdlX21tX2ludGVyY29ubmVjdF8wX3JvdXRlcg=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_DISPLAY_NAME "TWVtb3J5IE1hcHBlZCBSb3V0ZXI="
@@ -416,31 +416,31 @@ set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -librar
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_AUTHOR "QWx0ZXJhIENvcnBvcmF0aW9u"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_VERSION "MjAuMQ=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_DESCRIPTION "Um91dGVzIGNvbW1hbmQgcGFja2V0cyBmcm9tIHRoZSBtYXN0ZXIgdG8gdGhlIHNsYXZlIGFuZCByZXNwb25zZSBwYWNrZXRzIGZyb20gdGhlIHNsYXZlIHRvIHRoZSBtYXN0ZXIu"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVTVElOQVRJT05fSUQ=::MSww::RGVzdGluYXRpb24gSUQ="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "Q0hBTk5FTF9JRA==::MDEsMTA=::QmluYXJ5IENoYW5uZWwgU3RyaW5n"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VFlQRV9PRl9UUkFOU0FDVElPTg==::Ym90aCxyZWFk::VHlwZSBvZiBUcmFuc2FjdGlvbg=="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RBUlRfQUREUkVTUw==::MHgwLDB4MTAwMDAwMA==::U3RhcnQgYWRkcmVzc2VzIChpbmNsdXNpdmUp"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "RU5EX0FERFJFU1M=::MHgxMDAwMDAwLDB4MTAwMDAwMQ==::RW5kIGFkZHJlc3NlcyAoZXhjbHVzaXZlKQ=="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "Tk9OX1NFQ1VSRURfVEFH::MSwx::Tm9uLXNlY3VyZWQgdGFncw=="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U0VDVVJFRF9SQU5HRV9QQUlSUw==::MCww::TnVtYmVyIG9mIHNlY3VyZWQgcmFuZ2UgcGFpcnM="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U0VDVVJFRF9SQU5HRV9MSVNU::MCww::U2VjdXJlZCByYW5nZSBwYWlycw=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVTVElOQVRJT05fSUQ=::MiwwLDE=::RGVzdGluYXRpb24gSUQ="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "Q0hBTk5FTF9JRA==::MTAwLDAwMSwwMTA=::QmluYXJ5IENoYW5uZWwgU3RyaW5n"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VFlQRV9PRl9UUkFOU0FDVElPTg==::Ym90aCxyZWFkLHdyaXRl::VHlwZSBvZiBUcmFuc2FjdGlvbg=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RBUlRfQUREUkVTUw==::MHgwLDB4MTAwMDAwMCwweDEwMDAwMDg=::U3RhcnQgYWRkcmVzc2VzIChpbmNsdXNpdmUp"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "RU5EX0FERFJFU1M=::MHgxMDAwMDAwLDB4MTAwMDAwMSwweDEwMDAwMTA=::RW5kIGFkZHJlc3NlcyAoZXhjbHVzaXZlKQ=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "Tk9OX1NFQ1VSRURfVEFH::MSwxLDE=::Tm9uLXNlY3VyZWQgdGFncw=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U0VDVVJFRF9SQU5HRV9QQUlSUw==::MCwwLDA=::TnVtYmVyIG9mIHNlY3VyZWQgcmFuZ2UgcGFpcnM="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U0VDVVJFRF9SQU5HRV9MSVNU::MCwwLDA=::U2VjdXJlZCByYW5nZSBwYWlycw=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfSA==::NjU=::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBoaWdo"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfTA==::MzY=::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fSA==::MTEx::UGFja2V0IEFYSSBwcm90ZWN0aW9uIGZpZWxkIGluZGV4IC0gaGlnaA=="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fTA==::MTA5::UGFja2V0IEFYSSBwcm90ZWN0aW9uIGZpZWxkIGluZGV4IC0gbG93"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfSA==::OTY=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gaGlnaA=="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfTA==::OTY=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gbG93"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fSA==::MTEz::UGFja2V0IEFYSSBwcm90ZWN0aW9uIGZpZWxkIGluZGV4IC0gaGlnaA=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fTA==::MTEx::UGFja2V0IEFYSSBwcm90ZWN0aW9uIGZpZWxkIGluZGV4IC0gbG93"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfSA==::OTg=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gaGlnaA=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfTA==::OTc=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gbG93"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1dSSVRF::Njg=::UGFja2V0IHdyaXRlIHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1JFQUQ=::Njk=::UGFja2V0IHJlYWQgdHJhbnNhY3Rpb24gZmllbGQgaW5kZXg="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTIx::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mg==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U0xBVkVTX0lORk8=::MTowMToweDA6MHgxMDAwMDAwOmJvdGg6MTowOjA6MSwwOjEwOjB4MTAwMDAwMDoweDEwMDAwMDE6cmVhZDoxOjA6MDox::U0xBVkVTX0lORk8="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTIz::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mw==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U0xBVkVTX0lORk8=::MjoxMDA6MHgwOjB4MTAwMDAwMDpib3RoOjE6MDowOjEsMDowMDE6MHgxMDAwMDAwOjB4MTAwMDAwMTpyZWFkOjE6MDowOjEsMTowMTA6MHgxMDAwMDA4OjB4MTAwMDAxMDp3cml0ZToxOjA6MDox::U0xBVkVTX0lORk8="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVDT0RFUl9UWVBF::MA==::RGVjb2RlciB0eXBl"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVGQVVMVF9DSEFOTkVM::MA==::RGVmYXVsdCBjaGFubmVs"
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVGQVVMVF9DSEFOTkVM::Mg==::RGVmYXVsdCBjaGFubmVs"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVGQVVMVF9XUl9DSEFOTkVM::LTE=::RGVmYXVsdCB3ciBjaGFubmVs"
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVGQVVMVF9SRF9DSEFOTkVM::LTE=::RGVmYXVsdCByZCBjaGFubmVs"
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVGQVVMVF9ERVNUSUQ=::MQ==::RGVmYXVsdCBkZXN0aW5hdGlvbiBJRA=="
-set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTIwOjExOCkgcmVzcG9uc2Vfc3RhdHVzKDExNzoxMTYpIGNhY2hlKDExNToxMTIpIHByb3RlY3Rpb24oMTExOjEwOSkgdGhyZWFkX2lkKDEwODo5NykgZGVzdF9pZCg5Nikgc3JjX2lkKDk1KSBxb3MoOTQpIGJlZ2luX2J1cnN0KDkzKSBkYXRhX3NpZGViYW5kKDkyKSBhZGRyX3NpZGViYW5kKDkxKSBidXJzdF90eXBlKDkwOjg5KSBidXJzdF9zaXplKDg4Ojg2KSBidXJzdHdyYXAoODU6NzkpIGJ5dGVfY250KDc4OjcyKSB0cmFuc19leGNsdXNpdmUoNzEpIHRyYW5zX2xvY2soNzApIHRyYW5zX3JlYWQoNjkpIHRyYW5zX3dyaXRlKDY4KSB0cmFuc19wb3N0ZWQoNjcpIHRyYW5zX2NvbXByZXNzZWRfcmVhZCg2NikgYWRkcig2NTozNikgYnl0ZWVuKDM1OjMyKSBkYXRhKDMxOjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "REVGQVVMVF9ERVNUSUQ=::Mg==::RGVmYXVsdCBkZXN0aW5hdGlvbiBJRA=="
+set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTIyOjEyMCkgcmVzcG9uc2Vfc3RhdHVzKDExOToxMTgpIGNhY2hlKDExNzoxMTQpIHByb3RlY3Rpb24oMTEzOjExMSkgdGhyZWFkX2lkKDExMDo5OSkgZGVzdF9pZCg5ODo5Nykgc3JjX2lkKDk2Ojk1KSBxb3MoOTQpIGJlZ2luX2J1cnN0KDkzKSBkYXRhX3NpZGViYW5kKDkyKSBhZGRyX3NpZGViYW5kKDkxKSBidXJzdF90eXBlKDkwOjg5KSBidXJzdF9zaXplKDg4Ojg2KSBidXJzdHdyYXAoODU6NzkpIGJ5dGVfY250KDc4OjcyKSB0cmFuc19leGNsdXNpdmUoNzEpIHRyYW5zX2xvY2soNzApIHRyYW5zX3JlYWQoNjkpIHRyYW5zX3dyaXRlKDY4KSB0cmFuc19wb3N0ZWQoNjcpIHRyYW5zX2NvbXByZXNzZWRfcmVhZCg2NikgYWRkcig2NTozNikgYnl0ZWVuKDM1OjMyKSBkYXRhKDMxOjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
 set_global_assignment -entity "hps_fpga_bridge_mm_interconnect_0_router" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVNT1JZX0FMSUFTSU5HX0RFQ09ERQ==::MA==::TWVtb3J5IEFsaWFzaW5nIERlY29kZQ=="
 set_global_assignment -entity "altera_avalon_sc_fifo" -library "hps_fpga_bridge" -name IP_COMPONENT_NAME "YWx0ZXJhX2F2YWxvbl9zY19maWZv"
 set_global_assignment -entity "altera_avalon_sc_fifo" -library "hps_fpga_bridge" -name IP_COMPONENT_DISPLAY_NAME "QXZhbG9uLVNUIFNpbmdsZSBDbG9jayBGSUZP"
@@ -449,7 +449,7 @@ set_global_assignment -entity "altera_avalon_sc_fifo" -library "hps_fpga_bridge"
 set_global_assignment -entity "altera_avalon_sc_fifo" -library "hps_fpga_bridge" -name IP_COMPONENT_AUTHOR "QWx0ZXJhIENvcnBvcmF0aW9u"
 set_global_assignment -entity "altera_avalon_sc_fifo" -library "hps_fpga_bridge" -name IP_COMPONENT_VERSION "MjAuMQ=="
 set_global_assignment -entity "altera_avalon_sc_fifo" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1lNQk9MU19QRVJfQkVBVA==::MQ==::U3ltYm9scyBwZXIgYmVhdA=="
-set_global_assignment -entity "altera_avalon_sc_fifo" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QklUU19QRVJfU1lNQk9M::MTA0::Qml0cyBwZXIgc3ltYm9s"
+set_global_assignment -entity "altera_avalon_sc_fifo" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QklUU19QRVJfU1lNQk9M::OTc=::Qml0cyBwZXIgc3ltYm9s"
 set_global_assignment -entity "altera_avalon_sc_fifo" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "RklGT19ERVBUSA==::Mg==::RklGTyBkZXB0aA=="
 set_global_assignment -entity "altera_avalon_sc_fifo" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "Q0hBTk5FTF9XSURUSA==::MA==::Q2hhbm5lbCB3aWR0aA=="
 set_global_assignment -entity "altera_avalon_sc_fifo" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "RVJST1JfV0lEVEg=::MA==::RXJyb3Igd2lkdGg="
@@ -469,46 +469,46 @@ set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bri
 set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_AUTHOR "QWx0ZXJhIENvcnBvcmF0aW9u"
 set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_VERSION "MjAuMQ=="
 set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_DESCRIPTION "QWNjZXB0cyBjb21tYW5kIHBhY2tldHMgYW5kIGlzc3VlcyB0aGUgcmVzdWx0aW5nIHRyYW5zYWN0aW9ucyB0byB0aGUgQXZhbG9uIGludGVyZmFjZS4gUmVmZXIgdG8gdGhlIEF2YWxvbiBJbnRlcmZhY2UgU3BlY2lmaWNhdGlvbnMgKGh0dHA6Ly93d3cuYWx0ZXJhLmNvbS9saXRlcmF0dXJlL21hbnVhbC9tbmxfYXZhbG9uX3NwZWMucGRmKSBmb3IgZXhwbGFuYXRpb25zIG9mIHRoZSBidXJzdGluZyBwcm9wZXJ0aWVzLg=="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX09SSV9CVVJTVF9TSVpFX0g=::MTAy::UGFja2V0IG9yaWdpbmFsIGJ1cnN0IHNpemUgZmllbGQgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX09SSV9CVVJTVF9TSVpFX0w=::MTAw::UGFja2V0IG9yaWdpbmFsIGJ1cnN0IHNpemUgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1JFU1BPTlNFX1NUQVRVU19I::OTk=::UGFja2V0IHJlc3BvbnNlIHN0YXR1cyBmaWVsZCBpbmRleCAtIGhpZ2g="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1JFU1BPTlNFX1NUQVRVU19M::OTg=::UGFja2V0IHJlc3BvbnNlIHN0YXR1cyBmaWVsZCBpbmRleCAtIGxvdw=="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUX1NJWkVfSA==::NzA=::UGFja2V0IGJ1cnN0c2l6ZSBmaWVsZCBpbmRleCAtIGhpZ2g="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUX1NJWkVfTA==::Njg=::UGFja2V0IGJ1cnN0c2l6ZSBmaWVsZCBpbmRleCAtIGxvdw=="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX0xPQ0s=::NTI=::UGFja2V0IGxvY2sgdHJhbnNhY3Rpb24gZmllbGQgaW5kZXg="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JFR0lOX0JVUlNU::NzU=::UGFja2V0IGJlZ2luIGJ1cnN0IGZpZWxkIGluZGV4"
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fSA==::OTM=::UGFja2V0IHByb3RlY3Rpb24gZmllbGQgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fTA==::OTE=::UGFja2V0IHByb3RlY3Rpb24gZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUV1JBUF9I::Njc=::UGFja2V0IGJ1cnN0d3JhcCBmaWVsZCBpbmRleCAtIGhpZ2g="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUV1JBUF9M::NjE=::UGFja2V0IGJ1cnN0d3JhcCBmaWVsZCBpbmRleCAtIGxvdw=="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVfQ05UX0g=::NjA=::UGFja2V0IGJ5dGUgY291bnQgZmllbGQgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVfQ05UX0w=::NTQ=::UGFja2V0IGJ5dGUgY291bnQgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfSA==::NDc=::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfTA==::MTg=::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX0NPTVBSRVNTRURfUkVBRA==::NDg=::UGFja2V0IGNvbXByZXNzZWQgcmVhZCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleA=="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1BPU1RFRA==::NDk=::UGFja2V0IHBvc3RlZCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleA=="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1dSSVRF::NTA=::UGFja2V0IHdyaXRlIHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4"
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1JFQUQ=::NTE=::UGFja2V0IHJlYWQgdHJhbnNhY3Rpb24gZmllbGQgaW5kZXg="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RBVEFfSA==::MTU=::UGFja2V0IGRhdGEgZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX09SSV9CVVJTVF9TSVpFX0g=::OTU=::UGFja2V0IG9yaWdpbmFsIGJ1cnN0IHNpemUgZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX09SSV9CVVJTVF9TSVpFX0w=::OTM=::UGFja2V0IG9yaWdpbmFsIGJ1cnN0IHNpemUgZmllbGQgaW5kZXggLSBsb3c="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1JFU1BPTlNFX1NUQVRVU19I::OTI=::UGFja2V0IHJlc3BvbnNlIHN0YXR1cyBmaWVsZCBpbmRleCAtIGhpZ2g="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1JFU1BPTlNFX1NUQVRVU19M::OTE=::UGFja2V0IHJlc3BvbnNlIHN0YXR1cyBmaWVsZCBpbmRleCAtIGxvdw=="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUX1NJWkVfSA==::NjE=::UGFja2V0IGJ1cnN0c2l6ZSBmaWVsZCBpbmRleCAtIGhpZ2g="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUX1NJWkVfTA==::NTk=::UGFja2V0IGJ1cnN0c2l6ZSBmaWVsZCBpbmRleCAtIGxvdw=="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX0xPQ0s=::NDM=::UGFja2V0IGxvY2sgdHJhbnNhY3Rpb24gZmllbGQgaW5kZXg="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JFR0lOX0JVUlNU::NjY=::UGFja2V0IGJlZ2luIGJ1cnN0IGZpZWxkIGluZGV4"
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fSA==::ODY=::UGFja2V0IHByb3RlY3Rpb24gZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fTA==::ODQ=::UGFja2V0IHByb3RlY3Rpb24gZmllbGQgaW5kZXggLSBsb3c="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUV1JBUF9I::NTg=::UGFja2V0IGJ1cnN0d3JhcCBmaWVsZCBpbmRleCAtIGhpZ2g="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUV1JBUF9M::NTI=::UGFja2V0IGJ1cnN0d3JhcCBmaWVsZCBpbmRleCAtIGxvdw=="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVfQ05UX0g=::NTE=::UGFja2V0IGJ5dGUgY291bnQgZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVfQ05UX0w=::NDU=::UGFja2V0IGJ5dGUgY291bnQgZmllbGQgaW5kZXggLSBsb3c="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfSA==::Mzg=::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfTA==::OQ==::UGFja2V0IGFkZHJlc3MgZmllbGQgaW5kZXggLSBsb3c="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX0NPTVBSRVNTRURfUkVBRA==::Mzk=::UGFja2V0IGNvbXByZXNzZWQgcmVhZCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleA=="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1BPU1RFRA==::NDA=::UGFja2V0IHBvc3RlZCB0cmFuc2FjdGlvbiBmaWVsZCBpbmRleA=="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1dSSVRF::NDE=::UGFja2V0IHdyaXRlIHRyYW5zYWN0aW9uIGZpZWxkIGluZGV4"
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RSQU5TX1JFQUQ=::NDI=::UGFja2V0IHJlYWQgdHJhbnNhY3Rpb24gZmllbGQgaW5kZXg="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RBVEFfSA==::Nw==::UGFja2V0IGRhdGEgZmllbGQgaW5kZXggLSBoaWdo"
 set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RBVEFfTA==::MA==::UGFja2V0IGRhdGEgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVFTl9I::MTc=::UGFja2V0IGJ5dGVlbmFibGUgZmllbGQgaW5kZXggLSBoaWdo"
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVFTl9M::MTY=::UGFja2V0IGJ5dGVlbmFibGUgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1NSQ19JRF9I::Nzc=::UGFja2V0IHNvdXJjZSBpZCBmaWVsZCBpbmRleCAtIGhpZ2g="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1NSQ19JRF9M::Nzc=::UGFja2V0IHNvdXJjZSBpZCBmaWVsZCBpbmRleCAtIGxvdw=="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfSA==::Nzg=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gaGlnaA=="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfTA==::Nzg=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gbG93"
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVFTl9I::OA==::UGFja2V0IGJ5dGVlbmFibGUgZmllbGQgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVFTl9M::OA==::UGFja2V0IGJ5dGVlbmFibGUgZmllbGQgaW5kZXggLSBsb3c="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1NSQ19JRF9I::Njk=::UGFja2V0IHNvdXJjZSBpZCBmaWVsZCBpbmRleCAtIGhpZ2g="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1NSQ19JRF9M::Njg=::UGFja2V0IHNvdXJjZSBpZCBmaWVsZCBpbmRleCAtIGxvdw=="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfSA==::NzE=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gaGlnaA=="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfTA==::NzA=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gbG93"
 set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1NZTUJPTF9X::OA==::UGFja2V0IHN5bWJvbCB3aWR0aA=="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mg==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTAz::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mw==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::OTY=::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
 set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZTX0JVUlNUQ09VTlRfU1lNQk9MUw==::MA==::YnVyc3Rjb3VudFN5bWJvbHM="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZTX0JVUlNUQ09VTlRfVw==::Mg==::YnVyc3Rjb3VudCB3aWR0aA=="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZTX0JVUlNUQ09VTlRfVw==::MQ==::YnVyc3Rjb3VudCB3aWR0aA=="
 set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfTElORVdSQVBCVVJTVFM=::MA==::bGluZXdyYXBCdXJzdHM="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTAyOjEwMCkgcmVzcG9uc2Vfc3RhdHVzKDk5Ojk4KSBjYWNoZSg5Nzo5NCkgcHJvdGVjdGlvbig5Mzo5MSkgdGhyZWFkX2lkKDkwOjc5KSBkZXN0X2lkKDc4KSBzcmNfaWQoNzcpIHFvcyg3NikgYmVnaW5fYnVyc3QoNzUpIGRhdGFfc2lkZWJhbmQoNzQpIGFkZHJfc2lkZWJhbmQoNzMpIGJ1cnN0X3R5cGUoNzI6NzEpIGJ1cnN0X3NpemUoNzA6NjgpIGJ1cnN0d3JhcCg2Nzo2MSkgYnl0ZV9jbnQoNjA6NTQpIHRyYW5zX2V4Y2x1c2l2ZSg1MykgdHJhbnNfbG9jayg1MikgdHJhbnNfcmVhZCg1MSkgdHJhbnNfd3JpdGUoNTApIHRyYW5zX3Bvc3RlZCg0OSkgdHJhbnNfY29tcHJlc3NlZF9yZWFkKDQ4KSBhZGRyKDQ3OjE4KSBieXRlZW4oMTc6MTYpIGRhdGEoMTU6MCk=::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoOTU6OTMpIHJlc3BvbnNlX3N0YXR1cyg5Mjo5MSkgY2FjaGUoOTA6ODcpIHByb3RlY3Rpb24oODY6ODQpIHRocmVhZF9pZCg4Mzo3MikgZGVzdF9pZCg3MTo3MCkgc3JjX2lkKDY5OjY4KSBxb3MoNjcpIGJlZ2luX2J1cnN0KDY2KSBkYXRhX3NpZGViYW5kKDY1KSBhZGRyX3NpZGViYW5kKDY0KSBidXJzdF90eXBlKDYzOjYyKSBidXJzdF9zaXplKDYxOjU5KSBidXJzdHdyYXAoNTg6NTIpIGJ5dGVfY250KDUxOjQ1KSB0cmFuc19leGNsdXNpdmUoNDQpIHRyYW5zX2xvY2soNDMpIHRyYW5zX3JlYWQoNDIpIHRyYW5zX3dyaXRlKDQxKSB0cmFuc19wb3N0ZWQoNDApIHRyYW5zX2NvbXByZXNzZWRfcmVhZCgzOSkgYWRkcigzODo5KSBieXRlZW4oOCkgZGF0YSg3OjAp::TWVybGluIHBhY2tldCBmb3JtYXQgZGVzY3JpcHRvcg=="
 set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1VQUFJFU1NfMF9CWVRFRU5fQ01E::MQ==::U3VwcHJlc3MgMC1ieXRlZW5hYmxlIHRyYW5zYWN0aW9ucw=="
 set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UFJFVkVOVF9GSUZPX09WRVJGTE9X::MQ==::UHJldmVudCBGSUZPIG92ZXJmbG93"
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUFYX0JZVEVfQ05U::Mg==::TWF4aW11bSBieXRlLWNvdW50IHZhbHVl"
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUFYX0JZVEVfQ05U::MQ==::TWF4aW11bSBieXRlLWNvdW50IHZhbHVl"
 set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUFYX0JVUlNUV1JBUA==::MTI3::TWF4aW11bSBidXJzdHdyYXAgdmFsdWU="
-set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SUQ=::MQ==::U2xhdmUgSUQ="
+set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SUQ=::MA==::U2xhdmUgSUQ="
 set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX1JFQURSRVNQT05TRQ==::MA==::VXNlIHJlYWRyZXNwb25zZQ=="
 set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX1dSSVRFUkVTUE9OU0U=::MA==::VXNlIHdyaXRlcmVzcG9uc2U="
 set_global_assignment -entity "altera_merlin_slave_agent" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "RUNDX0VOQUJMRQ==::MA==::RUNDX0VOQUJMRQ=="
@@ -532,18 +532,18 @@ set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_b
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "V1JJVEVfSVNTVUlOR19DQVBBQklMSVRZ::OA==::TWFzdGVyIHdyaXRlIG91dHN0YW5kaW5nIHRyYW5zYWN0aW9ucw=="
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UkVBRF9JU1NVSU5HX0NBUEFCSUxJVFk=::OA==::TWFzdGVyIHJlYWQgb3V0c3RhbmRpbmcgdHJhbnNhY3Rpb25z"
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JFR0lOX0JVUlNU::OTM=::UGFja2V0IGJlZ2luIGJ1cnN0IGZpZWxkIGluZGV4"
-set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0NBQ0hFX0g=::MTE1::UGFja2V0IEFYSSBjYWNoZSBmaWVsZCBpbmRleCAtIGhpZ2g="
-set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0NBQ0hFX0w=::MTEy::UGFja2V0IEFYSSBjYWNoZSBmaWVsZCBpbmRleCAtIGxvdw=="
+set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0NBQ0hFX0g=::MTE3::UGFja2V0IEFYSSBjYWNoZSBmaWVsZCBpbmRleCAtIGhpZ2g="
+set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0NBQ0hFX0w=::MTE0::UGFja2V0IEFYSSBjYWNoZSBmaWVsZCBpbmRleCAtIGxvdw=="
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfU0lERUJBTkRfSA==::OTE=::UGFja2V0IEFYSSBhZGRyZXNzIHNpZGViYW5kIGZpZWxkIGluZGV4IC0gaGlnaA=="
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0FERFJfU0lERUJBTkRfTA==::OTE=::UGFja2V0IEFYSSBhZGRyZXNzIHNpZGViYW5kIGZpZWxkIGluZGV4IC0gbG93"
-set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fSA==::MTEx::UGFja2V0IEFYSSBwcm90ZWN0aW9uIGZpZWxkIGluZGV4IC0gaGlnaA=="
-set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fTA==::MTA5::UGFja2V0IEFYSSBwcm90ZWN0aW9uIGZpZWxkIGluZGV4IC0gbG93"
+set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fSA==::MTEz::UGFja2V0IEFYSSBwcm90ZWN0aW9uIGZpZWxkIGluZGV4IC0gaGlnaA=="
+set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1BST1RFQ1RJT05fTA==::MTEx::UGFja2V0IEFYSSBwcm90ZWN0aW9uIGZpZWxkIGluZGV4IC0gbG93"
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUX1NJWkVfSA==::ODg=::UGFja2V0IEFYSSBidXJzdCBzaXplIGZpZWxkIGluZGV4IC0gaGlnaA=="
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUX1NJWkVfTA==::ODY=::UGFja2V0IEFYSSBidXJzdCBzaXplIGZpZWxkIGluZGV4IC0gbG93"
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUX1RZUEVfSA==::OTA=::UGFja2V0IEFYSSBidXJzdCB0eXBlIGZpZWxkIGluZGV4IC0gaGlnaA=="
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUX1RZUEVfTA==::ODk=::UGFja2V0IEFYSSBidXJzdCB0eXBlIGZpZWxkIGluZGV4IC0gbG93"
-set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1JFU1BPTlNFX1NUQVRVU19M::MTE2::UGFja2V0IHJlc3BvbnNlIGZpZWxkIGluZGV4IC0gbG93"
-set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1JFU1BPTlNFX1NUQVRVU19I::MTE3::UGFja2V0IHJlc3BvbnNlIGZpZWxkIGluZGV4IC0gaGlnaA=="
+set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1JFU1BPTlNFX1NUQVRVU19M::MTE4::UGFja2V0IHJlc3BvbnNlIGZpZWxkIGluZGV4IC0gbG93"
+set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1JFU1BPTlNFX1NUQVRVU19I::MTE5::UGFja2V0IHJlc3BvbnNlIGZpZWxkIGluZGV4IC0gaGlnaA=="
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUV1JBUF9I::ODU=::UGFja2V0IEFYSSBidXJzdHdyYXAgZmllbGQgaW5kZXggLSBoaWdo"
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JVUlNUV1JBUF9M::Nzk=::UGFja2V0IEFYSSBidXJzdHdyYXAgZmllbGQgaW5kZXggLSBsb3c="
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVfQ05UX0g=::Nzg=::UGFja2V0IGJ5dGUgY291bnQgZmllbGQgaW5kZXggLSBoaWdo"
@@ -560,22 +560,22 @@ set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_b
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RBVEFfTA==::MA==::UGFja2V0IEFYSSBkYXRhIGZpZWxkIGluZGV4IC0gbG93"
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVFTl9I::MzU=::UGFja2V0IGJ5dGVlbmFia2UgZmllbGQgaW5kZXggLSBoaWdo"
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0JZVEVFTl9M::MzI=::UGFja2V0IGJ5dGVlbmFia2UgZmllbGQgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1NSQ19JRF9I::OTU=::UGFja2V0IHNvdXJjZSBpZCBmaWVsZCBpbmRleCAtIGhpZ2g="
+set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1NSQ19JRF9I::OTY=::UGFja2V0IHNvdXJjZSBpZCBmaWVsZCBpbmRleCAtIGhpZ2g="
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1NSQ19JRF9M::OTU=::UGFja2V0IHNvdXJjZSBpZCBmaWVsZCBpbmRleCAtIGxvdw=="
-set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfSA==::OTY=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gaGlnaA=="
-set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfTA==::OTY=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gbG93"
-set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RIUkVBRF9JRF9I::MTA4::UGFja2V0IHRocmVhZCBpZCBpbmRleCAtIGhpZ2g="
-set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RIUkVBRF9JRF9M::OTc=::UGFja2V0IHRocmVhZCBpZCBpbmRleCAtIGxvdw=="
+set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfSA==::OTg=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gaGlnaA=="
+set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RFU1RfSURfTA==::OTc=::UGFja2V0IGRlc3RpbmF0aW9uIGlkIGZpZWxkIGluZGV4IC0gbG93"
+set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RIUkVBRF9JRF9I::MTEw::UGFja2V0IHRocmVhZCBpZCBpbmRleCAtIGhpZ2g="
+set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1RIUkVBRF9JRF9M::OTk=::UGFja2V0IHRocmVhZCBpZCBpbmRleCAtIGxvdw=="
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1FPU19M::OTQ=::UGFja2V0IFFvUyBpbmRleCAtIGxvdw=="
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX1FPU19I::OTQ=::UGFja2V0IFFvUyBpbmRleCAtIGhpZ2g="
-set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX09SSV9CVVJTVF9TSVpFX0w=::MTE4::UGFja2V0IG9yaWdpbmFsIGJ1cnN0IHNpemUgaW5kZXggLSBsb3c="
-set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX09SSV9CVVJTVF9TSVpFX0g=::MTIw::UGFja2V0IG9yaWdpbmFsIGJ1cnN0IHNpemUgaW5kZXggLSBoaWdo"
+set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX09SSV9CVVJTVF9TSVpFX0w=::MTIw::UGFja2V0IG9yaWdpbmFsIGJ1cnN0IHNpemUgaW5kZXggLSBsb3c="
+set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX09SSV9CVVJTVF9TSVpFX0g=::MTIy::UGFja2V0IG9yaWdpbmFsIGJ1cnN0IHNpemUgaW5kZXggLSBoaWdo"
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RBVEFfU0lERUJBTkRfSA==::OTI=::UGFja2V0IEFYSSBkYXRhIHNpZGViYW5kIGZpZWxkIGluZGV4IC0gaGlnaA=="
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "UEtUX0RBVEFfU0lERUJBTkRfTA==::OTI=::UGFja2V0IEFYSSBkYXRhIHNpZGViYW5kIGZpZWxkIGluZGV4IC0gbG93"
-set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTIx::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
-set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mg==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
+set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfREFUQV9X::MTIz::U3RyZWFtaW5nIGRhdGEgd2lkdGg="
+set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "U1RfQ0hBTk5FTF9X::Mw==::U3RyZWFtaW5nIGNoYW5uZWwgd2lkdGg="
 set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "SUQ=::MA==::TWFzdGVyIElE"
-set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTIwOjExOCkgcmVzcG9uc2Vfc3RhdHVzKDExNzoxMTYpIGNhY2hlKDExNToxMTIpIHByb3RlY3Rpb24oMTExOjEwOSkgdGhyZWFkX2lkKDEwODo5NykgZGVzdF9pZCg5Nikgc3JjX2lkKDk1KSBxb3MoOTQpIGJlZ2luX2J1cnN0KDkzKSBkYXRhX3NpZGViYW5kKDkyKSBhZGRyX3NpZGViYW5kKDkxKSBidXJzdF90eXBlKDkwOjg5KSBidXJzdF9zaXplKDg4Ojg2KSBidXJzdHdyYXAoODU6NzkpIGJ5dGVfY250KDc4OjcyKSB0cmFuc19leGNsdXNpdmUoNzEpIHRyYW5zX2xvY2soNzApIHRyYW5zX3JlYWQoNjkpIHRyYW5zX3dyaXRlKDY4KSB0cmFuc19wb3N0ZWQoNjcpIHRyYW5zX2NvbXByZXNzZWRfcmVhZCg2NikgYWRkcig2NTozNikgYnl0ZWVuKDM1OjMyKSBkYXRhKDMxOjAp::TWVybGluIHBhY2tldCBmb3JtYXQ="
+set_global_assignment -entity "altera_merlin_axi_master_ni" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "TUVSTElOX1BBQ0tFVF9GT1JNQVQ=::b3JpX2J1cnN0X3NpemUoMTIyOjEyMCkgcmVzcG9uc2Vfc3RhdHVzKDExOToxMTgpIGNhY2hlKDExNzoxMTQpIHByb3RlY3Rpb24oMTEzOjExMSkgdGhyZWFkX2lkKDExMDo5OSkgZGVzdF9pZCg5ODo5Nykgc3JjX2lkKDk2Ojk1KSBxb3MoOTQpIGJlZ2luX2J1cnN0KDkzKSBkYXRhX3NpZGViYW5kKDkyKSBhZGRyX3NpZGViYW5kKDkxKSBidXJzdF90eXBlKDkwOjg5KSBidXJzdF9zaXplKDg4Ojg2KSBidXJzdHdyYXAoODU6NzkpIGJ5dGVfY250KDc4OjcyKSB0cmFuc19leGNsdXNpdmUoNzEpIHRyYW5zX2xvY2soNzApIHRyYW5zX3JlYWQoNjkpIHRyYW5zX3dyaXRlKDY4KSB0cmFuc19wb3N0ZWQoNjcpIHRyYW5zX2NvbXByZXNzZWRfcmVhZCg2NikgYWRkcig2NTozNikgYnl0ZWVuKDM1OjMyKSBkYXRhKDMxOjAp::TWVybGluIHBhY2tldCBmb3JtYXQ="
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_NAME "YWx0ZXJhX21lcmxpbl9zbGF2ZV90cmFuc2xhdG9y"
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_DISPLAY_NAME "QXZhbG9uIE1NIFNsYXZlIFRyYW5zbGF0b3I="
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_REPORT_HIERARCHY "Off"
@@ -583,14 +583,14 @@ set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpg
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_AUTHOR "QWx0ZXJhIENvcnBvcmF0aW9u"
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_VERSION "MjAuMQ=="
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_DESCRIPTION "Q29udmVydHMgdGhlIEF2YWxvbi1NTSBzbGF2ZSBpbnRlcmZhY2UgdG8gYSBzaW1wbGlmaWVkIHJlcHJlc2VudGF0aW9uIHRoYXQgdGhlIFFzeXMgbmV0d29yayB1c2VzLiBSZWZlciB0byB0aGUgQXZhbG9uIEludGVyZmFjZSBTcGVjaWZpY2F0aW9ucyAoaHR0cDovL3d3dy5hbHRlcmEuY29tL2xpdGVyYXR1cmUvbWFudWFsL21ubF9hdmFsb25fc3BlYy5wZGYpIGZvciBkZWZpbml0aW9ucyBvZiB0aGUgQXZhbG9uLU1NIHNpZ25hbHMgYW5kIGV4cGxhbmF0aW9ucyBvZiB0aGUgYnVyc3RpbmcgcHJvcGVydGllcyBhbmQgYWRkcmVzcyBhbGlnbm1lbnQu"
-set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfQUREUkVTU19X::MjM=::Q29tcG9uZW50IGFkZHJlc3Mgd2lkdGg="
-set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfREFUQV9X::MTY=::Q29tcG9uZW50IERhdGEgd2lkdGg="
-set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VUFWX0RBVEFfVw==::MTY=::TmV0d29yayBEYXRhIHdpZHRo"
+set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfQUREUkVTU19X::MQ==::Q29tcG9uZW50IGFkZHJlc3Mgd2lkdGg="
+set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfREFUQV9X::OA==::Q29tcG9uZW50IERhdGEgd2lkdGg="
+set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VUFWX0RBVEFfVw==::OA==::TmV0d29yayBEYXRhIHdpZHRo"
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfQlVSU1RDT1VOVF9X::MQ==::Q29tcG9uZW50IGJ1cnN0Y291bnQgd2lkdGg="
-set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfQllURUVOQUJMRV9X::Mg==::Q29tcG9uZW50IGJ5dGVlbmFibGUgd2lkdGg="
-set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VUFWX0JZVEVFTkFCTEVfVw==::Mg==::TmV0d29yayBieXRlZW5hYmxlIHdpZHRo"
+set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfQllURUVOQUJMRV9X::MQ==::Q29tcG9uZW50IGJ5dGVlbmFibGUgd2lkdGg="
+set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VUFWX0JZVEVFTkFCTEVfVw==::MQ==::TmV0d29yayBieXRlZW5hYmxlIHdpZHRo"
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VUFWX0FERFJFU1NfVw==::MzA=::TmV0d29yayBhZGRyZXNzIHdpZHRo"
-set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VUFWX0JVUlNUQ09VTlRfVw==::Mg==::TmV0d29yayBidXJzdGNvdW50IHdpZHRo"
+set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VUFWX0JVUlNUQ09VTlRfVw==::MQ==::TmV0d29yayBidXJzdGNvdW50IHdpZHRo"
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfUkVBRExBVEVOQ1k=::MA==::cmVhZExhdGVuY3k="
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfU0VUVVBfV0FJVA==::MA==::c2V0dXBUaW1l"
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfV1JJVEVfV0FJVA==::MA==::d3JpdGVXYWl0VGltZQ=="
@@ -598,14 +598,14 @@ set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpg
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfREFUQV9IT0xE::MA==::SG9sZCB0aW1l"
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfVElNSU5HX1VOSVRT::MQ==::VGltaW5nIHVuaXRz"
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX1JFQUREQVRB::MQ==::VXNlIHJlYWRkYXRh"
-set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX1dSSVRFREFUQQ==::MQ==::VXNlIHdyaXRlZGF0YQ=="
+set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX1dSSVRFREFUQQ==::MA==::VXNlIHdyaXRlZGF0YQ=="
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX1JFQUQ=::MQ==::VXNlIHJlYWQ="
-set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX1dSSVRF::MQ==::VXNlIHdyaXRl"
+set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX1dSSVRF::MA==::VXNlIHdyaXRl"
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX0JFR0lOQlVSU1RUUkFOU0ZFUg==::MA==::VXNlIGJlZ2luYnVyc3R0cmFuc2Zlcg=="
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX0JFR0lOVFJBTlNGRVI=::MA==::VXNlIGJlZ2ludHJhbnNmZXI="
-set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX0JZVEVFTkFCTEU=::MQ==::VXNlIGJ5dGVlbmFibGU="
-set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX0NISVBTRUxFQ1Q=::MQ==::VXNlIGNoaXBzZWxlY3Q="
-set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX0FERFJFU1M=::MQ==::VXNlIGFkZHJlc3M="
+set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX0JZVEVFTkFCTEU=::MA==::VXNlIGJ5dGVlbmFibGU="
+set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX0NISVBTRUxFQ1Q=::MA==::VXNlIGNoaXBzZWxlY3Q="
+set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX0FERFJFU1M=::MA==::VXNlIGFkZHJlc3M="
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX0JVUlNUQ09VTlQ=::MA==::VXNlIGJ1cnN0Y291bnQ="
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX1JFQUREQVRBVkFMSUQ=::MA==::VXNlIHJlYWRkYXRhdmFsaWQ="
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX1dBSVRSRVFVRVNU::MQ==::VXNlIHdhaXRyZXF1ZXN0"
@@ -617,7 +617,7 @@ set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpg
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX0RFQlVHQUNDRVNT::MA==::VXNlIGRlYnVnYWNjZXNz"
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX1JFQURSRVNQT05TRQ==::MA==::VXNlIHJlYWRyZXNwb25zZQ=="
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "VVNFX1dSSVRFUkVTUE9OU0U=::MA==::VXNlIHdyaXRlcmVzcG9uc2U="
-set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfU1lNQk9MU19QRVJfV09SRA==::Mg==::U3ltYm9scyBwZXIgd29yZA=="
+set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfU1lNQk9MU19QRVJfV09SRA==::MQ==::U3ltYm9scyBwZXIgd29yZA=="
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfQUREUkVTU19TWU1CT0xT::MA==::QWRkcmVzcyBzeW1ib2xz"
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfQlVSU1RDT1VOVF9TWU1CT0xT::MA==::QnVyc3Rjb3VudCBzeW1ib2xz"
 set_global_assignment -entity "altera_merlin_slave_translator" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "QVZfQ09OU1RBTlRfQlVSU1RfQkVIQVZJT1I=::MA==::Q29tcG9uZW50IGNvbnN0YW50QnVyc3RCZWhhdmlvcg=="
@@ -6320,6 +6320,11 @@ set_global_assignment -entity "hps_fpga_bridge_hps_0_fpga_interfaces" -library "
 set_global_assignment -entity "hps_fpga_bridge_hps_0_fpga_interfaces" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aW50ZXJmYWNlRGVmaW5pdGlvbg==::::aW50ZXJmYWNlRGVmaW5pdGlvbg=="
 set_global_assignment -entity "hps_fpga_bridge_hps_0_fpga_interfaces" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "aWdub3JlU2ltdWxhdGlvbg==::ZmFsc2U=::aWdub3JlU2ltdWxhdGlvbg=="
 set_global_assignment -entity "hps_fpga_bridge_hps_0_fpga_interfaces" -library "hps_fpga_bridge" -name IP_COMPONENT_PARAMETER "ZGV2aWNl::NUNTRUJBNlUyM0k3::ZGV2aWNl"
+set_global_assignment -entity "arm_regs_avalon" -library "hps_fpga_bridge" -name IP_COMPONENT_NAME "YXJtX3JlZ3NfYXZhbG9u"
+set_global_assignment -entity "arm_regs_avalon" -library "hps_fpga_bridge" -name IP_COMPONENT_DISPLAY_NAME "YXJtX3JlZ3NfYXZhbG9u"
+set_global_assignment -entity "arm_regs_avalon" -library "hps_fpga_bridge" -name IP_COMPONENT_REPORT_HIERARCHY "Off"
+set_global_assignment -entity "arm_regs_avalon" -library "hps_fpga_bridge" -name IP_COMPONENT_INTERNAL "Off"
+set_global_assignment -entity "arm_regs_avalon" -library "hps_fpga_bridge" -name IP_COMPONENT_VERSION "MS4w"
 set_global_assignment -entity "arm_irq_avalon" -library "hps_fpga_bridge" -name IP_COMPONENT_NAME "YXJtX2lycV9hdmFsb24="
 set_global_assignment -entity "arm_irq_avalon" -library "hps_fpga_bridge" -name IP_COMPONENT_DISPLAY_NAME "YXJtX2lycV9hdmFsb24="
 set_global_assignment -entity "arm_irq_avalon" -library "hps_fpga_bridge" -name IP_COMPONENT_REPORT_HIERARCHY "Off"
@@ -6421,6 +6426,7 @@ set_global_assignment -library "hps_fpga_bridge" -name SYSTEMVERILOG_FILE [file
 set_instance_assignment -entity "hps_fpga_bridge_hps_0_hps_io_border" -library "hps_fpga_bridge" -name HPS_ISW_FILE [file join $::quartus(qip_path) "submodules/hps.pre.xml"]
 set_global_assignment -library "hps_fpga_bridge" -name MISC_FILE [file join $::quartus(qip_path) "submodules/hps.pre.xml"]
 set_global_assignment -library "hps_fpga_bridge" -name SYSTEMVERILOG_FILE [file join $::quartus(qip_path) "submodules/hps_fpga_bridge_hps_0_fpga_interfaces.sv"]
+set_global_assignment -library "hps_fpga_bridge" -name VHDL_FILE [file join $::quartus(qip_path) "submodules/arm_regs_avalon.vhd"]
 set_global_assignment -library "hps_fpga_bridge" -name VHDL_FILE [file join $::quartus(qip_path) "submodules/arm_irq_avalon.vhd"]
 
 set_global_assignment -entity "altera_reset_controller" -library "hps_fpga_bridge" -name IP_TOOL_NAME "altera_reset_controller"
diff --git a/sys/hps_fpga_bridge/synthesis/hps_fpga_bridge.v b/sys/hps_fpga_bridge/synthesis/hps_fpga_bridge.v
index 652550c..a727397 100644
--- a/sys/hps_fpga_bridge/synthesis/hps_fpga_bridge.v
+++ b/sys/hps_fpga_bridge/synthesis/hps_fpga_bridge.v
@@ -5,35 +5,39 @@
 `timescale 1 ps / 1 ps
 module hps_fpga_bridge (
 		input wire hps_0_h2f_reset_reset,
-		output wire [22:0] avalon1_hybridcpu_address,    //   avalon1.hybridcpu_address
-		output wire [1:0]  avalon1_hybridcpu_byteenable, //          .hybridcpu_byteenable
-		input  wire        avalon1_hybridcpu_complete,   //          .hybridcpu_complete
-		output wire        avalon1_hybridcpu_read,       //          .hybridcpu_read
-		input  wire [15:0] avalon1_hybridcpu_readdata,   //          .hybridcpu_readdata
-		input  wire        avalon1_hybridcpu_sync_clk,   //          .hybridcpu_sync_clk
-		output wire        avalon1_hybridcpu_write,      //          .hybridcpu_write
-		output wire [15:0] avalon1_hybridcpu_writedata,  //          .hybridcpu_writedata
-		output wire        avalon1_hybridcpu_request,    //          .hybridcpu_request
-		input  wire [2:0]  avalonirq_avalon_irq_n,       // avalonirq.avalon_irq_n
-		input  wire        avalonirq_avalon_sync_clk,    //          .avalon_sync_clk
-		input  wire        avalonirq_avalon_reset_n,     //          .avalon_reset_n
-		input  wire        clk_clk,                      //       clk.clk
-		output wire [14:0] memory_mem_a,                 //    memory.mem_a
-		output wire [2:0]  memory_mem_ba,                //          .mem_ba
-		output wire        memory_mem_ck,                //          .mem_ck
-		output wire        memory_mem_ck_n,              //          .mem_ck_n
-		output wire        memory_mem_cke,               //          .mem_cke
-		output wire        memory_mem_cs_n,              //          .mem_cs_n
-		output wire        memory_mem_ras_n,             //          .mem_ras_n
-		output wire        memory_mem_cas_n,             //          .mem_cas_n
-		output wire        memory_mem_we_n,              //          .mem_we_n
-		output wire        memory_mem_reset_n,           //          .mem_reset_n
-		inout  wire [31:0] memory_mem_dq,                //          .mem_dq
-		inout  wire [3:0]  memory_mem_dqs,               //          .mem_dqs
-		inout  wire [3:0]  memory_mem_dqs_n,             //          .mem_dqs_n
-		output wire        memory_mem_odt,               //          .mem_odt
-		output wire [3:0]  memory_mem_dm,                //          .mem_dm
-		input  wire        memory_oct_rzqin              //          .oct_rzqin
+		output wire [22:0] avalon1_hybridcpu_address,    //    avalon1.hybridcpu_address
+		output wire [1:0]  avalon1_hybridcpu_byteenable, //           .hybridcpu_byteenable
+		input  wire        avalon1_hybridcpu_complete,   //           .hybridcpu_complete
+		output wire        avalon1_hybridcpu_read,       //           .hybridcpu_read
+		input  wire [15:0] avalon1_hybridcpu_readdata,   //           .hybridcpu_readdata
+		input  wire        avalon1_hybridcpu_sync_clk,   //           .hybridcpu_sync_clk
+		output wire        avalon1_hybridcpu_write,      //           .hybridcpu_write
+		output wire [15:0] avalon1_hybridcpu_writedata,  //           .hybridcpu_writedata
+		output wire        avalon1_hybridcpu_request,    //           .hybridcpu_request
+		output wire        avalon1_hybridcpu_longword,   //           .hybridcpu_longword
+		input  wire [2:0]  avalonirq_avalon_irq_n,       //  avalonirq.avalon_irq_n
+		input  wire        avalonirq_avalon_sync_clk,    //           .avalon_sync_clk
+		input  wire        avalonirq_avalon_reset_n,     //           .avalon_reset_n
+		output wire [3:0]  avalonregs_avalon_cacr,       // avalonregs.avalon_cacr
+		input  wire        avalonregs_avalon_sync_clk,   //           .avalon_sync_clk
+		output wire [31:0] avalonregs_avalon_vbr,        //           .avalon_vbr
+		input  wire        clk_clk,                      //        clk.clk
+		output wire [14:0] memory_mem_a,                 //     memory.mem_a
+		output wire [2:0]  memory_mem_ba,                //           .mem_ba
+		output wire        memory_mem_ck,                //           .mem_ck
+		output wire        memory_mem_ck_n,              //           .mem_ck_n
+		output wire        memory_mem_cke,               //           .mem_cke
+		output wire        memory_mem_cs_n,              //           .mem_cs_n
+		output wire        memory_mem_ras_n,             //           .mem_ras_n
+		output wire        memory_mem_cas_n,             //           .mem_cas_n
+		output wire        memory_mem_we_n,              //           .mem_we_n
+		output wire        memory_mem_reset_n,           //           .mem_reset_n
+		inout  wire [31:0] memory_mem_dq,                //           .mem_dq
+		inout  wire [3:0]  memory_mem_dqs,               //           .mem_dqs
+		inout  wire [3:0]  memory_mem_dqs_n,             //           .mem_dqs_n
+		output wire        memory_mem_odt,               //           .mem_odt
+		output wire [3:0]  memory_mem_dm,                //           .mem_dm
+		input  wire        memory_oct_rzqin              //           .oct_rzqin
 	);
 
 	//wire         hps_0_h2f_reset_reset;                                         // hps_0:h2f_rst_n -> [rst_controller:reset_in0, rst_controller_001:reset_in0]
@@ -73,18 +77,21 @@ module hps_fpga_bridge (
 	wire   [2:0] hps_0_h2f_axi_master_awsize;                                   // hps_0:h2f_AWSIZE -> mm_interconnect_0:hps_0_h2f_axi_master_awsize
 	wire         hps_0_h2f_axi_master_awvalid;                                  // hps_0:h2f_AWVALID -> mm_interconnect_0:hps_0_h2f_axi_master_awvalid
 	wire         hps_0_h2f_axi_master_rvalid;                                   // mm_interconnect_0:hps_0_h2f_axi_master_rvalid -> hps_0:h2f_RVALID
-	wire         mm_interconnect_0_hybridcpu0_avalon_slave_0_chipselect;        // mm_interconnect_0:hybridcpu0_avalon_slave_0_chipselect -> hybridcpu0:CHIPSELECT
-	wire  [15:0] mm_interconnect_0_hybridcpu0_avalon_slave_0_readdata;          // hybridcpu0:READDATA -> mm_interconnect_0:hybridcpu0_avalon_slave_0_readdata
-	wire         mm_interconnect_0_hybridcpu0_avalon_slave_0_waitrequest;       // hybridcpu0:WAITREQUEST -> mm_interconnect_0:hybridcpu0_avalon_slave_0_waitrequest
-	wire  [22:0] mm_interconnect_0_hybridcpu0_avalon_slave_0_address;           // mm_interconnect_0:hybridcpu0_avalon_slave_0_address -> hybridcpu0:ADDRESS
-	wire         mm_interconnect_0_hybridcpu0_avalon_slave_0_read;              // mm_interconnect_0:hybridcpu0_avalon_slave_0_read -> hybridcpu0:READ
-	wire   [1:0] mm_interconnect_0_hybridcpu0_avalon_slave_0_byteenable;        // mm_interconnect_0:hybridcpu0_avalon_slave_0_byteenable -> hybridcpu0:BYTEENABLE
-	wire         mm_interconnect_0_hybridcpu0_avalon_slave_0_write;             // mm_interconnect_0:hybridcpu0_avalon_slave_0_write -> hybridcpu0:WRITE
-	wire  [15:0] mm_interconnect_0_hybridcpu0_avalon_slave_0_writedata;         // mm_interconnect_0:hybridcpu0_avalon_slave_0_writedata -> hybridcpu0:WRITEDATA
 	wire   [7:0] mm_interconnect_0_arm_irq_avalon_0_avalon_slave_0_readdata;    // arm_irq_avalon_0:READDATA -> mm_interconnect_0:arm_irq_avalon_0_avalon_slave_0_readdata
 	wire         mm_interconnect_0_arm_irq_avalon_0_avalon_slave_0_waitrequest; // arm_irq_avalon_0:WAITREQUEST -> mm_interconnect_0:arm_irq_avalon_0_avalon_slave_0_waitrequest
 	wire         mm_interconnect_0_arm_irq_avalon_0_avalon_slave_0_read;        // mm_interconnect_0:arm_irq_avalon_0_avalon_slave_0_read -> arm_irq_avalon_0:READ
-	wire         rst_controller_reset_out_reset;                                // rst_controller:reset_out -> [arm_irq_avalon_0:RESET_N, hybridcpu0:RESET_N, mm_interconnect_0:hybridcpu0_reset_reset_bridge_in_reset_reset]
+	wire   [0:0] mm_interconnect_0_arm_regs_avalon_0_avalon_slave_0_address;    // mm_interconnect_0:arm_regs_avalon_0_avalon_slave_0_address -> arm_regs_avalon_0:ADDRESS
+	wire         mm_interconnect_0_arm_regs_avalon_0_avalon_slave_0_write;      // mm_interconnect_0:arm_regs_avalon_0_avalon_slave_0_write -> arm_regs_avalon_0:WRITE
+	wire  [31:0] mm_interconnect_0_arm_regs_avalon_0_avalon_slave_0_writedata;  // mm_interconnect_0:arm_regs_avalon_0_avalon_slave_0_writedata -> arm_regs_avalon_0:WRITEDATA
+	wire  [31:0] mm_interconnect_0_hybridcpu0_avalon_slave_0_readdata;          // hybridcpu0:READDATA -> mm_interconnect_0:hybridcpu0_avalon_slave_0_readdata
+	wire         mm_interconnect_0_hybridcpu0_avalon_slave_0_waitrequest;       // hybridcpu0:WAITREQUEST -> mm_interconnect_0:hybridcpu0_avalon_slave_0_waitrequest
+	wire  [21:0] mm_interconnect_0_hybridcpu0_avalon_slave_0_address;           // mm_interconnect_0:hybridcpu0_avalon_slave_0_address -> hybridcpu0:ADDRESS
+	wire         mm_interconnect_0_hybridcpu0_avalon_slave_0_read;              // mm_interconnect_0:hybridcpu0_avalon_slave_0_read -> hybridcpu0:READ
+	wire   [3:0] mm_interconnect_0_hybridcpu0_avalon_slave_0_byteenable;        // mm_interconnect_0:hybridcpu0_avalon_slave_0_byteenable -> hybridcpu0:BYTEENABLE
+	wire         mm_interconnect_0_hybridcpu0_avalon_slave_0_readdatavalid;     // hybridcpu0:READDATAVALID -> mm_interconnect_0:hybridcpu0_avalon_slave_0_readdatavalid
+	wire         mm_interconnect_0_hybridcpu0_avalon_slave_0_write;             // mm_interconnect_0:hybridcpu0_avalon_slave_0_write -> hybridcpu0:WRITE
+	wire  [31:0] mm_interconnect_0_hybridcpu0_avalon_slave_0_writedata;         // mm_interconnect_0:hybridcpu0_avalon_slave_0_writedata -> hybridcpu0:WRITEDATA
+	wire         rst_controller_reset_out_reset;                                // rst_controller:reset_out -> [arm_irq_avalon_0:RESET_N, arm_regs_avalon_0:RESET_N, hybridcpu0:RESET_N, mm_interconnect_0:arm_irq_avalon_0_reset_reset_bridge_in_reset_reset]
 	wire         rst_controller_001_reset_out_reset;                            // rst_controller_001:reset_out -> mm_interconnect_0:hps_0_h2f_axi_master_agent_clk_reset_reset_bridge_in_reset_reset
 
 	arm_irq_avalon arm_irq_avalon_0 (
@@ -98,6 +105,17 @@ module hps_fpga_bridge (
 		.AVALON_RESET_N  (avalonirq_avalon_reset_n)                                       //               .avalon_reset_n
 	);
 
+	arm_regs_avalon arm_regs_avalon_0 (
+		.CLK             (clk_clk),                                                      //          clock.clk
+		.RESET_N         (~rst_controller_reset_out_reset),                              //          reset.reset_n
+		.AVALON_CACR     (avalonregs_avalon_cacr),                                       //    conduit_end.avalon_cacr
+		.AVALON_SYNC_CLK (avalonregs_avalon_sync_clk),                                   //               .avalon_sync_clk
+		.AVALON_VBR      (avalonregs_avalon_vbr),                                        //               .avalon_vbr
+		.WRITE           (mm_interconnect_0_arm_regs_avalon_0_avalon_slave_0_write),     // avalon_slave_0.write
+		.ADDRESS         (mm_interconnect_0_arm_regs_avalon_0_avalon_slave_0_address),   //               .address
+		.WRITEDATA       (mm_interconnect_0_arm_regs_avalon_0_avalon_slave_0_writedata)  //               .writedata
+	);
+
 	hps_fpga_bridge_hps_0 #(
 		.F2S_Width (0),
 		.S2F_Width (1)
@@ -159,25 +177,26 @@ module hps_fpga_bridge (
 	);
 
 	arm_avalon hybridcpu0 (
-		.CLK                  (clk_clk),                                                 //          clock.clk
-		.RESET_N              (~rst_controller_reset_out_reset),                         //          reset.reset_n
-		.CHIPSELECT           (mm_interconnect_0_hybridcpu0_avalon_slave_0_chipselect),  // avalon_slave_0.chipselect
-		.ADDRESS              (mm_interconnect_0_hybridcpu0_avalon_slave_0_address),     //               .address
-		.READ                 (mm_interconnect_0_hybridcpu0_avalon_slave_0_read),        //               .read
-		.READDATA             (mm_interconnect_0_hybridcpu0_avalon_slave_0_readdata),    //               .readdata
-		.WRITE                (mm_interconnect_0_hybridcpu0_avalon_slave_0_write),       //               .write
-		.WRITEDATA            (mm_interconnect_0_hybridcpu0_avalon_slave_0_writedata),   //               .writedata
-		.BYTEENABLE           (mm_interconnect_0_hybridcpu0_avalon_slave_0_byteenable),  //               .byteenable
-		.WAITREQUEST          (mm_interconnect_0_hybridcpu0_avalon_slave_0_waitrequest), //               .waitrequest
-		.HYBRIDCPU_ADDRESS    (avalon1_hybridcpu_address),                               //    conduit_end.hybridcpu_address
-		.HYBRIDCPU_BYTEENABLE (avalon1_hybridcpu_byteenable),                            //               .hybridcpu_byteenable
-		.HYBRIDCPU_COMPLETE   (avalon1_hybridcpu_complete),                              //               .hybridcpu_complete
-		.HYBRIDCPU_READ       (avalon1_hybridcpu_read),                                  //               .hybridcpu_read
-		.HYBRIDCPU_READDATA   (avalon1_hybridcpu_readdata),                              //               .hybridcpu_readdata
-		.HYBRIDCPU_SYNC_CLK   (avalon1_hybridcpu_sync_clk),                              //               .hybridcpu_sync_clk
-		.HYBRIDCPU_WRITE      (avalon1_hybridcpu_write),                                 //               .hybridcpu_write
-		.HYBRIDCPU_WRITEDATA  (avalon1_hybridcpu_writedata),                             //               .hybridcpu_writedata
-		.HYBRIDCPU_REQUEST    (avalon1_hybridcpu_request)                                //               .hybridcpu_request
+		.CLK                  (clk_clk),                                                   //          clock.clk
+		.RESET_N              (~rst_controller_reset_out_reset),                           //          reset.reset_n
+		.ADDRESS              (mm_interconnect_0_hybridcpu0_avalon_slave_0_address),       // avalon_slave_0.address
+		.READ                 (mm_interconnect_0_hybridcpu0_avalon_slave_0_read),          //               .read
+		.READDATA             (mm_interconnect_0_hybridcpu0_avalon_slave_0_readdata),      //               .readdata
+		.WRITE                (mm_interconnect_0_hybridcpu0_avalon_slave_0_write),         //               .write
+		.WRITEDATA            (mm_interconnect_0_hybridcpu0_avalon_slave_0_writedata),     //               .writedata
+		.BYTEENABLE           (mm_interconnect_0_hybridcpu0_avalon_slave_0_byteenable),    //               .byteenable
+		.WAITREQUEST          (mm_interconnect_0_hybridcpu0_avalon_slave_0_waitrequest),   //               .waitrequest
+		.READDATAVALID        (mm_interconnect_0_hybridcpu0_avalon_slave_0_readdatavalid), //               .readdatavalid
+		.HYBRIDCPU_ADDRESS    (avalon1_hybridcpu_address),                                 //    conduit_end.hybridcpu_address
+		.HYBRIDCPU_BYTEENABLE (avalon1_hybridcpu_byteenable),                              //               .hybridcpu_byteenable
+		.HYBRIDCPU_COMPLETE   (avalon1_hybridcpu_complete),                                //               .hybridcpu_complete
+		.HYBRIDCPU_READ       (avalon1_hybridcpu_read),                                    //               .hybridcpu_read
+		.HYBRIDCPU_READDATA   (avalon1_hybridcpu_readdata),                                //               .hybridcpu_readdata
+		.HYBRIDCPU_SYNC_CLK   (avalon1_hybridcpu_sync_clk),                                //               .hybridcpu_sync_clk
+		.HYBRIDCPU_WRITE      (avalon1_hybridcpu_write),                                   //               .hybridcpu_write
+		.HYBRIDCPU_WRITEDATA  (avalon1_hybridcpu_writedata),                               //               .hybridcpu_writedata
+		.HYBRIDCPU_REQUEST    (avalon1_hybridcpu_request),                                 //               .hybridcpu_request
+		.HYBRIDCPU_LONGWORD   (avalon1_hybridcpu_longword)                                 //               .hybridcpu_longword
 	);
 
 	hps_fpga_bridge_mm_interconnect_0 mm_interconnect_0 (
@@ -218,19 +237,22 @@ module hps_fpga_bridge (
 		.hps_0_h2f_axi_master_rvalid                                      (hps_0_h2f_axi_master_rvalid),                                   //                                                           .rvalid
 		.hps_0_h2f_axi_master_rready                                      (hps_0_h2f_axi_master_rready),                                   //                                                           .rready
 		.clk_0_clk_clk                                                    (clk_clk),                                                       //                                                  clk_0_clk.clk
+		.arm_irq_avalon_0_reset_reset_bridge_in_reset_reset               (rst_controller_reset_out_reset),                                //               arm_irq_avalon_0_reset_reset_bridge_in_reset.reset
 		.hps_0_h2f_axi_master_agent_clk_reset_reset_bridge_in_reset_reset (rst_controller_001_reset_out_reset),                            // hps_0_h2f_axi_master_agent_clk_reset_reset_bridge_in_reset.reset
-		.hybridcpu0_reset_reset_bridge_in_reset_reset                     (rst_controller_reset_out_reset),                                //                     hybridcpu0_reset_reset_bridge_in_reset.reset
 		.arm_irq_avalon_0_avalon_slave_0_read                             (mm_interconnect_0_arm_irq_avalon_0_avalon_slave_0_read),        //                            arm_irq_avalon_0_avalon_slave_0.read
 		.arm_irq_avalon_0_avalon_slave_0_readdata                         (mm_interconnect_0_arm_irq_avalon_0_avalon_slave_0_readdata),    //                                                           .readdata
 		.arm_irq_avalon_0_avalon_slave_0_waitrequest                      (mm_interconnect_0_arm_irq_avalon_0_avalon_slave_0_waitrequest), //                                                           .waitrequest
+		.arm_regs_avalon_0_avalon_slave_0_address                         (mm_interconnect_0_arm_regs_avalon_0_avalon_slave_0_address),    //                           arm_regs_avalon_0_avalon_slave_0.address
+		.arm_regs_avalon_0_avalon_slave_0_write                           (mm_interconnect_0_arm_regs_avalon_0_avalon_slave_0_write),      //                                                           .write
+		.arm_regs_avalon_0_avalon_slave_0_writedata                       (mm_interconnect_0_arm_regs_avalon_0_avalon_slave_0_writedata),  //                                                           .writedata
 		.hybridcpu0_avalon_slave_0_address                                (mm_interconnect_0_hybridcpu0_avalon_slave_0_address),           //                                  hybridcpu0_avalon_slave_0.address
 		.hybridcpu0_avalon_slave_0_write                                  (mm_interconnect_0_hybridcpu0_avalon_slave_0_write),             //                                                           .write
 		.hybridcpu0_avalon_slave_0_read                                   (mm_interconnect_0_hybridcpu0_avalon_slave_0_read),              //                                                           .read
 		.hybridcpu0_avalon_slave_0_readdata                               (mm_interconnect_0_hybridcpu0_avalon_slave_0_readdata),          //                                                           .readdata
 		.hybridcpu0_avalon_slave_0_writedata                              (mm_interconnect_0_hybridcpu0_avalon_slave_0_writedata),         //                                                           .writedata
 		.hybridcpu0_avalon_slave_0_byteenable                             (mm_interconnect_0_hybridcpu0_avalon_slave_0_byteenable),        //                                                           .byteenable
-		.hybridcpu0_avalon_slave_0_waitrequest                            (mm_interconnect_0_hybridcpu0_avalon_slave_0_waitrequest),       //                                                           .waitrequest
-		.hybridcpu0_avalon_slave_0_chipselect                             (mm_interconnect_0_hybridcpu0_avalon_slave_0_chipselect)         //                                                           .chipselect
+		.hybridcpu0_avalon_slave_0_readdatavalid                          (mm_interconnect_0_hybridcpu0_avalon_slave_0_readdatavalid),     //                                                           .readdatavalid
+		.hybridcpu0_avalon_slave_0_waitrequest                            (mm_interconnect_0_hybridcpu0_avalon_slave_0_waitrequest)        //                                                           .waitrequest
 	);
 
 	altera_reset_controller #(
diff --git a/sys/hps_fpga_bridge/synthesis/submodules/arm_avalon.vhd b/sys/hps_fpga_bridge/synthesis/submodules/arm_avalon.vhd
index 3e19fc9..58927ee 100644
--- a/sys/hps_fpga_bridge/synthesis/submodules/arm_avalon.vhd
+++ b/sys/hps_fpga_bridge/synthesis/submodules/arm_avalon.vhd
@@ -24,13 +24,13 @@ PORT
 	RESET_N : IN STD_LOGIC;
 	
 	-- avalon signals
-	CHIPSELECT : IN STD_LOGIC;
-	ADDRESS : IN STD_LOGIC_VECTOR(22 downto 0);
+	ADDRESS : IN STD_LOGIC_VECTOR(21 downto 0);
 	READ: IN STD_LOGIC;
-	READDATA : OUT STD_LOGIC_VECTOR(15 downto 0);
+	READDATA : OUT STD_LOGIC_VECTOR(31 downto 0);
+	READDATAVALID : OUT STD_LOGIC;
 	WRITE : IN STD_LOGIC;
-	WRITEDATA : IN STD_LOGIC_VECTOR(15 downto 0);
-	BYTEENABLE : IN STD_LOGIC_VECTOR(1 downto 0);
+	WRITEDATA : IN STD_LOGIC_VECTOR(31 downto 0);
+	BYTEENABLE : IN STD_LOGIC_VECTOR(3 downto 0);
 	WAITREQUEST : OUT STD_LOGIC;
 	
 
@@ -43,6 +43,7 @@ PORT
 	HYBRIDCPU_BYTEENABLE : OUT STD_LOGIC_VECTOR(1 downto 0);
 	HYBRIDCPU_COMPLETE : IN STD_LOGIC;
 	HYBRIDCPU_REQUEST : OUT STD_LOGIC;
+	HYBRIDCPU_LONGWORD : OUT STD_LOGIC; 
 
 	-- expose a slow clock too, aligned with CLK
 	HYBRIDCPU_SYNC_CLK : IN STD_LOGIC
@@ -50,106 +51,276 @@ PORT
 END arm_avalon;
 
 ARCHITECTURE vhdl OF arm_avalon IS
-	signal READDATA_REG : STD_LOGIC_VECTOR(15 downto 0);
-	signal COMPLETE_REG : STD_LOGIC;
-
-	signal HYBRIDCPU_REQUEST_NEXT : STD_LOGIC;
-	signal HYBRIDCPU_REQUEST_REG : STD_LOGIC;
-	signal HYBRIDCPU_ADDRESS_REG : STD_LOGIC_VECTOR(22 downto 0);
-	signal HYBRIDCPU_READ_REG: STD_LOGIC;
-	signal HYBRIDCPU_READDATA_REG : STD_LOGIC_VECTOR(15 downto 0);
-	signal HYBRIDCPU_WRITE_REG : STD_LOGIC;
-	signal HYBRIDCPU_WRITEDATA_REG : STD_LOGIC_VECTOR(15 downto 0);
-	signal HYBRIDCPU_BYTEENABLE_REG : STD_LOGIC_VECTOR(1 downto 0);
-
-	signal STATE_REG : STD_LOGIC_VECTOR(1 downto 0);
-	signal STATE_NEXT : STD_LOGIC_VECTOR(1 downto 0);
-	constant STATE_INIT : STD_LOGIC_VECTOR(1 downto 0) := "00";
-	constant STATE_WAIT_HYBRIDCPU_SEEN : STD_LOGIC_VECTOR(1 downto 0) := "01";
-	constant STATE_WAIT_HYBRIDCPU_COMPLETE : STD_LOGIC_VECTOR(1 downto 0) := "10";
-
-	signal WATCHDOG_REG : UNSIGNED(15 downto 0);
-	signal WATCHDOG_NEXT : UNSIGNED(15 downto 0);
+	signal hps_readvalid_reg : std_logic;
+	signal hps_readvalid_next : std_logic;
+
+	signal SYS_STATE_REG : STD_LOGIC_VECTOR(1 downto 0);
+	signal SYS_STATE_NEXT : STD_LOGIC_VECTOR(1 downto 0);
+	constant SYS_STATE_WAIT_REQUEST : STD_LOGIC_VECTOR(1 downto 0) := "00";
+	constant SYS_STATE_WAIT_COMPLETE : STD_LOGIC_VECTOR(1 downto 0) := "01";
+	constant SYS_STATE_WAIT_COMPLETE1 : STD_LOGIC_VECTOR(1 downto 0) := "10";
+	constant SYS_STATE_WAIT_COMPLETE2 : STD_LOGIC_VECTOR(1 downto 0) := "11";
+
+	signal active_word : std_logic;
+	signal read_word : std_logic_vector(1 downto 0);
+
+	signal to_hps_read : std_logic;
+	signal to_hps_empty : std_logic;
+	signal to_hps_write : std_logic;
+
+	signal to_hps_readdata : std_logic_vector(31 downto 0);
+	signal to_hps_readdata_next : std_logic_vector(31 downto 0);
+	signal to_hps_readdata_reg : std_logic_vector(31 downto 0);
+
+	signal from_hps_readack : std_logic;
+	signal from_hps_empty : std_logic;
+	signal from_hps_write : std_logic;
+	signal from_hps_read : std_logic;
+	signal from_hps_byteenable : std_logic_vector(3 downto 0);
+	signal from_hps_writedata : std_logic_vector(31 downto 0);
+	signal from_hps_writereq : std_logic;
+	signal from_hps_full : std_logic;
+
+	COMPONENT fifo_from_hps IS
+	PORT
+	(
+		data		: IN STD_LOGIC_VECTOR (59 DOWNTO 0);
+		rdclk		: IN STD_LOGIC ;
+		rdreq		: IN STD_LOGIC ;
+		wrclk		: IN STD_LOGIC ;
+		wrreq		: IN STD_LOGIC ;
+		q		: OUT STD_LOGIC_VECTOR (59 DOWNTO 0);
+		rdempty		: OUT STD_LOGIC ;
+		wrfull		: OUT STD_LOGIC 
+	);
+	END COMPONENT;
+
+	COMPONENT fifo_to_hps IS
+		PORT
+		(
+			data		: IN STD_LOGIC_VECTOR (31 DOWNTO 0);
+			rdclk		: IN STD_LOGIC ;
+			rdreq		: IN STD_LOGIC ;
+			wrclk		: IN STD_LOGIC ;
+			wrreq		: IN STD_LOGIC ;
+			q		: OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
+			rdempty		: OUT STD_LOGIC ;
+			wrfull		: OUT STD_LOGIC 
+		);
+	END COMPONENT;
+
 BEGIN
-	process(hybridcpu_sync_clk,reset_n)
+	to_hps : fifo_to_hps
+	port map
+	(
+		rdclk=>clk,
+		rdreq=>to_hps_read,
+		rdempty=>to_hps_empty,
+		q=>READDATA,
+
+		wrclk=>hybridcpu_sync_clk,
+		data =>to_hps_readdata,
+		wrreq=>to_hps_write,
+		wrfull=>open
+	);
+
+	from_hps : fifo_from_hps
+	port map
+	(
+		rdclk=>hybridcpu_sync_clk,
+		rdreq=>from_hps_readack,
+		rdempty=>from_hps_empty,
+		q(59)=>from_hps_write,
+		q(58)=>from_hps_read,
+		q(57 downto 54)=>from_hps_byteenable,
+		q(53 downto 32)=>HYBRIDCPU_ADDRESS(22 downto 1), -- 0 needs setting...
+		q(31 downto 0)=>from_hps_writedata,
+
+		wrclk=>clk,
+		data(59) => WRITE,
+		data(58) => READ, 
+		data(57 downto 54) => BYTEENABLE, 
+		data(53 downto 32) => ADDRESS, 
+		data(31 downto 0) => WRITEDATA, 
+
+		wrreq=>from_hps_writereq,
+		wrfull=>from_hps_full
+	);
+
+	-------------------
+	-- HPS side
+	process(clk,reset_n)
 	begin
 		if (reset_n='0') then
-			COMPLETE_REG <= '0';
-			READDATA_REG <= (others=>'0');
-			--IRQ_N <= HYBRIDCPU_IRQ_N;
-		
-			HYBRIDCPU_REQUEST_REG <= '0';
-			HYBRIDCPU_ADDRESS_REG <= (others=>'0');
-			HYBRIDCPU_READ_REG <= '0';
-			HYBRIDCPU_WRITE_REG <= '0';
-			HYBRIDCPU_WRITEDATA_REG <= (others=>'0');
-			HYBRIDCPU_BYTEENABLE_REG <= (others=>'0');
-		elsif (hybridcpu_sync_clk'event and hybridcpu_sync_clk='1') then
-			COMPLETE_REG <= HYBRIDCPU_COMPLETE;
-			READDATA_REG <= HYBRIDCPU_READDATA;
-			--IRQ_N <= HYBRIDCPU_IRQ_N;
-		
-			HYBRIDCPU_REQUEST_REG <= HYBRIDCPU_REQUEST_NEXT;
-			HYBRIDCPU_ADDRESS_REG <= ADDRESS;
-			HYBRIDCPU_READ_REG <= READ;
-			HYBRIDCPU_WRITE_REG <= WRITE;
-			HYBRIDCPU_WRITEDATA_REG <= WRITEDATA;
-			HYBRIDCPU_BYTEENABLE_REG <= BYTEENABLE;
+			hps_readvalid_reg <= '0';
+		elsif (clk'event and clk='1') then
+			hps_readvalid_reg <= hps_readvalid_next;
 		end if;
 	end process;
 
+	process(hps_readvalid_reg, from_hps_full, to_hps_empty, READ, WRITE) is
+	begin
+		hps_readvalid_next <= hps_readvalid_reg;
+		waitrequest <= from_hps_full;
 
-	process(clk,reset_n)
+		READDATAVALID <= hps_readvalid_reg;
+
+		from_hps_writereq <= '0';
+		to_hps_read <= '0';
+
+		from_hps_writereq <= READ or WRITE;
+
+		hps_readvalid_next <= not(to_hps_empty);
+		to_hps_read<=not(to_hps_empty);
+	end process;
+
+	-------------------
+	-- sys side
+	process(HYBRIDCPU_SYNC_CLK,reset_n)
 	begin
 		if (reset_n='0') then
-			state_reg <= state_init;
-			watchdog_reg <= (others=>'0');
-		elsif (clk'event and clk='1') then
-			state_reg <= state_next;
-			watchdog_reg <= watchdog_next;
+			sys_state_reg <= SYS_STATE_WAIT_REQUEST;
+			to_hps_readdata_reg <= (others=>'0');
+		elsif (HYBRIDCPU_SYNC_CLK'event and HYBRIDCPU_SYNC_CLK='1') then
+			sys_state_reg <= sys_state_next;
+			to_hps_readdata_reg <= TO_HPS_READDATA_NEXT;
 		end if;
 	end process;
 
-	process(state_reg, chipselect, COMPLETE_REG, hybridcpu_request_reg, watchdog_reg) is
+	---- I need to handle reads and populate these
+	--to_hps_readdata, --DONE
+	--to_hps_write, -- DONE
+
+	---- I need to handle these
+	--from_hps_readack, -- DONE
+	--from_hps_empty, -- DONE
+	--from_hps_byteenable, --DONE
+	--from_hps_writedata, -- DONE
+
+	---- I need to send this to minimig
+	--HYBRIDCPU_ADDRESS(0), -- DONE -- 0 needs setting...
+	--HYBRIDCPU_BYTEENABLE -- DONE
+	--HYBRIDCPU_REQUEST --DONE
+	--HYBRIDCPU_WRITEDATA -- DONE
+	--HYBRIDCPU_LONGWORD --DONE
+
+	---- + this from minimig
+	--HYBRIDCPU_COMPLETE; --DONE
+	--HYBRIDCPU_READDATA --DONE
+
+
+	HYBRIDCPU_WRITE <= from_hps_write;
+	HYBRIDCPU_READ <= from_hps_read;
+
+	process(sys_state_reg,
+		from_hps_byteenable, from_hps_read, from_hps_empty,
+		HYBRIDCPU_COMPLETE
+		) is
+		variable word : std_logic_vector(1 downto 0);
+		variable longword : std_logic;
 	begin
-		state_next <= state_reg;
-		hybridcpu_request_next <= hybridcpu_request_reg;
-		waitrequest <= '0';
-		watchdog_next <= watchdog_reg+1;
-		case state_reg is
-			when STATE_INIT =>
-				watchdog_next <= (others=>'0');
-				if (CHIPSELECT='1') then
-					state_next <= state_wait_hybridcpu_seen;
-					hybridcpu_request_next <= '1';
-					waitrequest <= '1';
+		sys_state_next <= sys_state_reg;
+
+		word(0) := from_hps_byteenable(0) or from_hps_byteenable(1);
+		word(1) := from_hps_byteenable(2) or from_hps_byteenable(3);
+
+		case word is
+		when "01" => 
+			active_word <= '0';
+			read_word <= "11";
+			longword:='0';
+		when "10" => 
+			active_word <= '1';
+			read_word <= "11";
+			longword:='0';
+		when others => 
+			active_word <= '0';
+			read_word <= "01";
+			longword:='1';
+		end case;
+
+		from_hps_readack<='0';
+		to_hps_write<='0';
+
+		HYBRIDCPU_LONGWORD <= '0'; 
+		HYBRIDCPU_REQUEST <= '0'; 
+
+		case sys_state_reg is
+			when SYS_STATE_WAIT_REQUEST =>
+				if (from_hps_empty='0') then
+					HYBRIDCPU_REQUEST <= '1'; 
+					HYBRIDCPU_LONGWORD <= longword;
+					if (HYBRIDCPU_COMPLETE='1') then
+						to_hps_write<=from_hps_read and not(longword);
+						sys_state_next <= SYS_STATE_WAIT_REQUEST;
+						if (longword='1') then
+							sys_state_next <= SYS_STATE_WAIT_COMPLETE2;
+						else
+							from_hps_readack<='1';
+						end if;
+					else
+						if (longword='0') then
+							sys_state_next <= SYS_STATE_WAIT_COMPLETE;
+						else
+							sys_state_next <= SYS_STATE_WAIT_COMPLETE1;
+						end if;
+					end if;
+				end if;
+			when SYS_STATE_WAIT_COMPLETE =>
+				HYBRIDCPU_REQUEST <= '1'; 
+				if (HYBRIDCPU_COMPLETE='1') then
+					to_hps_write<=from_hps_read;
+					sys_state_next <= SYS_STATE_WAIT_REQUEST;
+					from_hps_readack<='1';
 				end if;
-			when STATE_WAIT_HYBRIDCPU_SEEN =>
-				waitrequest <= '1';
-				hybridcpu_request_next <= '1';
-				if (hybridcpu_request_reg='1') then
-					state_next <= state_wait_hybridcpu_complete;
-					hybridcpu_request_next <= '0';
+			when SYS_STATE_WAIT_COMPLETE1 =>
+				HYBRIDCPU_REQUEST <= '1'; 
+				HYBRIDCPU_LONGWORD <= '1'; 
+				if (HYBRIDCPU_COMPLETE='1') then
+					sys_state_next <= SYS_STATE_WAIT_COMPLETE2;
 				end if;
-			when STATE_WAIT_HYBRIDCPU_COMPLETE =>
-				waitrequest <= '1';
-				hybridcpu_request_next <= '0';
-				if (complete_reg='1' or and_reduce(std_logic_vector(watchdog_reg))='1') then
-					waitrequest <= '0';
-					state_next <= state_init;
+			when SYS_STATE_WAIT_COMPLETE2 =>
+				HYBRIDCPU_REQUEST <= '1'; 
+				read_word <= "10";
+				active_word <= '1';
+				if (HYBRIDCPU_COMPLETE='1') then
+					to_hps_write<=from_hps_read;
+					sys_state_next <= SYS_STATE_WAIT_REQUEST;
+					from_hps_readack<='1';
 				end if;
+
 			when others =>
-				state_next <= state_init;
+				sys_state_next <= SYS_STATE_WAIT_REQUEST;
 		end case;
 	end process;
 
-	READDATA <= READDATA_REG;
+	process(active_word,ADDRESS)
+	begin
+		HYBRIDCPU_ADDRESS(0) <= active_word;
+	end process;
+
+	process(active_word,from_hps_writedata,from_hps_byteenable)
+	begin
+		if active_word='0' then
+			HYBRIDCPU_WRITEDATA <= from_hps_writedata(15 downto 0);
+			HYBRIDCPU_BYTEENABLE <= from_hps_byteenable(1 downto 0);
+		else
+			HYBRIDCPU_WRITEDATA <= from_hps_writedata(31 downto 16);
+			HYBRIDCPU_BYTEENABLE <= from_hps_byteenable(3 downto 2);
+		end if;
+	end process;
+
+	process(read_word,HYBRIDCPU_READDATA,TO_HPS_READDATA_REG)
+	begin
+		TO_HPS_READDATA_NEXT <= TO_HPS_READDATA_REG;
 
-	HYBRIDCPU_REQUEST <= HYBRIDCPU_REQUEST_REG;
+		if read_word(0)='1' then
+			TO_HPS_READDATA_NEXT(15 downto 0) <= HYBRIDCPU_READDATA;
+		end if;
+		if read_word(1)='1' then
+			TO_HPS_READDATA_NEXT(31 downto 16) <= HYBRIDCPU_READDATA;
+		end if;
+	end process;
+	to_hps_readdata <= TO_HPS_READDATA_NEXT;
 
-	HYBRIDCPU_ADDRESS <= HYBRIDCPU_ADDRESS_REG;
-	HYBRIDCPU_READ <= HYBRIDCPU_READ_REG;
-	HYBRIDCPU_WRITE <= HYBRIDCPU_WRITE_REG;
-	HYBRIDCPU_WRITEDATA <= HYBRIDCPU_WRITEDATA_REG;
-	HYBRIDCPU_BYTEENABLE <= HYBRIDCPU_BYTEENABLE_REG;
 END vhdl;
diff --git a/sys/hps_fpga_bridge/synthesis/submodules/arm_regs_avalon.vhd b/sys/hps_fpga_bridge/synthesis/submodules/arm_regs_avalon.vhd
new file mode 100644
index 0000000..67561b2
--- /dev/null
+++ b/sys/hps_fpga_bridge/synthesis/submodules/arm_regs_avalon.vhd
@@ -0,0 +1,83 @@
+---------------------------------------------------------------------------
+-- (c) 2021 mark watson
+-- I am happy for anyone to use this for non-commercial use.
+-- If my vhdl files are used commercially or otherwise sold,
+-- please contact me for explicit permission at scrameta (gmail).
+-- This applies for source and binary form and derived works.
+---------------------------------------------------------------------------
+LIBRARY ieee;
+USE ieee.std_logic_1164.all;
+USE ieee.std_logic_misc.all;
+
+-- expose 68k cacr and vbr
+
+ENTITY arm_regs_avalon IS
+PORT 
+( 
+	CLK : IN STD_LOGIC;
+	RESET_N : IN STD_LOGIC;
+	
+	-- avalon signals
+	WRITE: IN STD_LOGIC;
+	ADDRESS : IN STD_LOGIC_VECTOR(0 downto 0); --0=vbr, 1==cache
+	WRITEDATA : IN STD_LOGIC_VECTOR(31 downto 0);
+	
+	-- expose a slow clock too, aligned with CLK
+	AVALON_SYNC_CLK : IN STD_LOGIC;
+	AVALON_CACR : OUT STD_LOGIC_VECTOR(3 downto 0);
+	AVALON_VBR : OUT STD_LOGIC_VECTOR(31 downto 0)
+);
+END arm_regs_avalon;
+
+ARCHITECTURE vhdl OF arm_regs_avalon IS
+	signal AVALON_CACR_NEXT : STD_LOGIC_VECTOR(3 downto 0);
+	signal AVALON_VBR_NEXT : STD_LOGIC_VECTOR(31 downto 0);
+	signal AVALON_CACR_REG : STD_LOGIC_VECTOR(3 downto 0);
+	signal AVALON_VBR_REG : STD_LOGIC_VECTOR(31 downto 0);
+
+	signal AVALON_CACR_SNEXT : STD_LOGIC_VECTOR(3 downto 0);
+	signal AVALON_VBR_SNEXT : STD_LOGIC_VECTOR(31 downto 0);
+	signal AVALON_CACR_SREG : STD_LOGIC_VECTOR(3 downto 0);
+	signal AVALON_VBR_SREG : STD_LOGIC_VECTOR(31 downto 0);
+BEGIN
+	process(clk,reset_n)
+	begin
+		if (reset_n='0') then
+			AVALON_CACR_REG <= (others=>'0');
+			AVALON_VBR_REG <= (others=>'0');
+		elsif (clk'event and clk='1') then
+			AVALON_VBR_REG <= AVALON_VBR_NEXT;
+			AVALON_CACR_REG <= AVALON_CACR_NEXT;
+		end if;
+	end process;
+
+	process(avalon_sync_clk,reset_n)
+	begin
+		if (reset_n='0') then
+			AVALON_CACR_SREG <= (others=>'0');
+			AVALON_VBR_SREG <= (others=>'0');
+		elsif (avalon_sync_clk'event and avalon_sync_clk='1') then
+			AVALON_VBR_SREG <= AVALON_VBR_REG;
+			AVALON_CACR_SREG <= AVALON_CACR_REG;
+		end if;
+	end process;
+
+	process(write,writedata,address)
+	begin
+		AVALON_VBR_NEXT <= AVALON_VBR_REG;
+		AVALON_CACR_NEXT <= AVALON_CACR_REG;
+
+		if (write='1') then
+			case address is
+			when "0" =>
+				AVALON_VBR_NEXT <= WRITEDATA;
+			when "1" =>
+				AVALON_CACR_NEXT <= WRITEDATA(3 downto 0);
+			when others =>
+			end case;
+		end if;
+	end process;
+
+	AVALON_CACR <= AVALON_CACR_SREG;
+	AVALON_VBR <= AVALON_VBR_SREG;
+END vhdl;
diff --git a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0.v b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0.v
index d9887ae..eb9ecaf 100644
--- a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0.v
+++ b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0.v
@@ -44,323 +44,328 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		output wire        hps_0_h2f_axi_master_rvalid,                                      //                                                           .rvalid
 		input  wire        hps_0_h2f_axi_master_rready,                                      //                                                           .rready
 		input  wire        clk_0_clk_clk,                                                    //                                                  clk_0_clk.clk
+		input  wire        arm_irq_avalon_0_reset_reset_bridge_in_reset_reset,               //               arm_irq_avalon_0_reset_reset_bridge_in_reset.reset
 		input  wire        hps_0_h2f_axi_master_agent_clk_reset_reset_bridge_in_reset_reset, // hps_0_h2f_axi_master_agent_clk_reset_reset_bridge_in_reset.reset
-		input  wire        hybridcpu0_reset_reset_bridge_in_reset_reset,                     //                     hybridcpu0_reset_reset_bridge_in_reset.reset
 		output wire        arm_irq_avalon_0_avalon_slave_0_read,                             //                            arm_irq_avalon_0_avalon_slave_0.read
 		input  wire [7:0]  arm_irq_avalon_0_avalon_slave_0_readdata,                         //                                                           .readdata
 		input  wire        arm_irq_avalon_0_avalon_slave_0_waitrequest,                      //                                                           .waitrequest
-		output wire [22:0] hybridcpu0_avalon_slave_0_address,                                //                                  hybridcpu0_avalon_slave_0.address
+		output wire [0:0]  arm_regs_avalon_0_avalon_slave_0_address,                         //                           arm_regs_avalon_0_avalon_slave_0.address
+		output wire        arm_regs_avalon_0_avalon_slave_0_write,                           //                                                           .write
+		output wire [31:0] arm_regs_avalon_0_avalon_slave_0_writedata,                       //                                                           .writedata
+		output wire [21:0] hybridcpu0_avalon_slave_0_address,                                //                                  hybridcpu0_avalon_slave_0.address
 		output wire        hybridcpu0_avalon_slave_0_write,                                  //                                                           .write
 		output wire        hybridcpu0_avalon_slave_0_read,                                   //                                                           .read
-		input  wire [15:0] hybridcpu0_avalon_slave_0_readdata,                               //                                                           .readdata
-		output wire [15:0] hybridcpu0_avalon_slave_0_writedata,                              //                                                           .writedata
-		output wire [1:0]  hybridcpu0_avalon_slave_0_byteenable,                             //                                                           .byteenable
-		input  wire        hybridcpu0_avalon_slave_0_waitrequest,                            //                                                           .waitrequest
-		output wire        hybridcpu0_avalon_slave_0_chipselect                              //                                                           .chipselect
+		input  wire [31:0] hybridcpu0_avalon_slave_0_readdata,                               //                                                           .readdata
+		output wire [31:0] hybridcpu0_avalon_slave_0_writedata,                              //                                                           .writedata
+		output wire [3:0]  hybridcpu0_avalon_slave_0_byteenable,                             //                                                           .byteenable
+		input  wire        hybridcpu0_avalon_slave_0_readdatavalid,                          //                                                           .readdatavalid
+		input  wire        hybridcpu0_avalon_slave_0_waitrequest                             //                                                           .waitrequest
 	);
 
-	wire   [15:0] hybridcpu0_avalon_slave_0_agent_m0_readdata;                         // hybridcpu0_avalon_slave_0_translator:uav_readdata -> hybridcpu0_avalon_slave_0_agent:m0_readdata
-	wire          hybridcpu0_avalon_slave_0_agent_m0_waitrequest;                      // hybridcpu0_avalon_slave_0_translator:uav_waitrequest -> hybridcpu0_avalon_slave_0_agent:m0_waitrequest
-	wire          hybridcpu0_avalon_slave_0_agent_m0_debugaccess;                      // hybridcpu0_avalon_slave_0_agent:m0_debugaccess -> hybridcpu0_avalon_slave_0_translator:uav_debugaccess
-	wire   [29:0] hybridcpu0_avalon_slave_0_agent_m0_address;                          // hybridcpu0_avalon_slave_0_agent:m0_address -> hybridcpu0_avalon_slave_0_translator:uav_address
-	wire    [1:0] hybridcpu0_avalon_slave_0_agent_m0_byteenable;                       // hybridcpu0_avalon_slave_0_agent:m0_byteenable -> hybridcpu0_avalon_slave_0_translator:uav_byteenable
-	wire          hybridcpu0_avalon_slave_0_agent_m0_read;                             // hybridcpu0_avalon_slave_0_agent:m0_read -> hybridcpu0_avalon_slave_0_translator:uav_read
-	wire          hybridcpu0_avalon_slave_0_agent_m0_readdatavalid;                    // hybridcpu0_avalon_slave_0_translator:uav_readdatavalid -> hybridcpu0_avalon_slave_0_agent:m0_readdatavalid
-	wire          hybridcpu0_avalon_slave_0_agent_m0_lock;                             // hybridcpu0_avalon_slave_0_agent:m0_lock -> hybridcpu0_avalon_slave_0_translator:uav_lock
-	wire   [15:0] hybridcpu0_avalon_slave_0_agent_m0_writedata;                        // hybridcpu0_avalon_slave_0_agent:m0_writedata -> hybridcpu0_avalon_slave_0_translator:uav_writedata
-	wire          hybridcpu0_avalon_slave_0_agent_m0_write;                            // hybridcpu0_avalon_slave_0_agent:m0_write -> hybridcpu0_avalon_slave_0_translator:uav_write
-	wire    [1:0] hybridcpu0_avalon_slave_0_agent_m0_burstcount;                       // hybridcpu0_avalon_slave_0_agent:m0_burstcount -> hybridcpu0_avalon_slave_0_translator:uav_burstcount
-	wire          hybridcpu0_avalon_slave_0_agent_rf_source_valid;                     // hybridcpu0_avalon_slave_0_agent:rf_source_valid -> hybridcpu0_avalon_slave_0_agent_rsp_fifo:in_valid
-	wire  [103:0] hybridcpu0_avalon_slave_0_agent_rf_source_data;                      // hybridcpu0_avalon_slave_0_agent:rf_source_data -> hybridcpu0_avalon_slave_0_agent_rsp_fifo:in_data
-	wire          hybridcpu0_avalon_slave_0_agent_rf_source_ready;                     // hybridcpu0_avalon_slave_0_agent_rsp_fifo:in_ready -> hybridcpu0_avalon_slave_0_agent:rf_source_ready
-	wire          hybridcpu0_avalon_slave_0_agent_rf_source_startofpacket;             // hybridcpu0_avalon_slave_0_agent:rf_source_startofpacket -> hybridcpu0_avalon_slave_0_agent_rsp_fifo:in_startofpacket
-	wire          hybridcpu0_avalon_slave_0_agent_rf_source_endofpacket;               // hybridcpu0_avalon_slave_0_agent:rf_source_endofpacket -> hybridcpu0_avalon_slave_0_agent_rsp_fifo:in_endofpacket
-	wire          hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_valid;                  // hybridcpu0_avalon_slave_0_agent_rsp_fifo:out_valid -> hybridcpu0_avalon_slave_0_agent:rf_sink_valid
-	wire  [103:0] hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_data;                   // hybridcpu0_avalon_slave_0_agent_rsp_fifo:out_data -> hybridcpu0_avalon_slave_0_agent:rf_sink_data
-	wire          hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_ready;                  // hybridcpu0_avalon_slave_0_agent:rf_sink_ready -> hybridcpu0_avalon_slave_0_agent_rsp_fifo:out_ready
-	wire          hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_startofpacket;          // hybridcpu0_avalon_slave_0_agent_rsp_fifo:out_startofpacket -> hybridcpu0_avalon_slave_0_agent:rf_sink_startofpacket
-	wire          hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_endofpacket;            // hybridcpu0_avalon_slave_0_agent_rsp_fifo:out_endofpacket -> hybridcpu0_avalon_slave_0_agent:rf_sink_endofpacket
-	wire          hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_valid;                // hybridcpu0_avalon_slave_0_agent:rdata_fifo_src_valid -> hybridcpu0_avalon_slave_0_agent_rdata_fifo:in_valid
-	wire   [17:0] hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_data;                 // hybridcpu0_avalon_slave_0_agent:rdata_fifo_src_data -> hybridcpu0_avalon_slave_0_agent_rdata_fifo:in_data
-	wire          hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_ready;                // hybridcpu0_avalon_slave_0_agent_rdata_fifo:in_ready -> hybridcpu0_avalon_slave_0_agent:rdata_fifo_src_ready
-	wire    [7:0] arm_irq_avalon_0_avalon_slave_0_agent_m0_readdata;                   // arm_irq_avalon_0_avalon_slave_0_translator:uav_readdata -> arm_irq_avalon_0_avalon_slave_0_agent:m0_readdata
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_m0_waitrequest;                // arm_irq_avalon_0_avalon_slave_0_translator:uav_waitrequest -> arm_irq_avalon_0_avalon_slave_0_agent:m0_waitrequest
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_m0_debugaccess;                // arm_irq_avalon_0_avalon_slave_0_agent:m0_debugaccess -> arm_irq_avalon_0_avalon_slave_0_translator:uav_debugaccess
-	wire   [29:0] arm_irq_avalon_0_avalon_slave_0_agent_m0_address;                    // arm_irq_avalon_0_avalon_slave_0_agent:m0_address -> arm_irq_avalon_0_avalon_slave_0_translator:uav_address
-	wire    [0:0] arm_irq_avalon_0_avalon_slave_0_agent_m0_byteenable;                 // arm_irq_avalon_0_avalon_slave_0_agent:m0_byteenable -> arm_irq_avalon_0_avalon_slave_0_translator:uav_byteenable
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_m0_read;                       // arm_irq_avalon_0_avalon_slave_0_agent:m0_read -> arm_irq_avalon_0_avalon_slave_0_translator:uav_read
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_m0_readdatavalid;              // arm_irq_avalon_0_avalon_slave_0_translator:uav_readdatavalid -> arm_irq_avalon_0_avalon_slave_0_agent:m0_readdatavalid
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_m0_lock;                       // arm_irq_avalon_0_avalon_slave_0_agent:m0_lock -> arm_irq_avalon_0_avalon_slave_0_translator:uav_lock
-	wire    [7:0] arm_irq_avalon_0_avalon_slave_0_agent_m0_writedata;                  // arm_irq_avalon_0_avalon_slave_0_agent:m0_writedata -> arm_irq_avalon_0_avalon_slave_0_translator:uav_writedata
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_m0_write;                      // arm_irq_avalon_0_avalon_slave_0_agent:m0_write -> arm_irq_avalon_0_avalon_slave_0_translator:uav_write
-	wire    [0:0] arm_irq_avalon_0_avalon_slave_0_agent_m0_burstcount;                 // arm_irq_avalon_0_avalon_slave_0_agent:m0_burstcount -> arm_irq_avalon_0_avalon_slave_0_translator:uav_burstcount
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_rf_source_valid;               // arm_irq_avalon_0_avalon_slave_0_agent:rf_source_valid -> arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:in_valid
-	wire   [94:0] arm_irq_avalon_0_avalon_slave_0_agent_rf_source_data;                // arm_irq_avalon_0_avalon_slave_0_agent:rf_source_data -> arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:in_data
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_rf_source_ready;               // arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:in_ready -> arm_irq_avalon_0_avalon_slave_0_agent:rf_source_ready
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_rf_source_startofpacket;       // arm_irq_avalon_0_avalon_slave_0_agent:rf_source_startofpacket -> arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:in_startofpacket
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_rf_source_endofpacket;         // arm_irq_avalon_0_avalon_slave_0_agent:rf_source_endofpacket -> arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:in_endofpacket
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo_out_valid;            // arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:out_valid -> arm_irq_avalon_0_avalon_slave_0_agent:rf_sink_valid
-	wire   [94:0] arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo_out_data;             // arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:out_data -> arm_irq_avalon_0_avalon_slave_0_agent:rf_sink_data
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo_out_ready;            // arm_irq_avalon_0_avalon_slave_0_agent:rf_sink_ready -> arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:out_ready
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo_out_startofpacket;    // arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:out_startofpacket -> arm_irq_avalon_0_avalon_slave_0_agent:rf_sink_startofpacket
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo_out_endofpacket;      // arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:out_endofpacket -> arm_irq_avalon_0_avalon_slave_0_agent:rf_sink_endofpacket
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_src_valid;          // arm_irq_avalon_0_avalon_slave_0_agent:rdata_fifo_src_valid -> arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo:in_valid
-	wire    [9:0] arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_src_data;           // arm_irq_avalon_0_avalon_slave_0_agent:rdata_fifo_src_data -> arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo:in_data
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_src_ready;          // arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo:in_ready -> arm_irq_avalon_0_avalon_slave_0_agent:rdata_fifo_src_ready
-	wire          hps_0_h2f_axi_master_agent_write_cp_valid;                           // hps_0_h2f_axi_master_agent:write_cp_valid -> router:sink_valid
-	wire  [120:0] hps_0_h2f_axi_master_agent_write_cp_data;                            // hps_0_h2f_axi_master_agent:write_cp_data -> router:sink_data
-	wire          hps_0_h2f_axi_master_agent_write_cp_ready;                           // router:sink_ready -> hps_0_h2f_axi_master_agent:write_cp_ready
-	wire          hps_0_h2f_axi_master_agent_write_cp_startofpacket;                   // hps_0_h2f_axi_master_agent:write_cp_startofpacket -> router:sink_startofpacket
-	wire          hps_0_h2f_axi_master_agent_write_cp_endofpacket;                     // hps_0_h2f_axi_master_agent:write_cp_endofpacket -> router:sink_endofpacket
-	wire          hps_0_h2f_axi_master_agent_read_cp_valid;                            // hps_0_h2f_axi_master_agent:read_cp_valid -> router_001:sink_valid
-	wire  [120:0] hps_0_h2f_axi_master_agent_read_cp_data;                             // hps_0_h2f_axi_master_agent:read_cp_data -> router_001:sink_data
-	wire          hps_0_h2f_axi_master_agent_read_cp_ready;                            // router_001:sink_ready -> hps_0_h2f_axi_master_agent:read_cp_ready
-	wire          hps_0_h2f_axi_master_agent_read_cp_startofpacket;                    // hps_0_h2f_axi_master_agent:read_cp_startofpacket -> router_001:sink_startofpacket
-	wire          hps_0_h2f_axi_master_agent_read_cp_endofpacket;                      // hps_0_h2f_axi_master_agent:read_cp_endofpacket -> router_001:sink_endofpacket
-	wire          hybridcpu0_avalon_slave_0_agent_rp_valid;                            // hybridcpu0_avalon_slave_0_agent:rp_valid -> router_002:sink_valid
-	wire  [102:0] hybridcpu0_avalon_slave_0_agent_rp_data;                             // hybridcpu0_avalon_slave_0_agent:rp_data -> router_002:sink_data
-	wire          hybridcpu0_avalon_slave_0_agent_rp_ready;                            // router_002:sink_ready -> hybridcpu0_avalon_slave_0_agent:rp_ready
-	wire          hybridcpu0_avalon_slave_0_agent_rp_startofpacket;                    // hybridcpu0_avalon_slave_0_agent:rp_startofpacket -> router_002:sink_startofpacket
-	wire          hybridcpu0_avalon_slave_0_agent_rp_endofpacket;                      // hybridcpu0_avalon_slave_0_agent:rp_endofpacket -> router_002:sink_endofpacket
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_rp_valid;                      // arm_irq_avalon_0_avalon_slave_0_agent:rp_valid -> router_003:sink_valid
-	wire   [93:0] arm_irq_avalon_0_avalon_slave_0_agent_rp_data;                       // arm_irq_avalon_0_avalon_slave_0_agent:rp_data -> router_003:sink_data
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_rp_ready;                      // router_003:sink_ready -> arm_irq_avalon_0_avalon_slave_0_agent:rp_ready
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_rp_startofpacket;              // arm_irq_avalon_0_avalon_slave_0_agent:rp_startofpacket -> router_003:sink_startofpacket
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_rp_endofpacket;                // arm_irq_avalon_0_avalon_slave_0_agent:rp_endofpacket -> router_003:sink_endofpacket
-	wire          router_src_valid;                                                    // router:src_valid -> hps_0_h2f_axi_master_wr_limiter:cmd_sink_valid
-	wire  [120:0] router_src_data;                                                     // router:src_data -> hps_0_h2f_axi_master_wr_limiter:cmd_sink_data
-	wire          router_src_ready;                                                    // hps_0_h2f_axi_master_wr_limiter:cmd_sink_ready -> router:src_ready
-	wire    [1:0] router_src_channel;                                                  // router:src_channel -> hps_0_h2f_axi_master_wr_limiter:cmd_sink_channel
-	wire          router_src_startofpacket;                                            // router:src_startofpacket -> hps_0_h2f_axi_master_wr_limiter:cmd_sink_startofpacket
-	wire          router_src_endofpacket;                                              // router:src_endofpacket -> hps_0_h2f_axi_master_wr_limiter:cmd_sink_endofpacket
-	wire  [120:0] hps_0_h2f_axi_master_wr_limiter_cmd_src_data;                        // hps_0_h2f_axi_master_wr_limiter:cmd_src_data -> cmd_demux:sink_data
-	wire          hps_0_h2f_axi_master_wr_limiter_cmd_src_ready;                       // cmd_demux:sink_ready -> hps_0_h2f_axi_master_wr_limiter:cmd_src_ready
-	wire    [1:0] hps_0_h2f_axi_master_wr_limiter_cmd_src_channel;                     // hps_0_h2f_axi_master_wr_limiter:cmd_src_channel -> cmd_demux:sink_channel
-	wire          hps_0_h2f_axi_master_wr_limiter_cmd_src_startofpacket;               // hps_0_h2f_axi_master_wr_limiter:cmd_src_startofpacket -> cmd_demux:sink_startofpacket
-	wire          hps_0_h2f_axi_master_wr_limiter_cmd_src_endofpacket;                 // hps_0_h2f_axi_master_wr_limiter:cmd_src_endofpacket -> cmd_demux:sink_endofpacket
-	wire          rsp_mux_src_valid;                                                   // rsp_mux:src_valid -> hps_0_h2f_axi_master_wr_limiter:rsp_sink_valid
-	wire  [120:0] rsp_mux_src_data;                                                    // rsp_mux:src_data -> hps_0_h2f_axi_master_wr_limiter:rsp_sink_data
-	wire          rsp_mux_src_ready;                                                   // hps_0_h2f_axi_master_wr_limiter:rsp_sink_ready -> rsp_mux:src_ready
-	wire    [1:0] rsp_mux_src_channel;                                                 // rsp_mux:src_channel -> hps_0_h2f_axi_master_wr_limiter:rsp_sink_channel
-	wire          rsp_mux_src_startofpacket;                                           // rsp_mux:src_startofpacket -> hps_0_h2f_axi_master_wr_limiter:rsp_sink_startofpacket
-	wire          rsp_mux_src_endofpacket;                                             // rsp_mux:src_endofpacket -> hps_0_h2f_axi_master_wr_limiter:rsp_sink_endofpacket
-	wire          hps_0_h2f_axi_master_wr_limiter_rsp_src_valid;                       // hps_0_h2f_axi_master_wr_limiter:rsp_src_valid -> hps_0_h2f_axi_master_agent:write_rp_valid
-	wire  [120:0] hps_0_h2f_axi_master_wr_limiter_rsp_src_data;                        // hps_0_h2f_axi_master_wr_limiter:rsp_src_data -> hps_0_h2f_axi_master_agent:write_rp_data
-	wire          hps_0_h2f_axi_master_wr_limiter_rsp_src_ready;                       // hps_0_h2f_axi_master_agent:write_rp_ready -> hps_0_h2f_axi_master_wr_limiter:rsp_src_ready
-	wire    [1:0] hps_0_h2f_axi_master_wr_limiter_rsp_src_channel;                     // hps_0_h2f_axi_master_wr_limiter:rsp_src_channel -> hps_0_h2f_axi_master_agent:write_rp_channel
-	wire          hps_0_h2f_axi_master_wr_limiter_rsp_src_startofpacket;               // hps_0_h2f_axi_master_wr_limiter:rsp_src_startofpacket -> hps_0_h2f_axi_master_agent:write_rp_startofpacket
-	wire          hps_0_h2f_axi_master_wr_limiter_rsp_src_endofpacket;                 // hps_0_h2f_axi_master_wr_limiter:rsp_src_endofpacket -> hps_0_h2f_axi_master_agent:write_rp_endofpacket
-	wire          router_001_src_valid;                                                // router_001:src_valid -> hps_0_h2f_axi_master_rd_limiter:cmd_sink_valid
-	wire  [120:0] router_001_src_data;                                                 // router_001:src_data -> hps_0_h2f_axi_master_rd_limiter:cmd_sink_data
-	wire          router_001_src_ready;                                                // hps_0_h2f_axi_master_rd_limiter:cmd_sink_ready -> router_001:src_ready
-	wire    [1:0] router_001_src_channel;                                              // router_001:src_channel -> hps_0_h2f_axi_master_rd_limiter:cmd_sink_channel
-	wire          router_001_src_startofpacket;                                        // router_001:src_startofpacket -> hps_0_h2f_axi_master_rd_limiter:cmd_sink_startofpacket
-	wire          router_001_src_endofpacket;                                          // router_001:src_endofpacket -> hps_0_h2f_axi_master_rd_limiter:cmd_sink_endofpacket
-	wire  [120:0] hps_0_h2f_axi_master_rd_limiter_cmd_src_data;                        // hps_0_h2f_axi_master_rd_limiter:cmd_src_data -> cmd_demux_001:sink_data
-	wire          hps_0_h2f_axi_master_rd_limiter_cmd_src_ready;                       // cmd_demux_001:sink_ready -> hps_0_h2f_axi_master_rd_limiter:cmd_src_ready
-	wire    [1:0] hps_0_h2f_axi_master_rd_limiter_cmd_src_channel;                     // hps_0_h2f_axi_master_rd_limiter:cmd_src_channel -> cmd_demux_001:sink_channel
-	wire          hps_0_h2f_axi_master_rd_limiter_cmd_src_startofpacket;               // hps_0_h2f_axi_master_rd_limiter:cmd_src_startofpacket -> cmd_demux_001:sink_startofpacket
-	wire          hps_0_h2f_axi_master_rd_limiter_cmd_src_endofpacket;                 // hps_0_h2f_axi_master_rd_limiter:cmd_src_endofpacket -> cmd_demux_001:sink_endofpacket
-	wire          rsp_mux_001_src_valid;                                               // rsp_mux_001:src_valid -> hps_0_h2f_axi_master_rd_limiter:rsp_sink_valid
-	wire  [120:0] rsp_mux_001_src_data;                                                // rsp_mux_001:src_data -> hps_0_h2f_axi_master_rd_limiter:rsp_sink_data
-	wire          rsp_mux_001_src_ready;                                               // hps_0_h2f_axi_master_rd_limiter:rsp_sink_ready -> rsp_mux_001:src_ready
-	wire    [1:0] rsp_mux_001_src_channel;                                             // rsp_mux_001:src_channel -> hps_0_h2f_axi_master_rd_limiter:rsp_sink_channel
-	wire          rsp_mux_001_src_startofpacket;                                       // rsp_mux_001:src_startofpacket -> hps_0_h2f_axi_master_rd_limiter:rsp_sink_startofpacket
-	wire          rsp_mux_001_src_endofpacket;                                         // rsp_mux_001:src_endofpacket -> hps_0_h2f_axi_master_rd_limiter:rsp_sink_endofpacket
-	wire          hps_0_h2f_axi_master_rd_limiter_rsp_src_valid;                       // hps_0_h2f_axi_master_rd_limiter:rsp_src_valid -> hps_0_h2f_axi_master_agent:read_rp_valid
-	wire  [120:0] hps_0_h2f_axi_master_rd_limiter_rsp_src_data;                        // hps_0_h2f_axi_master_rd_limiter:rsp_src_data -> hps_0_h2f_axi_master_agent:read_rp_data
-	wire          hps_0_h2f_axi_master_rd_limiter_rsp_src_ready;                       // hps_0_h2f_axi_master_agent:read_rp_ready -> hps_0_h2f_axi_master_rd_limiter:rsp_src_ready
-	wire    [1:0] hps_0_h2f_axi_master_rd_limiter_rsp_src_channel;                     // hps_0_h2f_axi_master_rd_limiter:rsp_src_channel -> hps_0_h2f_axi_master_agent:read_rp_channel
-	wire          hps_0_h2f_axi_master_rd_limiter_rsp_src_startofpacket;               // hps_0_h2f_axi_master_rd_limiter:rsp_src_startofpacket -> hps_0_h2f_axi_master_agent:read_rp_startofpacket
-	wire          hps_0_h2f_axi_master_rd_limiter_rsp_src_endofpacket;                 // hps_0_h2f_axi_master_rd_limiter:rsp_src_endofpacket -> hps_0_h2f_axi_master_agent:read_rp_endofpacket
-	wire          hybridcpu0_avalon_slave_0_burst_adapter_source0_valid;               // hybridcpu0_avalon_slave_0_burst_adapter:source0_valid -> hybridcpu0_avalon_slave_0_agent:cp_valid
-	wire  [102:0] hybridcpu0_avalon_slave_0_burst_adapter_source0_data;                // hybridcpu0_avalon_slave_0_burst_adapter:source0_data -> hybridcpu0_avalon_slave_0_agent:cp_data
-	wire          hybridcpu0_avalon_slave_0_burst_adapter_source0_ready;               // hybridcpu0_avalon_slave_0_agent:cp_ready -> hybridcpu0_avalon_slave_0_burst_adapter:source0_ready
-	wire    [1:0] hybridcpu0_avalon_slave_0_burst_adapter_source0_channel;             // hybridcpu0_avalon_slave_0_burst_adapter:source0_channel -> hybridcpu0_avalon_slave_0_agent:cp_channel
-	wire          hybridcpu0_avalon_slave_0_burst_adapter_source0_startofpacket;       // hybridcpu0_avalon_slave_0_burst_adapter:source0_startofpacket -> hybridcpu0_avalon_slave_0_agent:cp_startofpacket
-	wire          hybridcpu0_avalon_slave_0_burst_adapter_source0_endofpacket;         // hybridcpu0_avalon_slave_0_burst_adapter:source0_endofpacket -> hybridcpu0_avalon_slave_0_agent:cp_endofpacket
-	wire          arm_irq_avalon_0_avalon_slave_0_burst_adapter_source0_valid;         // arm_irq_avalon_0_avalon_slave_0_burst_adapter:source0_valid -> arm_irq_avalon_0_avalon_slave_0_agent:cp_valid
-	wire   [93:0] arm_irq_avalon_0_avalon_slave_0_burst_adapter_source0_data;          // arm_irq_avalon_0_avalon_slave_0_burst_adapter:source0_data -> arm_irq_avalon_0_avalon_slave_0_agent:cp_data
-	wire          arm_irq_avalon_0_avalon_slave_0_burst_adapter_source0_ready;         // arm_irq_avalon_0_avalon_slave_0_agent:cp_ready -> arm_irq_avalon_0_avalon_slave_0_burst_adapter:source0_ready
-	wire    [1:0] arm_irq_avalon_0_avalon_slave_0_burst_adapter_source0_channel;       // arm_irq_avalon_0_avalon_slave_0_burst_adapter:source0_channel -> arm_irq_avalon_0_avalon_slave_0_agent:cp_channel
-	wire          arm_irq_avalon_0_avalon_slave_0_burst_adapter_source0_startofpacket; // arm_irq_avalon_0_avalon_slave_0_burst_adapter:source0_startofpacket -> arm_irq_avalon_0_avalon_slave_0_agent:cp_startofpacket
-	wire          arm_irq_avalon_0_avalon_slave_0_burst_adapter_source0_endofpacket;   // arm_irq_avalon_0_avalon_slave_0_burst_adapter:source0_endofpacket -> arm_irq_avalon_0_avalon_slave_0_agent:cp_endofpacket
-	wire          cmd_demux_src0_valid;                                                // cmd_demux:src0_valid -> cmd_mux:sink0_valid
-	wire  [120:0] cmd_demux_src0_data;                                                 // cmd_demux:src0_data -> cmd_mux:sink0_data
-	wire          cmd_demux_src0_ready;                                                // cmd_mux:sink0_ready -> cmd_demux:src0_ready
-	wire    [1:0] cmd_demux_src0_channel;                                              // cmd_demux:src0_channel -> cmd_mux:sink0_channel
-	wire          cmd_demux_src0_startofpacket;                                        // cmd_demux:src0_startofpacket -> cmd_mux:sink0_startofpacket
-	wire          cmd_demux_src0_endofpacket;                                          // cmd_demux:src0_endofpacket -> cmd_mux:sink0_endofpacket
-	wire          cmd_demux_src1_valid;                                                // cmd_demux:src1_valid -> cmd_mux_001:sink0_valid
-	wire  [120:0] cmd_demux_src1_data;                                                 // cmd_demux:src1_data -> cmd_mux_001:sink0_data
-	wire          cmd_demux_src1_ready;                                                // cmd_mux_001:sink0_ready -> cmd_demux:src1_ready
-	wire    [1:0] cmd_demux_src1_channel;                                              // cmd_demux:src1_channel -> cmd_mux_001:sink0_channel
-	wire          cmd_demux_src1_startofpacket;                                        // cmd_demux:src1_startofpacket -> cmd_mux_001:sink0_startofpacket
-	wire          cmd_demux_src1_endofpacket;                                          // cmd_demux:src1_endofpacket -> cmd_mux_001:sink0_endofpacket
-	wire          cmd_demux_001_src0_valid;                                            // cmd_demux_001:src0_valid -> cmd_mux:sink1_valid
-	wire  [120:0] cmd_demux_001_src0_data;                                             // cmd_demux_001:src0_data -> cmd_mux:sink1_data
-	wire          cmd_demux_001_src0_ready;                                            // cmd_mux:sink1_ready -> cmd_demux_001:src0_ready
-	wire    [1:0] cmd_demux_001_src0_channel;                                          // cmd_demux_001:src0_channel -> cmd_mux:sink1_channel
-	wire          cmd_demux_001_src0_startofpacket;                                    // cmd_demux_001:src0_startofpacket -> cmd_mux:sink1_startofpacket
-	wire          cmd_demux_001_src0_endofpacket;                                      // cmd_demux_001:src0_endofpacket -> cmd_mux:sink1_endofpacket
-	wire          cmd_demux_001_src1_valid;                                            // cmd_demux_001:src1_valid -> cmd_mux_001:sink1_valid
-	wire  [120:0] cmd_demux_001_src1_data;                                             // cmd_demux_001:src1_data -> cmd_mux_001:sink1_data
-	wire          cmd_demux_001_src1_ready;                                            // cmd_mux_001:sink1_ready -> cmd_demux_001:src1_ready
-	wire    [1:0] cmd_demux_001_src1_channel;                                          // cmd_demux_001:src1_channel -> cmd_mux_001:sink1_channel
-	wire          cmd_demux_001_src1_startofpacket;                                    // cmd_demux_001:src1_startofpacket -> cmd_mux_001:sink1_startofpacket
-	wire          cmd_demux_001_src1_endofpacket;                                      // cmd_demux_001:src1_endofpacket -> cmd_mux_001:sink1_endofpacket
-	wire          rsp_demux_src0_valid;                                                // rsp_demux:src0_valid -> rsp_mux:sink0_valid
-	wire  [120:0] rsp_demux_src0_data;                                                 // rsp_demux:src0_data -> rsp_mux:sink0_data
-	wire          rsp_demux_src0_ready;                                                // rsp_mux:sink0_ready -> rsp_demux:src0_ready
-	wire    [1:0] rsp_demux_src0_channel;                                              // rsp_demux:src0_channel -> rsp_mux:sink0_channel
-	wire          rsp_demux_src0_startofpacket;                                        // rsp_demux:src0_startofpacket -> rsp_mux:sink0_startofpacket
-	wire          rsp_demux_src0_endofpacket;                                          // rsp_demux:src0_endofpacket -> rsp_mux:sink0_endofpacket
-	wire          rsp_demux_src1_valid;                                                // rsp_demux:src1_valid -> rsp_mux_001:sink0_valid
-	wire  [120:0] rsp_demux_src1_data;                                                 // rsp_demux:src1_data -> rsp_mux_001:sink0_data
-	wire          rsp_demux_src1_ready;                                                // rsp_mux_001:sink0_ready -> rsp_demux:src1_ready
-	wire    [1:0] rsp_demux_src1_channel;                                              // rsp_demux:src1_channel -> rsp_mux_001:sink0_channel
-	wire          rsp_demux_src1_startofpacket;                                        // rsp_demux:src1_startofpacket -> rsp_mux_001:sink0_startofpacket
-	wire          rsp_demux_src1_endofpacket;                                          // rsp_demux:src1_endofpacket -> rsp_mux_001:sink0_endofpacket
-	wire          rsp_demux_001_src0_valid;                                            // rsp_demux_001:src0_valid -> rsp_mux:sink1_valid
-	wire  [120:0] rsp_demux_001_src0_data;                                             // rsp_demux_001:src0_data -> rsp_mux:sink1_data
-	wire          rsp_demux_001_src0_ready;                                            // rsp_mux:sink1_ready -> rsp_demux_001:src0_ready
-	wire    [1:0] rsp_demux_001_src0_channel;                                          // rsp_demux_001:src0_channel -> rsp_mux:sink1_channel
-	wire          rsp_demux_001_src0_startofpacket;                                    // rsp_demux_001:src0_startofpacket -> rsp_mux:sink1_startofpacket
-	wire          rsp_demux_001_src0_endofpacket;                                      // rsp_demux_001:src0_endofpacket -> rsp_mux:sink1_endofpacket
-	wire          rsp_demux_001_src1_valid;                                            // rsp_demux_001:src1_valid -> rsp_mux_001:sink1_valid
-	wire  [120:0] rsp_demux_001_src1_data;                                             // rsp_demux_001:src1_data -> rsp_mux_001:sink1_data
-	wire          rsp_demux_001_src1_ready;                                            // rsp_mux_001:sink1_ready -> rsp_demux_001:src1_ready
-	wire    [1:0] rsp_demux_001_src1_channel;                                          // rsp_demux_001:src1_channel -> rsp_mux_001:sink1_channel
-	wire          rsp_demux_001_src1_startofpacket;                                    // rsp_demux_001:src1_startofpacket -> rsp_mux_001:sink1_startofpacket
-	wire          rsp_demux_001_src1_endofpacket;                                      // rsp_demux_001:src1_endofpacket -> rsp_mux_001:sink1_endofpacket
-	wire          router_002_src_valid;                                                // router_002:src_valid -> hybridcpu0_avalon_slave_0_rsp_width_adapter:in_valid
-	wire  [102:0] router_002_src_data;                                                 // router_002:src_data -> hybridcpu0_avalon_slave_0_rsp_width_adapter:in_data
-	wire          router_002_src_ready;                                                // hybridcpu0_avalon_slave_0_rsp_width_adapter:in_ready -> router_002:src_ready
-	wire    [1:0] router_002_src_channel;                                              // router_002:src_channel -> hybridcpu0_avalon_slave_0_rsp_width_adapter:in_channel
-	wire          router_002_src_startofpacket;                                        // router_002:src_startofpacket -> hybridcpu0_avalon_slave_0_rsp_width_adapter:in_startofpacket
-	wire          router_002_src_endofpacket;                                          // router_002:src_endofpacket -> hybridcpu0_avalon_slave_0_rsp_width_adapter:in_endofpacket
-	wire          hybridcpu0_avalon_slave_0_rsp_width_adapter_src_valid;               // hybridcpu0_avalon_slave_0_rsp_width_adapter:out_valid -> rsp_demux:sink_valid
-	wire  [120:0] hybridcpu0_avalon_slave_0_rsp_width_adapter_src_data;                // hybridcpu0_avalon_slave_0_rsp_width_adapter:out_data -> rsp_demux:sink_data
-	wire          hybridcpu0_avalon_slave_0_rsp_width_adapter_src_ready;               // rsp_demux:sink_ready -> hybridcpu0_avalon_slave_0_rsp_width_adapter:out_ready
-	wire    [1:0] hybridcpu0_avalon_slave_0_rsp_width_adapter_src_channel;             // hybridcpu0_avalon_slave_0_rsp_width_adapter:out_channel -> rsp_demux:sink_channel
-	wire          hybridcpu0_avalon_slave_0_rsp_width_adapter_src_startofpacket;       // hybridcpu0_avalon_slave_0_rsp_width_adapter:out_startofpacket -> rsp_demux:sink_startofpacket
-	wire          hybridcpu0_avalon_slave_0_rsp_width_adapter_src_endofpacket;         // hybridcpu0_avalon_slave_0_rsp_width_adapter:out_endofpacket -> rsp_demux:sink_endofpacket
-	wire          router_003_src_valid;                                                // router_003:src_valid -> arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:in_valid
-	wire   [93:0] router_003_src_data;                                                 // router_003:src_data -> arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:in_data
-	wire          router_003_src_ready;                                                // arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:in_ready -> router_003:src_ready
-	wire    [1:0] router_003_src_channel;                                              // router_003:src_channel -> arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:in_channel
-	wire          router_003_src_startofpacket;                                        // router_003:src_startofpacket -> arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:in_startofpacket
-	wire          router_003_src_endofpacket;                                          // router_003:src_endofpacket -> arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:in_endofpacket
-	wire          arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_valid;         // arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:out_valid -> rsp_demux_001:sink_valid
-	wire  [120:0] arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_data;          // arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:out_data -> rsp_demux_001:sink_data
-	wire          arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_ready;         // rsp_demux_001:sink_ready -> arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:out_ready
-	wire    [1:0] arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_channel;       // arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:out_channel -> rsp_demux_001:sink_channel
-	wire          arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_startofpacket; // arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:out_startofpacket -> rsp_demux_001:sink_startofpacket
-	wire          arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_endofpacket;   // arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:out_endofpacket -> rsp_demux_001:sink_endofpacket
-	wire          cmd_mux_src_valid;                                                   // cmd_mux:src_valid -> hybridcpu0_avalon_slave_0_cmd_width_adapter:in_valid
-	wire  [120:0] cmd_mux_src_data;                                                    // cmd_mux:src_data -> hybridcpu0_avalon_slave_0_cmd_width_adapter:in_data
-	wire          cmd_mux_src_ready;                                                   // hybridcpu0_avalon_slave_0_cmd_width_adapter:in_ready -> cmd_mux:src_ready
-	wire    [1:0] cmd_mux_src_channel;                                                 // cmd_mux:src_channel -> hybridcpu0_avalon_slave_0_cmd_width_adapter:in_channel
-	wire          cmd_mux_src_startofpacket;                                           // cmd_mux:src_startofpacket -> hybridcpu0_avalon_slave_0_cmd_width_adapter:in_startofpacket
-	wire          cmd_mux_src_endofpacket;                                             // cmd_mux:src_endofpacket -> hybridcpu0_avalon_slave_0_cmd_width_adapter:in_endofpacket
-	wire          hybridcpu0_avalon_slave_0_cmd_width_adapter_src_valid;               // hybridcpu0_avalon_slave_0_cmd_width_adapter:out_valid -> hybridcpu0_avalon_slave_0_burst_adapter:sink0_valid
-	wire  [102:0] hybridcpu0_avalon_slave_0_cmd_width_adapter_src_data;                // hybridcpu0_avalon_slave_0_cmd_width_adapter:out_data -> hybridcpu0_avalon_slave_0_burst_adapter:sink0_data
-	wire          hybridcpu0_avalon_slave_0_cmd_width_adapter_src_ready;               // hybridcpu0_avalon_slave_0_burst_adapter:sink0_ready -> hybridcpu0_avalon_slave_0_cmd_width_adapter:out_ready
-	wire    [1:0] hybridcpu0_avalon_slave_0_cmd_width_adapter_src_channel;             // hybridcpu0_avalon_slave_0_cmd_width_adapter:out_channel -> hybridcpu0_avalon_slave_0_burst_adapter:sink0_channel
-	wire          hybridcpu0_avalon_slave_0_cmd_width_adapter_src_startofpacket;       // hybridcpu0_avalon_slave_0_cmd_width_adapter:out_startofpacket -> hybridcpu0_avalon_slave_0_burst_adapter:sink0_startofpacket
-	wire          hybridcpu0_avalon_slave_0_cmd_width_adapter_src_endofpacket;         // hybridcpu0_avalon_slave_0_cmd_width_adapter:out_endofpacket -> hybridcpu0_avalon_slave_0_burst_adapter:sink0_endofpacket
-	wire          cmd_mux_001_src_valid;                                               // cmd_mux_001:src_valid -> arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:in_valid
-	wire  [120:0] cmd_mux_001_src_data;                                                // cmd_mux_001:src_data -> arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:in_data
-	wire          cmd_mux_001_src_ready;                                               // arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:in_ready -> cmd_mux_001:src_ready
-	wire    [1:0] cmd_mux_001_src_channel;                                             // cmd_mux_001:src_channel -> arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:in_channel
-	wire          cmd_mux_001_src_startofpacket;                                       // cmd_mux_001:src_startofpacket -> arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:in_startofpacket
-	wire          cmd_mux_001_src_endofpacket;                                         // cmd_mux_001:src_endofpacket -> arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:in_endofpacket
-	wire          arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_valid;         // arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:out_valid -> arm_irq_avalon_0_avalon_slave_0_burst_adapter:sink0_valid
-	wire   [93:0] arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_data;          // arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:out_data -> arm_irq_avalon_0_avalon_slave_0_burst_adapter:sink0_data
-	wire          arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_ready;         // arm_irq_avalon_0_avalon_slave_0_burst_adapter:sink0_ready -> arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:out_ready
-	wire    [1:0] arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_channel;       // arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:out_channel -> arm_irq_avalon_0_avalon_slave_0_burst_adapter:sink0_channel
-	wire          arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_startofpacket; // arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:out_startofpacket -> arm_irq_avalon_0_avalon_slave_0_burst_adapter:sink0_startofpacket
-	wire          arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_endofpacket;   // arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:out_endofpacket -> arm_irq_avalon_0_avalon_slave_0_burst_adapter:sink0_endofpacket
-	wire    [1:0] hps_0_h2f_axi_master_wr_limiter_cmd_valid_data;                      // hps_0_h2f_axi_master_wr_limiter:cmd_src_valid -> cmd_demux:sink_valid
-	wire    [1:0] hps_0_h2f_axi_master_rd_limiter_cmd_valid_data;                      // hps_0_h2f_axi_master_rd_limiter:cmd_src_valid -> cmd_demux_001:sink_valid
-	wire          hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_valid;                // hybridcpu0_avalon_slave_0_agent_rdata_fifo:out_valid -> avalon_st_adapter:in_0_valid
-	wire   [17:0] hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_data;                 // hybridcpu0_avalon_slave_0_agent_rdata_fifo:out_data -> avalon_st_adapter:in_0_data
-	wire          hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_ready;                // avalon_st_adapter:in_0_ready -> hybridcpu0_avalon_slave_0_agent_rdata_fifo:out_ready
-	wire          avalon_st_adapter_out_0_valid;                                       // avalon_st_adapter:out_0_valid -> hybridcpu0_avalon_slave_0_agent:rdata_fifo_sink_valid
-	wire   [17:0] avalon_st_adapter_out_0_data;                                        // avalon_st_adapter:out_0_data -> hybridcpu0_avalon_slave_0_agent:rdata_fifo_sink_data
-	wire          avalon_st_adapter_out_0_ready;                                       // hybridcpu0_avalon_slave_0_agent:rdata_fifo_sink_ready -> avalon_st_adapter:out_0_ready
-	wire    [0:0] avalon_st_adapter_out_0_error;                                       // avalon_st_adapter:out_0_error -> hybridcpu0_avalon_slave_0_agent:rdata_fifo_sink_error
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_valid;          // arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo:out_valid -> avalon_st_adapter_001:in_0_valid
-	wire    [9:0] arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_data;           // arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo:out_data -> avalon_st_adapter_001:in_0_data
-	wire          arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_ready;          // avalon_st_adapter_001:in_0_ready -> arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo:out_ready
-	wire          avalon_st_adapter_001_out_0_valid;                                   // avalon_st_adapter_001:out_0_valid -> arm_irq_avalon_0_avalon_slave_0_agent:rdata_fifo_sink_valid
-	wire    [9:0] avalon_st_adapter_001_out_0_data;                                    // avalon_st_adapter_001:out_0_data -> arm_irq_avalon_0_avalon_slave_0_agent:rdata_fifo_sink_data
-	wire          avalon_st_adapter_001_out_0_ready;                                   // arm_irq_avalon_0_avalon_slave_0_agent:rdata_fifo_sink_ready -> avalon_st_adapter_001:out_0_ready
-	wire    [0:0] avalon_st_adapter_001_out_0_error;                                   // avalon_st_adapter_001:out_0_error -> arm_irq_avalon_0_avalon_slave_0_agent:rdata_fifo_sink_error
-
-	altera_merlin_slave_translator #(
-		.AV_ADDRESS_W                   (23),
-		.AV_DATA_W                      (16),
-		.UAV_DATA_W                     (16),
-		.AV_BURSTCOUNT_W                (1),
-		.AV_BYTEENABLE_W                (2),
-		.UAV_BYTEENABLE_W               (2),
-		.UAV_ADDRESS_W                  (30),
-		.UAV_BURSTCOUNT_W               (2),
-		.AV_READLATENCY                 (0),
-		.USE_READDATAVALID              (0),
-		.USE_WAITREQUEST                (1),
-		.USE_UAV_CLKEN                  (0),
-		.USE_READRESPONSE               (0),
-		.USE_WRITERESPONSE              (0),
-		.AV_SYMBOLS_PER_WORD            (2),
-		.AV_ADDRESS_SYMBOLS             (0),
-		.AV_BURSTCOUNT_SYMBOLS          (0),
-		.AV_CONSTANT_BURST_BEHAVIOR     (0),
-		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
-		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
-		.CHIPSELECT_THROUGH_READLATENCY (0),
-		.AV_READ_WAIT_CYCLES            (1),
-		.AV_WRITE_WAIT_CYCLES           (0),
-		.AV_SETUP_WAIT_CYCLES           (0),
-		.AV_DATA_HOLD_CYCLES            (0)
-	) hybridcpu0_avalon_slave_0_translator (
-		.clk                    (clk_0_clk_clk),                                    //                      clk.clk
-		.reset                  (hybridcpu0_reset_reset_bridge_in_reset_reset),     //                    reset.reset
-		.uav_address            (hybridcpu0_avalon_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
-		.uav_burstcount         (hybridcpu0_avalon_slave_0_agent_m0_burstcount),    //                         .burstcount
-		.uav_read               (hybridcpu0_avalon_slave_0_agent_m0_read),          //                         .read
-		.uav_write              (hybridcpu0_avalon_slave_0_agent_m0_write),         //                         .write
-		.uav_waitrequest        (hybridcpu0_avalon_slave_0_agent_m0_waitrequest),   //                         .waitrequest
-		.uav_readdatavalid      (hybridcpu0_avalon_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
-		.uav_byteenable         (hybridcpu0_avalon_slave_0_agent_m0_byteenable),    //                         .byteenable
-		.uav_readdata           (hybridcpu0_avalon_slave_0_agent_m0_readdata),      //                         .readdata
-		.uav_writedata          (hybridcpu0_avalon_slave_0_agent_m0_writedata),     //                         .writedata
-		.uav_lock               (hybridcpu0_avalon_slave_0_agent_m0_lock),          //                         .lock
-		.uav_debugaccess        (hybridcpu0_avalon_slave_0_agent_m0_debugaccess),   //                         .debugaccess
-		.av_address             (hybridcpu0_avalon_slave_0_address),                //      avalon_anti_slave_0.address
-		.av_write               (hybridcpu0_avalon_slave_0_write),                  //                         .write
-		.av_read                (hybridcpu0_avalon_slave_0_read),                   //                         .read
-		.av_readdata            (hybridcpu0_avalon_slave_0_readdata),               //                         .readdata
-		.av_writedata           (hybridcpu0_avalon_slave_0_writedata),              //                         .writedata
-		.av_byteenable          (hybridcpu0_avalon_slave_0_byteenable),             //                         .byteenable
-		.av_waitrequest         (hybridcpu0_avalon_slave_0_waitrequest),            //                         .waitrequest
-		.av_chipselect          (hybridcpu0_avalon_slave_0_chipselect),             //                         .chipselect
-		.av_begintransfer       (),                                                 //              (terminated)
-		.av_beginbursttransfer  (),                                                 //              (terminated)
-		.av_burstcount          (),                                                 //              (terminated)
-		.av_readdatavalid       (1'b0),                                             //              (terminated)
-		.av_writebyteenable     (),                                                 //              (terminated)
-		.av_lock                (),                                                 //              (terminated)
-		.av_clken               (),                                                 //              (terminated)
-		.uav_clken              (1'b0),                                             //              (terminated)
-		.av_debugaccess         (),                                                 //              (terminated)
-		.av_outputenable        (),                                                 //              (terminated)
-		.uav_response           (),                                                 //              (terminated)
-		.av_response            (2'b00),                                            //              (terminated)
-		.uav_writeresponsevalid (),                                                 //              (terminated)
-		.av_writeresponsevalid  (1'b0)                                              //              (terminated)
-	);
+	wire    [7:0] arm_irq_avalon_0_avalon_slave_0_agent_m0_readdata;                    // arm_irq_avalon_0_avalon_slave_0_translator:uav_readdata -> arm_irq_avalon_0_avalon_slave_0_agent:m0_readdata
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_m0_waitrequest;                 // arm_irq_avalon_0_avalon_slave_0_translator:uav_waitrequest -> arm_irq_avalon_0_avalon_slave_0_agent:m0_waitrequest
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_m0_debugaccess;                 // arm_irq_avalon_0_avalon_slave_0_agent:m0_debugaccess -> arm_irq_avalon_0_avalon_slave_0_translator:uav_debugaccess
+	wire   [29:0] arm_irq_avalon_0_avalon_slave_0_agent_m0_address;                     // arm_irq_avalon_0_avalon_slave_0_agent:m0_address -> arm_irq_avalon_0_avalon_slave_0_translator:uav_address
+	wire    [0:0] arm_irq_avalon_0_avalon_slave_0_agent_m0_byteenable;                  // arm_irq_avalon_0_avalon_slave_0_agent:m0_byteenable -> arm_irq_avalon_0_avalon_slave_0_translator:uav_byteenable
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_m0_read;                        // arm_irq_avalon_0_avalon_slave_0_agent:m0_read -> arm_irq_avalon_0_avalon_slave_0_translator:uav_read
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_m0_readdatavalid;               // arm_irq_avalon_0_avalon_slave_0_translator:uav_readdatavalid -> arm_irq_avalon_0_avalon_slave_0_agent:m0_readdatavalid
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_m0_lock;                        // arm_irq_avalon_0_avalon_slave_0_agent:m0_lock -> arm_irq_avalon_0_avalon_slave_0_translator:uav_lock
+	wire    [7:0] arm_irq_avalon_0_avalon_slave_0_agent_m0_writedata;                   // arm_irq_avalon_0_avalon_slave_0_agent:m0_writedata -> arm_irq_avalon_0_avalon_slave_0_translator:uav_writedata
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_m0_write;                       // arm_irq_avalon_0_avalon_slave_0_agent:m0_write -> arm_irq_avalon_0_avalon_slave_0_translator:uav_write
+	wire    [0:0] arm_irq_avalon_0_avalon_slave_0_agent_m0_burstcount;                  // arm_irq_avalon_0_avalon_slave_0_agent:m0_burstcount -> arm_irq_avalon_0_avalon_slave_0_translator:uav_burstcount
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_rf_source_valid;                // arm_irq_avalon_0_avalon_slave_0_agent:rf_source_valid -> arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:in_valid
+	wire   [96:0] arm_irq_avalon_0_avalon_slave_0_agent_rf_source_data;                 // arm_irq_avalon_0_avalon_slave_0_agent:rf_source_data -> arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:in_data
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_rf_source_ready;                // arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:in_ready -> arm_irq_avalon_0_avalon_slave_0_agent:rf_source_ready
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_rf_source_startofpacket;        // arm_irq_avalon_0_avalon_slave_0_agent:rf_source_startofpacket -> arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:in_startofpacket
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_rf_source_endofpacket;          // arm_irq_avalon_0_avalon_slave_0_agent:rf_source_endofpacket -> arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:in_endofpacket
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo_out_valid;             // arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:out_valid -> arm_irq_avalon_0_avalon_slave_0_agent:rf_sink_valid
+	wire   [96:0] arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo_out_data;              // arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:out_data -> arm_irq_avalon_0_avalon_slave_0_agent:rf_sink_data
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo_out_ready;             // arm_irq_avalon_0_avalon_slave_0_agent:rf_sink_ready -> arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:out_ready
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo_out_startofpacket;     // arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:out_startofpacket -> arm_irq_avalon_0_avalon_slave_0_agent:rf_sink_startofpacket
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo_out_endofpacket;       // arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo:out_endofpacket -> arm_irq_avalon_0_avalon_slave_0_agent:rf_sink_endofpacket
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_src_valid;           // arm_irq_avalon_0_avalon_slave_0_agent:rdata_fifo_src_valid -> arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo:in_valid
+	wire    [9:0] arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_src_data;            // arm_irq_avalon_0_avalon_slave_0_agent:rdata_fifo_src_data -> arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo:in_data
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_src_ready;           // arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo:in_ready -> arm_irq_avalon_0_avalon_slave_0_agent:rdata_fifo_src_ready
+	wire   [31:0] arm_regs_avalon_0_avalon_slave_0_agent_m0_readdata;                   // arm_regs_avalon_0_avalon_slave_0_translator:uav_readdata -> arm_regs_avalon_0_avalon_slave_0_agent:m0_readdata
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_m0_waitrequest;                // arm_regs_avalon_0_avalon_slave_0_translator:uav_waitrequest -> arm_regs_avalon_0_avalon_slave_0_agent:m0_waitrequest
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_m0_debugaccess;                // arm_regs_avalon_0_avalon_slave_0_agent:m0_debugaccess -> arm_regs_avalon_0_avalon_slave_0_translator:uav_debugaccess
+	wire   [29:0] arm_regs_avalon_0_avalon_slave_0_agent_m0_address;                    // arm_regs_avalon_0_avalon_slave_0_agent:m0_address -> arm_regs_avalon_0_avalon_slave_0_translator:uav_address
+	wire    [3:0] arm_regs_avalon_0_avalon_slave_0_agent_m0_byteenable;                 // arm_regs_avalon_0_avalon_slave_0_agent:m0_byteenable -> arm_regs_avalon_0_avalon_slave_0_translator:uav_byteenable
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_m0_read;                       // arm_regs_avalon_0_avalon_slave_0_agent:m0_read -> arm_regs_avalon_0_avalon_slave_0_translator:uav_read
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_m0_readdatavalid;              // arm_regs_avalon_0_avalon_slave_0_translator:uav_readdatavalid -> arm_regs_avalon_0_avalon_slave_0_agent:m0_readdatavalid
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_m0_lock;                       // arm_regs_avalon_0_avalon_slave_0_agent:m0_lock -> arm_regs_avalon_0_avalon_slave_0_translator:uav_lock
+	wire   [31:0] arm_regs_avalon_0_avalon_slave_0_agent_m0_writedata;                  // arm_regs_avalon_0_avalon_slave_0_agent:m0_writedata -> arm_regs_avalon_0_avalon_slave_0_translator:uav_writedata
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_m0_write;                      // arm_regs_avalon_0_avalon_slave_0_agent:m0_write -> arm_regs_avalon_0_avalon_slave_0_translator:uav_write
+	wire    [2:0] arm_regs_avalon_0_avalon_slave_0_agent_m0_burstcount;                 // arm_regs_avalon_0_avalon_slave_0_agent:m0_burstcount -> arm_regs_avalon_0_avalon_slave_0_translator:uav_burstcount
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_rf_source_valid;               // arm_regs_avalon_0_avalon_slave_0_agent:rf_source_valid -> arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo:in_valid
+	wire  [123:0] arm_regs_avalon_0_avalon_slave_0_agent_rf_source_data;                // arm_regs_avalon_0_avalon_slave_0_agent:rf_source_data -> arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo:in_data
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_rf_source_ready;               // arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo:in_ready -> arm_regs_avalon_0_avalon_slave_0_agent:rf_source_ready
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_rf_source_startofpacket;       // arm_regs_avalon_0_avalon_slave_0_agent:rf_source_startofpacket -> arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo:in_startofpacket
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_rf_source_endofpacket;         // arm_regs_avalon_0_avalon_slave_0_agent:rf_source_endofpacket -> arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo:in_endofpacket
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo_out_valid;            // arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo:out_valid -> arm_regs_avalon_0_avalon_slave_0_agent:rf_sink_valid
+	wire  [123:0] arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo_out_data;             // arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo:out_data -> arm_regs_avalon_0_avalon_slave_0_agent:rf_sink_data
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo_out_ready;            // arm_regs_avalon_0_avalon_slave_0_agent:rf_sink_ready -> arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo:out_ready
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo_out_startofpacket;    // arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo:out_startofpacket -> arm_regs_avalon_0_avalon_slave_0_agent:rf_sink_startofpacket
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo_out_endofpacket;      // arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo:out_endofpacket -> arm_regs_avalon_0_avalon_slave_0_agent:rf_sink_endofpacket
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_src_valid;          // arm_regs_avalon_0_avalon_slave_0_agent:rdata_fifo_src_valid -> arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo:in_valid
+	wire   [33:0] arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_src_data;           // arm_regs_avalon_0_avalon_slave_0_agent:rdata_fifo_src_data -> arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo:in_data
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_src_ready;          // arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo:in_ready -> arm_regs_avalon_0_avalon_slave_0_agent:rdata_fifo_src_ready
+	wire   [31:0] hybridcpu0_avalon_slave_0_agent_m0_readdata;                          // hybridcpu0_avalon_slave_0_translator:uav_readdata -> hybridcpu0_avalon_slave_0_agent:m0_readdata
+	wire          hybridcpu0_avalon_slave_0_agent_m0_waitrequest;                       // hybridcpu0_avalon_slave_0_translator:uav_waitrequest -> hybridcpu0_avalon_slave_0_agent:m0_waitrequest
+	wire          hybridcpu0_avalon_slave_0_agent_m0_debugaccess;                       // hybridcpu0_avalon_slave_0_agent:m0_debugaccess -> hybridcpu0_avalon_slave_0_translator:uav_debugaccess
+	wire   [29:0] hybridcpu0_avalon_slave_0_agent_m0_address;                           // hybridcpu0_avalon_slave_0_agent:m0_address -> hybridcpu0_avalon_slave_0_translator:uav_address
+	wire    [3:0] hybridcpu0_avalon_slave_0_agent_m0_byteenable;                        // hybridcpu0_avalon_slave_0_agent:m0_byteenable -> hybridcpu0_avalon_slave_0_translator:uav_byteenable
+	wire          hybridcpu0_avalon_slave_0_agent_m0_read;                              // hybridcpu0_avalon_slave_0_agent:m0_read -> hybridcpu0_avalon_slave_0_translator:uav_read
+	wire          hybridcpu0_avalon_slave_0_agent_m0_readdatavalid;                     // hybridcpu0_avalon_slave_0_translator:uav_readdatavalid -> hybridcpu0_avalon_slave_0_agent:m0_readdatavalid
+	wire          hybridcpu0_avalon_slave_0_agent_m0_lock;                              // hybridcpu0_avalon_slave_0_agent:m0_lock -> hybridcpu0_avalon_slave_0_translator:uav_lock
+	wire   [31:0] hybridcpu0_avalon_slave_0_agent_m0_writedata;                         // hybridcpu0_avalon_slave_0_agent:m0_writedata -> hybridcpu0_avalon_slave_0_translator:uav_writedata
+	wire          hybridcpu0_avalon_slave_0_agent_m0_write;                             // hybridcpu0_avalon_slave_0_agent:m0_write -> hybridcpu0_avalon_slave_0_translator:uav_write
+	wire    [2:0] hybridcpu0_avalon_slave_0_agent_m0_burstcount;                        // hybridcpu0_avalon_slave_0_agent:m0_burstcount -> hybridcpu0_avalon_slave_0_translator:uav_burstcount
+	wire          hybridcpu0_avalon_slave_0_agent_rf_source_valid;                      // hybridcpu0_avalon_slave_0_agent:rf_source_valid -> hybridcpu0_avalon_slave_0_agent_rsp_fifo:in_valid
+	wire  [123:0] hybridcpu0_avalon_slave_0_agent_rf_source_data;                       // hybridcpu0_avalon_slave_0_agent:rf_source_data -> hybridcpu0_avalon_slave_0_agent_rsp_fifo:in_data
+	wire          hybridcpu0_avalon_slave_0_agent_rf_source_ready;                      // hybridcpu0_avalon_slave_0_agent_rsp_fifo:in_ready -> hybridcpu0_avalon_slave_0_agent:rf_source_ready
+	wire          hybridcpu0_avalon_slave_0_agent_rf_source_startofpacket;              // hybridcpu0_avalon_slave_0_agent:rf_source_startofpacket -> hybridcpu0_avalon_slave_0_agent_rsp_fifo:in_startofpacket
+	wire          hybridcpu0_avalon_slave_0_agent_rf_source_endofpacket;                // hybridcpu0_avalon_slave_0_agent:rf_source_endofpacket -> hybridcpu0_avalon_slave_0_agent_rsp_fifo:in_endofpacket
+	wire          hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_valid;                   // hybridcpu0_avalon_slave_0_agent_rsp_fifo:out_valid -> hybridcpu0_avalon_slave_0_agent:rf_sink_valid
+	wire  [123:0] hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_data;                    // hybridcpu0_avalon_slave_0_agent_rsp_fifo:out_data -> hybridcpu0_avalon_slave_0_agent:rf_sink_data
+	wire          hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_ready;                   // hybridcpu0_avalon_slave_0_agent:rf_sink_ready -> hybridcpu0_avalon_slave_0_agent_rsp_fifo:out_ready
+	wire          hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_startofpacket;           // hybridcpu0_avalon_slave_0_agent_rsp_fifo:out_startofpacket -> hybridcpu0_avalon_slave_0_agent:rf_sink_startofpacket
+	wire          hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_endofpacket;             // hybridcpu0_avalon_slave_0_agent_rsp_fifo:out_endofpacket -> hybridcpu0_avalon_slave_0_agent:rf_sink_endofpacket
+	wire          hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_valid;                 // hybridcpu0_avalon_slave_0_agent:rdata_fifo_src_valid -> hybridcpu0_avalon_slave_0_agent_rdata_fifo:in_valid
+	wire   [33:0] hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_data;                  // hybridcpu0_avalon_slave_0_agent:rdata_fifo_src_data -> hybridcpu0_avalon_slave_0_agent_rdata_fifo:in_data
+	wire          hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_ready;                 // hybridcpu0_avalon_slave_0_agent_rdata_fifo:in_ready -> hybridcpu0_avalon_slave_0_agent:rdata_fifo_src_ready
+	wire          hps_0_h2f_axi_master_agent_write_cp_valid;                            // hps_0_h2f_axi_master_agent:write_cp_valid -> router:sink_valid
+	wire  [122:0] hps_0_h2f_axi_master_agent_write_cp_data;                             // hps_0_h2f_axi_master_agent:write_cp_data -> router:sink_data
+	wire          hps_0_h2f_axi_master_agent_write_cp_ready;                            // router:sink_ready -> hps_0_h2f_axi_master_agent:write_cp_ready
+	wire          hps_0_h2f_axi_master_agent_write_cp_startofpacket;                    // hps_0_h2f_axi_master_agent:write_cp_startofpacket -> router:sink_startofpacket
+	wire          hps_0_h2f_axi_master_agent_write_cp_endofpacket;                      // hps_0_h2f_axi_master_agent:write_cp_endofpacket -> router:sink_endofpacket
+	wire          hps_0_h2f_axi_master_agent_read_cp_valid;                             // hps_0_h2f_axi_master_agent:read_cp_valid -> router_001:sink_valid
+	wire  [122:0] hps_0_h2f_axi_master_agent_read_cp_data;                              // hps_0_h2f_axi_master_agent:read_cp_data -> router_001:sink_data
+	wire          hps_0_h2f_axi_master_agent_read_cp_ready;                             // router_001:sink_ready -> hps_0_h2f_axi_master_agent:read_cp_ready
+	wire          hps_0_h2f_axi_master_agent_read_cp_startofpacket;                     // hps_0_h2f_axi_master_agent:read_cp_startofpacket -> router_001:sink_startofpacket
+	wire          hps_0_h2f_axi_master_agent_read_cp_endofpacket;                       // hps_0_h2f_axi_master_agent:read_cp_endofpacket -> router_001:sink_endofpacket
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_rp_valid;                       // arm_irq_avalon_0_avalon_slave_0_agent:rp_valid -> router_002:sink_valid
+	wire   [95:0] arm_irq_avalon_0_avalon_slave_0_agent_rp_data;                        // arm_irq_avalon_0_avalon_slave_0_agent:rp_data -> router_002:sink_data
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_rp_ready;                       // router_002:sink_ready -> arm_irq_avalon_0_avalon_slave_0_agent:rp_ready
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_rp_startofpacket;               // arm_irq_avalon_0_avalon_slave_0_agent:rp_startofpacket -> router_002:sink_startofpacket
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_rp_endofpacket;                 // arm_irq_avalon_0_avalon_slave_0_agent:rp_endofpacket -> router_002:sink_endofpacket
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_rp_valid;                      // arm_regs_avalon_0_avalon_slave_0_agent:rp_valid -> router_003:sink_valid
+	wire  [122:0] arm_regs_avalon_0_avalon_slave_0_agent_rp_data;                       // arm_regs_avalon_0_avalon_slave_0_agent:rp_data -> router_003:sink_data
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_rp_ready;                      // router_003:sink_ready -> arm_regs_avalon_0_avalon_slave_0_agent:rp_ready
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_rp_startofpacket;              // arm_regs_avalon_0_avalon_slave_0_agent:rp_startofpacket -> router_003:sink_startofpacket
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_rp_endofpacket;                // arm_regs_avalon_0_avalon_slave_0_agent:rp_endofpacket -> router_003:sink_endofpacket
+	wire          router_003_src_valid;                                                 // router_003:src_valid -> rsp_demux_001:sink_valid
+	wire  [122:0] router_003_src_data;                                                  // router_003:src_data -> rsp_demux_001:sink_data
+	wire          router_003_src_ready;                                                 // rsp_demux_001:sink_ready -> router_003:src_ready
+	wire    [2:0] router_003_src_channel;                                               // router_003:src_channel -> rsp_demux_001:sink_channel
+	wire          router_003_src_startofpacket;                                         // router_003:src_startofpacket -> rsp_demux_001:sink_startofpacket
+	wire          router_003_src_endofpacket;                                           // router_003:src_endofpacket -> rsp_demux_001:sink_endofpacket
+	wire          hybridcpu0_avalon_slave_0_agent_rp_valid;                             // hybridcpu0_avalon_slave_0_agent:rp_valid -> router_004:sink_valid
+	wire  [122:0] hybridcpu0_avalon_slave_0_agent_rp_data;                              // hybridcpu0_avalon_slave_0_agent:rp_data -> router_004:sink_data
+	wire          hybridcpu0_avalon_slave_0_agent_rp_ready;                             // router_004:sink_ready -> hybridcpu0_avalon_slave_0_agent:rp_ready
+	wire          hybridcpu0_avalon_slave_0_agent_rp_startofpacket;                     // hybridcpu0_avalon_slave_0_agent:rp_startofpacket -> router_004:sink_startofpacket
+	wire          hybridcpu0_avalon_slave_0_agent_rp_endofpacket;                       // hybridcpu0_avalon_slave_0_agent:rp_endofpacket -> router_004:sink_endofpacket
+	wire          router_004_src_valid;                                                 // router_004:src_valid -> rsp_demux_002:sink_valid
+	wire  [122:0] router_004_src_data;                                                  // router_004:src_data -> rsp_demux_002:sink_data
+	wire          router_004_src_ready;                                                 // rsp_demux_002:sink_ready -> router_004:src_ready
+	wire    [2:0] router_004_src_channel;                                               // router_004:src_channel -> rsp_demux_002:sink_channel
+	wire          router_004_src_startofpacket;                                         // router_004:src_startofpacket -> rsp_demux_002:sink_startofpacket
+	wire          router_004_src_endofpacket;                                           // router_004:src_endofpacket -> rsp_demux_002:sink_endofpacket
+	wire          router_src_valid;                                                     // router:src_valid -> hps_0_h2f_axi_master_wr_limiter:cmd_sink_valid
+	wire  [122:0] router_src_data;                                                      // router:src_data -> hps_0_h2f_axi_master_wr_limiter:cmd_sink_data
+	wire          router_src_ready;                                                     // hps_0_h2f_axi_master_wr_limiter:cmd_sink_ready -> router:src_ready
+	wire    [2:0] router_src_channel;                                                   // router:src_channel -> hps_0_h2f_axi_master_wr_limiter:cmd_sink_channel
+	wire          router_src_startofpacket;                                             // router:src_startofpacket -> hps_0_h2f_axi_master_wr_limiter:cmd_sink_startofpacket
+	wire          router_src_endofpacket;                                               // router:src_endofpacket -> hps_0_h2f_axi_master_wr_limiter:cmd_sink_endofpacket
+	wire  [122:0] hps_0_h2f_axi_master_wr_limiter_cmd_src_data;                         // hps_0_h2f_axi_master_wr_limiter:cmd_src_data -> cmd_demux:sink_data
+	wire          hps_0_h2f_axi_master_wr_limiter_cmd_src_ready;                        // cmd_demux:sink_ready -> hps_0_h2f_axi_master_wr_limiter:cmd_src_ready
+	wire    [2:0] hps_0_h2f_axi_master_wr_limiter_cmd_src_channel;                      // hps_0_h2f_axi_master_wr_limiter:cmd_src_channel -> cmd_demux:sink_channel
+	wire          hps_0_h2f_axi_master_wr_limiter_cmd_src_startofpacket;                // hps_0_h2f_axi_master_wr_limiter:cmd_src_startofpacket -> cmd_demux:sink_startofpacket
+	wire          hps_0_h2f_axi_master_wr_limiter_cmd_src_endofpacket;                  // hps_0_h2f_axi_master_wr_limiter:cmd_src_endofpacket -> cmd_demux:sink_endofpacket
+	wire          rsp_mux_src_valid;                                                    // rsp_mux:src_valid -> hps_0_h2f_axi_master_wr_limiter:rsp_sink_valid
+	wire  [122:0] rsp_mux_src_data;                                                     // rsp_mux:src_data -> hps_0_h2f_axi_master_wr_limiter:rsp_sink_data
+	wire          rsp_mux_src_ready;                                                    // hps_0_h2f_axi_master_wr_limiter:rsp_sink_ready -> rsp_mux:src_ready
+	wire    [2:0] rsp_mux_src_channel;                                                  // rsp_mux:src_channel -> hps_0_h2f_axi_master_wr_limiter:rsp_sink_channel
+	wire          rsp_mux_src_startofpacket;                                            // rsp_mux:src_startofpacket -> hps_0_h2f_axi_master_wr_limiter:rsp_sink_startofpacket
+	wire          rsp_mux_src_endofpacket;                                              // rsp_mux:src_endofpacket -> hps_0_h2f_axi_master_wr_limiter:rsp_sink_endofpacket
+	wire          hps_0_h2f_axi_master_wr_limiter_rsp_src_valid;                        // hps_0_h2f_axi_master_wr_limiter:rsp_src_valid -> hps_0_h2f_axi_master_agent:write_rp_valid
+	wire  [122:0] hps_0_h2f_axi_master_wr_limiter_rsp_src_data;                         // hps_0_h2f_axi_master_wr_limiter:rsp_src_data -> hps_0_h2f_axi_master_agent:write_rp_data
+	wire          hps_0_h2f_axi_master_wr_limiter_rsp_src_ready;                        // hps_0_h2f_axi_master_agent:write_rp_ready -> hps_0_h2f_axi_master_wr_limiter:rsp_src_ready
+	wire    [2:0] hps_0_h2f_axi_master_wr_limiter_rsp_src_channel;                      // hps_0_h2f_axi_master_wr_limiter:rsp_src_channel -> hps_0_h2f_axi_master_agent:write_rp_channel
+	wire          hps_0_h2f_axi_master_wr_limiter_rsp_src_startofpacket;                // hps_0_h2f_axi_master_wr_limiter:rsp_src_startofpacket -> hps_0_h2f_axi_master_agent:write_rp_startofpacket
+	wire          hps_0_h2f_axi_master_wr_limiter_rsp_src_endofpacket;                  // hps_0_h2f_axi_master_wr_limiter:rsp_src_endofpacket -> hps_0_h2f_axi_master_agent:write_rp_endofpacket
+	wire          router_001_src_valid;                                                 // router_001:src_valid -> hps_0_h2f_axi_master_rd_limiter:cmd_sink_valid
+	wire  [122:0] router_001_src_data;                                                  // router_001:src_data -> hps_0_h2f_axi_master_rd_limiter:cmd_sink_data
+	wire          router_001_src_ready;                                                 // hps_0_h2f_axi_master_rd_limiter:cmd_sink_ready -> router_001:src_ready
+	wire    [2:0] router_001_src_channel;                                               // router_001:src_channel -> hps_0_h2f_axi_master_rd_limiter:cmd_sink_channel
+	wire          router_001_src_startofpacket;                                         // router_001:src_startofpacket -> hps_0_h2f_axi_master_rd_limiter:cmd_sink_startofpacket
+	wire          router_001_src_endofpacket;                                           // router_001:src_endofpacket -> hps_0_h2f_axi_master_rd_limiter:cmd_sink_endofpacket
+	wire  [122:0] hps_0_h2f_axi_master_rd_limiter_cmd_src_data;                         // hps_0_h2f_axi_master_rd_limiter:cmd_src_data -> cmd_demux_001:sink_data
+	wire          hps_0_h2f_axi_master_rd_limiter_cmd_src_ready;                        // cmd_demux_001:sink_ready -> hps_0_h2f_axi_master_rd_limiter:cmd_src_ready
+	wire    [2:0] hps_0_h2f_axi_master_rd_limiter_cmd_src_channel;                      // hps_0_h2f_axi_master_rd_limiter:cmd_src_channel -> cmd_demux_001:sink_channel
+	wire          hps_0_h2f_axi_master_rd_limiter_cmd_src_startofpacket;                // hps_0_h2f_axi_master_rd_limiter:cmd_src_startofpacket -> cmd_demux_001:sink_startofpacket
+	wire          hps_0_h2f_axi_master_rd_limiter_cmd_src_endofpacket;                  // hps_0_h2f_axi_master_rd_limiter:cmd_src_endofpacket -> cmd_demux_001:sink_endofpacket
+	wire          rsp_mux_001_src_valid;                                                // rsp_mux_001:src_valid -> hps_0_h2f_axi_master_rd_limiter:rsp_sink_valid
+	wire  [122:0] rsp_mux_001_src_data;                                                 // rsp_mux_001:src_data -> hps_0_h2f_axi_master_rd_limiter:rsp_sink_data
+	wire          rsp_mux_001_src_ready;                                                // hps_0_h2f_axi_master_rd_limiter:rsp_sink_ready -> rsp_mux_001:src_ready
+	wire    [2:0] rsp_mux_001_src_channel;                                              // rsp_mux_001:src_channel -> hps_0_h2f_axi_master_rd_limiter:rsp_sink_channel
+	wire          rsp_mux_001_src_startofpacket;                                        // rsp_mux_001:src_startofpacket -> hps_0_h2f_axi_master_rd_limiter:rsp_sink_startofpacket
+	wire          rsp_mux_001_src_endofpacket;                                          // rsp_mux_001:src_endofpacket -> hps_0_h2f_axi_master_rd_limiter:rsp_sink_endofpacket
+	wire          hps_0_h2f_axi_master_rd_limiter_rsp_src_valid;                        // hps_0_h2f_axi_master_rd_limiter:rsp_src_valid -> hps_0_h2f_axi_master_agent:read_rp_valid
+	wire  [122:0] hps_0_h2f_axi_master_rd_limiter_rsp_src_data;                         // hps_0_h2f_axi_master_rd_limiter:rsp_src_data -> hps_0_h2f_axi_master_agent:read_rp_data
+	wire          hps_0_h2f_axi_master_rd_limiter_rsp_src_ready;                        // hps_0_h2f_axi_master_agent:read_rp_ready -> hps_0_h2f_axi_master_rd_limiter:rsp_src_ready
+	wire    [2:0] hps_0_h2f_axi_master_rd_limiter_rsp_src_channel;                      // hps_0_h2f_axi_master_rd_limiter:rsp_src_channel -> hps_0_h2f_axi_master_agent:read_rp_channel
+	wire          hps_0_h2f_axi_master_rd_limiter_rsp_src_startofpacket;                // hps_0_h2f_axi_master_rd_limiter:rsp_src_startofpacket -> hps_0_h2f_axi_master_agent:read_rp_startofpacket
+	wire          hps_0_h2f_axi_master_rd_limiter_rsp_src_endofpacket;                  // hps_0_h2f_axi_master_rd_limiter:rsp_src_endofpacket -> hps_0_h2f_axi_master_agent:read_rp_endofpacket
+	wire          arm_irq_avalon_0_avalon_slave_0_burst_adapter_source0_valid;          // arm_irq_avalon_0_avalon_slave_0_burst_adapter:source0_valid -> arm_irq_avalon_0_avalon_slave_0_agent:cp_valid
+	wire   [95:0] arm_irq_avalon_0_avalon_slave_0_burst_adapter_source0_data;           // arm_irq_avalon_0_avalon_slave_0_burst_adapter:source0_data -> arm_irq_avalon_0_avalon_slave_0_agent:cp_data
+	wire          arm_irq_avalon_0_avalon_slave_0_burst_adapter_source0_ready;          // arm_irq_avalon_0_avalon_slave_0_agent:cp_ready -> arm_irq_avalon_0_avalon_slave_0_burst_adapter:source0_ready
+	wire    [2:0] arm_irq_avalon_0_avalon_slave_0_burst_adapter_source0_channel;        // arm_irq_avalon_0_avalon_slave_0_burst_adapter:source0_channel -> arm_irq_avalon_0_avalon_slave_0_agent:cp_channel
+	wire          arm_irq_avalon_0_avalon_slave_0_burst_adapter_source0_startofpacket;  // arm_irq_avalon_0_avalon_slave_0_burst_adapter:source0_startofpacket -> arm_irq_avalon_0_avalon_slave_0_agent:cp_startofpacket
+	wire          arm_irq_avalon_0_avalon_slave_0_burst_adapter_source0_endofpacket;    // arm_irq_avalon_0_avalon_slave_0_burst_adapter:source0_endofpacket -> arm_irq_avalon_0_avalon_slave_0_agent:cp_endofpacket
+	wire          cmd_mux_001_src_valid;                                                // cmd_mux_001:src_valid -> arm_regs_avalon_0_avalon_slave_0_burst_adapter:sink0_valid
+	wire  [122:0] cmd_mux_001_src_data;                                                 // cmd_mux_001:src_data -> arm_regs_avalon_0_avalon_slave_0_burst_adapter:sink0_data
+	wire          cmd_mux_001_src_ready;                                                // arm_regs_avalon_0_avalon_slave_0_burst_adapter:sink0_ready -> cmd_mux_001:src_ready
+	wire    [2:0] cmd_mux_001_src_channel;                                              // cmd_mux_001:src_channel -> arm_regs_avalon_0_avalon_slave_0_burst_adapter:sink0_channel
+	wire          cmd_mux_001_src_startofpacket;                                        // cmd_mux_001:src_startofpacket -> arm_regs_avalon_0_avalon_slave_0_burst_adapter:sink0_startofpacket
+	wire          cmd_mux_001_src_endofpacket;                                          // cmd_mux_001:src_endofpacket -> arm_regs_avalon_0_avalon_slave_0_burst_adapter:sink0_endofpacket
+	wire          arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_valid;         // arm_regs_avalon_0_avalon_slave_0_burst_adapter:source0_valid -> arm_regs_avalon_0_avalon_slave_0_agent:cp_valid
+	wire  [122:0] arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_data;          // arm_regs_avalon_0_avalon_slave_0_burst_adapter:source0_data -> arm_regs_avalon_0_avalon_slave_0_agent:cp_data
+	wire          arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_ready;         // arm_regs_avalon_0_avalon_slave_0_agent:cp_ready -> arm_regs_avalon_0_avalon_slave_0_burst_adapter:source0_ready
+	wire    [2:0] arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_channel;       // arm_regs_avalon_0_avalon_slave_0_burst_adapter:source0_channel -> arm_regs_avalon_0_avalon_slave_0_agent:cp_channel
+	wire          arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_startofpacket; // arm_regs_avalon_0_avalon_slave_0_burst_adapter:source0_startofpacket -> arm_regs_avalon_0_avalon_slave_0_agent:cp_startofpacket
+	wire          arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_endofpacket;   // arm_regs_avalon_0_avalon_slave_0_burst_adapter:source0_endofpacket -> arm_regs_avalon_0_avalon_slave_0_agent:cp_endofpacket
+	wire          cmd_mux_002_src_valid;                                                // cmd_mux_002:src_valid -> hybridcpu0_avalon_slave_0_burst_adapter:sink0_valid
+	wire  [122:0] cmd_mux_002_src_data;                                                 // cmd_mux_002:src_data -> hybridcpu0_avalon_slave_0_burst_adapter:sink0_data
+	wire          cmd_mux_002_src_ready;                                                // hybridcpu0_avalon_slave_0_burst_adapter:sink0_ready -> cmd_mux_002:src_ready
+	wire    [2:0] cmd_mux_002_src_channel;                                              // cmd_mux_002:src_channel -> hybridcpu0_avalon_slave_0_burst_adapter:sink0_channel
+	wire          cmd_mux_002_src_startofpacket;                                        // cmd_mux_002:src_startofpacket -> hybridcpu0_avalon_slave_0_burst_adapter:sink0_startofpacket
+	wire          cmd_mux_002_src_endofpacket;                                          // cmd_mux_002:src_endofpacket -> hybridcpu0_avalon_slave_0_burst_adapter:sink0_endofpacket
+	wire          hybridcpu0_avalon_slave_0_burst_adapter_source0_valid;                // hybridcpu0_avalon_slave_0_burst_adapter:source0_valid -> hybridcpu0_avalon_slave_0_agent:cp_valid
+	wire  [122:0] hybridcpu0_avalon_slave_0_burst_adapter_source0_data;                 // hybridcpu0_avalon_slave_0_burst_adapter:source0_data -> hybridcpu0_avalon_slave_0_agent:cp_data
+	wire          hybridcpu0_avalon_slave_0_burst_adapter_source0_ready;                // hybridcpu0_avalon_slave_0_agent:cp_ready -> hybridcpu0_avalon_slave_0_burst_adapter:source0_ready
+	wire    [2:0] hybridcpu0_avalon_slave_0_burst_adapter_source0_channel;              // hybridcpu0_avalon_slave_0_burst_adapter:source0_channel -> hybridcpu0_avalon_slave_0_agent:cp_channel
+	wire          hybridcpu0_avalon_slave_0_burst_adapter_source0_startofpacket;        // hybridcpu0_avalon_slave_0_burst_adapter:source0_startofpacket -> hybridcpu0_avalon_slave_0_agent:cp_startofpacket
+	wire          hybridcpu0_avalon_slave_0_burst_adapter_source0_endofpacket;          // hybridcpu0_avalon_slave_0_burst_adapter:source0_endofpacket -> hybridcpu0_avalon_slave_0_agent:cp_endofpacket
+	wire          cmd_demux_src0_valid;                                                 // cmd_demux:src0_valid -> cmd_mux:sink0_valid
+	wire  [122:0] cmd_demux_src0_data;                                                  // cmd_demux:src0_data -> cmd_mux:sink0_data
+	wire          cmd_demux_src0_ready;                                                 // cmd_mux:sink0_ready -> cmd_demux:src0_ready
+	wire    [2:0] cmd_demux_src0_channel;                                               // cmd_demux:src0_channel -> cmd_mux:sink0_channel
+	wire          cmd_demux_src0_startofpacket;                                         // cmd_demux:src0_startofpacket -> cmd_mux:sink0_startofpacket
+	wire          cmd_demux_src0_endofpacket;                                           // cmd_demux:src0_endofpacket -> cmd_mux:sink0_endofpacket
+	wire          cmd_demux_src1_valid;                                                 // cmd_demux:src1_valid -> cmd_mux_001:sink0_valid
+	wire  [122:0] cmd_demux_src1_data;                                                  // cmd_demux:src1_data -> cmd_mux_001:sink0_data
+	wire          cmd_demux_src1_ready;                                                 // cmd_mux_001:sink0_ready -> cmd_demux:src1_ready
+	wire    [2:0] cmd_demux_src1_channel;                                               // cmd_demux:src1_channel -> cmd_mux_001:sink0_channel
+	wire          cmd_demux_src1_startofpacket;                                         // cmd_demux:src1_startofpacket -> cmd_mux_001:sink0_startofpacket
+	wire          cmd_demux_src1_endofpacket;                                           // cmd_demux:src1_endofpacket -> cmd_mux_001:sink0_endofpacket
+	wire          cmd_demux_src2_valid;                                                 // cmd_demux:src2_valid -> cmd_mux_002:sink0_valid
+	wire  [122:0] cmd_demux_src2_data;                                                  // cmd_demux:src2_data -> cmd_mux_002:sink0_data
+	wire          cmd_demux_src2_ready;                                                 // cmd_mux_002:sink0_ready -> cmd_demux:src2_ready
+	wire    [2:0] cmd_demux_src2_channel;                                               // cmd_demux:src2_channel -> cmd_mux_002:sink0_channel
+	wire          cmd_demux_src2_startofpacket;                                         // cmd_demux:src2_startofpacket -> cmd_mux_002:sink0_startofpacket
+	wire          cmd_demux_src2_endofpacket;                                           // cmd_demux:src2_endofpacket -> cmd_mux_002:sink0_endofpacket
+	wire          cmd_demux_001_src0_valid;                                             // cmd_demux_001:src0_valid -> cmd_mux:sink1_valid
+	wire  [122:0] cmd_demux_001_src0_data;                                              // cmd_demux_001:src0_data -> cmd_mux:sink1_data
+	wire          cmd_demux_001_src0_ready;                                             // cmd_mux:sink1_ready -> cmd_demux_001:src0_ready
+	wire    [2:0] cmd_demux_001_src0_channel;                                           // cmd_demux_001:src0_channel -> cmd_mux:sink1_channel
+	wire          cmd_demux_001_src0_startofpacket;                                     // cmd_demux_001:src0_startofpacket -> cmd_mux:sink1_startofpacket
+	wire          cmd_demux_001_src0_endofpacket;                                       // cmd_demux_001:src0_endofpacket -> cmd_mux:sink1_endofpacket
+	wire          cmd_demux_001_src1_valid;                                             // cmd_demux_001:src1_valid -> cmd_mux_001:sink1_valid
+	wire  [122:0] cmd_demux_001_src1_data;                                              // cmd_demux_001:src1_data -> cmd_mux_001:sink1_data
+	wire          cmd_demux_001_src1_ready;                                             // cmd_mux_001:sink1_ready -> cmd_demux_001:src1_ready
+	wire    [2:0] cmd_demux_001_src1_channel;                                           // cmd_demux_001:src1_channel -> cmd_mux_001:sink1_channel
+	wire          cmd_demux_001_src1_startofpacket;                                     // cmd_demux_001:src1_startofpacket -> cmd_mux_001:sink1_startofpacket
+	wire          cmd_demux_001_src1_endofpacket;                                       // cmd_demux_001:src1_endofpacket -> cmd_mux_001:sink1_endofpacket
+	wire          cmd_demux_001_src2_valid;                                             // cmd_demux_001:src2_valid -> cmd_mux_002:sink1_valid
+	wire  [122:0] cmd_demux_001_src2_data;                                              // cmd_demux_001:src2_data -> cmd_mux_002:sink1_data
+	wire          cmd_demux_001_src2_ready;                                             // cmd_mux_002:sink1_ready -> cmd_demux_001:src2_ready
+	wire    [2:0] cmd_demux_001_src2_channel;                                           // cmd_demux_001:src2_channel -> cmd_mux_002:sink1_channel
+	wire          cmd_demux_001_src2_startofpacket;                                     // cmd_demux_001:src2_startofpacket -> cmd_mux_002:sink1_startofpacket
+	wire          cmd_demux_001_src2_endofpacket;                                       // cmd_demux_001:src2_endofpacket -> cmd_mux_002:sink1_endofpacket
+	wire          rsp_demux_src0_valid;                                                 // rsp_demux:src0_valid -> rsp_mux:sink0_valid
+	wire  [122:0] rsp_demux_src0_data;                                                  // rsp_demux:src0_data -> rsp_mux:sink0_data
+	wire          rsp_demux_src0_ready;                                                 // rsp_mux:sink0_ready -> rsp_demux:src0_ready
+	wire    [2:0] rsp_demux_src0_channel;                                               // rsp_demux:src0_channel -> rsp_mux:sink0_channel
+	wire          rsp_demux_src0_startofpacket;                                         // rsp_demux:src0_startofpacket -> rsp_mux:sink0_startofpacket
+	wire          rsp_demux_src0_endofpacket;                                           // rsp_demux:src0_endofpacket -> rsp_mux:sink0_endofpacket
+	wire          rsp_demux_src1_valid;                                                 // rsp_demux:src1_valid -> rsp_mux_001:sink0_valid
+	wire  [122:0] rsp_demux_src1_data;                                                  // rsp_demux:src1_data -> rsp_mux_001:sink0_data
+	wire          rsp_demux_src1_ready;                                                 // rsp_mux_001:sink0_ready -> rsp_demux:src1_ready
+	wire    [2:0] rsp_demux_src1_channel;                                               // rsp_demux:src1_channel -> rsp_mux_001:sink0_channel
+	wire          rsp_demux_src1_startofpacket;                                         // rsp_demux:src1_startofpacket -> rsp_mux_001:sink0_startofpacket
+	wire          rsp_demux_src1_endofpacket;                                           // rsp_demux:src1_endofpacket -> rsp_mux_001:sink0_endofpacket
+	wire          rsp_demux_001_src0_valid;                                             // rsp_demux_001:src0_valid -> rsp_mux:sink1_valid
+	wire  [122:0] rsp_demux_001_src0_data;                                              // rsp_demux_001:src0_data -> rsp_mux:sink1_data
+	wire          rsp_demux_001_src0_ready;                                             // rsp_mux:sink1_ready -> rsp_demux_001:src0_ready
+	wire    [2:0] rsp_demux_001_src0_channel;                                           // rsp_demux_001:src0_channel -> rsp_mux:sink1_channel
+	wire          rsp_demux_001_src0_startofpacket;                                     // rsp_demux_001:src0_startofpacket -> rsp_mux:sink1_startofpacket
+	wire          rsp_demux_001_src0_endofpacket;                                       // rsp_demux_001:src0_endofpacket -> rsp_mux:sink1_endofpacket
+	wire          rsp_demux_001_src1_valid;                                             // rsp_demux_001:src1_valid -> rsp_mux_001:sink1_valid
+	wire  [122:0] rsp_demux_001_src1_data;                                              // rsp_demux_001:src1_data -> rsp_mux_001:sink1_data
+	wire          rsp_demux_001_src1_ready;                                             // rsp_mux_001:sink1_ready -> rsp_demux_001:src1_ready
+	wire    [2:0] rsp_demux_001_src1_channel;                                           // rsp_demux_001:src1_channel -> rsp_mux_001:sink1_channel
+	wire          rsp_demux_001_src1_startofpacket;                                     // rsp_demux_001:src1_startofpacket -> rsp_mux_001:sink1_startofpacket
+	wire          rsp_demux_001_src1_endofpacket;                                       // rsp_demux_001:src1_endofpacket -> rsp_mux_001:sink1_endofpacket
+	wire          rsp_demux_002_src0_valid;                                             // rsp_demux_002:src0_valid -> rsp_mux:sink2_valid
+	wire  [122:0] rsp_demux_002_src0_data;                                              // rsp_demux_002:src0_data -> rsp_mux:sink2_data
+	wire          rsp_demux_002_src0_ready;                                             // rsp_mux:sink2_ready -> rsp_demux_002:src0_ready
+	wire    [2:0] rsp_demux_002_src0_channel;                                           // rsp_demux_002:src0_channel -> rsp_mux:sink2_channel
+	wire          rsp_demux_002_src0_startofpacket;                                     // rsp_demux_002:src0_startofpacket -> rsp_mux:sink2_startofpacket
+	wire          rsp_demux_002_src0_endofpacket;                                       // rsp_demux_002:src0_endofpacket -> rsp_mux:sink2_endofpacket
+	wire          rsp_demux_002_src1_valid;                                             // rsp_demux_002:src1_valid -> rsp_mux_001:sink2_valid
+	wire  [122:0] rsp_demux_002_src1_data;                                              // rsp_demux_002:src1_data -> rsp_mux_001:sink2_data
+	wire          rsp_demux_002_src1_ready;                                             // rsp_mux_001:sink2_ready -> rsp_demux_002:src1_ready
+	wire    [2:0] rsp_demux_002_src1_channel;                                           // rsp_demux_002:src1_channel -> rsp_mux_001:sink2_channel
+	wire          rsp_demux_002_src1_startofpacket;                                     // rsp_demux_002:src1_startofpacket -> rsp_mux_001:sink2_startofpacket
+	wire          rsp_demux_002_src1_endofpacket;                                       // rsp_demux_002:src1_endofpacket -> rsp_mux_001:sink2_endofpacket
+	wire          router_002_src_valid;                                                 // router_002:src_valid -> arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:in_valid
+	wire   [95:0] router_002_src_data;                                                  // router_002:src_data -> arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:in_data
+	wire          router_002_src_ready;                                                 // arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:in_ready -> router_002:src_ready
+	wire    [2:0] router_002_src_channel;                                               // router_002:src_channel -> arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:in_channel
+	wire          router_002_src_startofpacket;                                         // router_002:src_startofpacket -> arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:in_startofpacket
+	wire          router_002_src_endofpacket;                                           // router_002:src_endofpacket -> arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:in_endofpacket
+	wire          arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_valid;          // arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:out_valid -> rsp_demux:sink_valid
+	wire  [122:0] arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_data;           // arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:out_data -> rsp_demux:sink_data
+	wire          arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_ready;          // rsp_demux:sink_ready -> arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:out_ready
+	wire    [2:0] arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_channel;        // arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:out_channel -> rsp_demux:sink_channel
+	wire          arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_startofpacket;  // arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:out_startofpacket -> rsp_demux:sink_startofpacket
+	wire          arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_endofpacket;    // arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter:out_endofpacket -> rsp_demux:sink_endofpacket
+	wire          cmd_mux_src_valid;                                                    // cmd_mux:src_valid -> arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:in_valid
+	wire  [122:0] cmd_mux_src_data;                                                     // cmd_mux:src_data -> arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:in_data
+	wire          cmd_mux_src_ready;                                                    // arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:in_ready -> cmd_mux:src_ready
+	wire    [2:0] cmd_mux_src_channel;                                                  // cmd_mux:src_channel -> arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:in_channel
+	wire          cmd_mux_src_startofpacket;                                            // cmd_mux:src_startofpacket -> arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:in_startofpacket
+	wire          cmd_mux_src_endofpacket;                                              // cmd_mux:src_endofpacket -> arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:in_endofpacket
+	wire          arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_valid;          // arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:out_valid -> arm_irq_avalon_0_avalon_slave_0_burst_adapter:sink0_valid
+	wire   [95:0] arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_data;           // arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:out_data -> arm_irq_avalon_0_avalon_slave_0_burst_adapter:sink0_data
+	wire          arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_ready;          // arm_irq_avalon_0_avalon_slave_0_burst_adapter:sink0_ready -> arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:out_ready
+	wire    [2:0] arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_channel;        // arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:out_channel -> arm_irq_avalon_0_avalon_slave_0_burst_adapter:sink0_channel
+	wire          arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_startofpacket;  // arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:out_startofpacket -> arm_irq_avalon_0_avalon_slave_0_burst_adapter:sink0_startofpacket
+	wire          arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_endofpacket;    // arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter:out_endofpacket -> arm_irq_avalon_0_avalon_slave_0_burst_adapter:sink0_endofpacket
+	wire    [2:0] hps_0_h2f_axi_master_wr_limiter_cmd_valid_data;                       // hps_0_h2f_axi_master_wr_limiter:cmd_src_valid -> cmd_demux:sink_valid
+	wire    [2:0] hps_0_h2f_axi_master_rd_limiter_cmd_valid_data;                       // hps_0_h2f_axi_master_rd_limiter:cmd_src_valid -> cmd_demux_001:sink_valid
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_valid;           // arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo:out_valid -> avalon_st_adapter:in_0_valid
+	wire    [9:0] arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_data;            // arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo:out_data -> avalon_st_adapter:in_0_data
+	wire          arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_ready;           // avalon_st_adapter:in_0_ready -> arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo:out_ready
+	wire          avalon_st_adapter_out_0_valid;                                        // avalon_st_adapter:out_0_valid -> arm_irq_avalon_0_avalon_slave_0_agent:rdata_fifo_sink_valid
+	wire    [9:0] avalon_st_adapter_out_0_data;                                         // avalon_st_adapter:out_0_data -> arm_irq_avalon_0_avalon_slave_0_agent:rdata_fifo_sink_data
+	wire          avalon_st_adapter_out_0_ready;                                        // arm_irq_avalon_0_avalon_slave_0_agent:rdata_fifo_sink_ready -> avalon_st_adapter:out_0_ready
+	wire    [0:0] avalon_st_adapter_out_0_error;                                        // avalon_st_adapter:out_0_error -> arm_irq_avalon_0_avalon_slave_0_agent:rdata_fifo_sink_error
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_out_valid;          // arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo:out_valid -> avalon_st_adapter_001:in_0_valid
+	wire   [33:0] arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_out_data;           // arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo:out_data -> avalon_st_adapter_001:in_0_data
+	wire          arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_out_ready;          // avalon_st_adapter_001:in_0_ready -> arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo:out_ready
+	wire          avalon_st_adapter_001_out_0_valid;                                    // avalon_st_adapter_001:out_0_valid -> arm_regs_avalon_0_avalon_slave_0_agent:rdata_fifo_sink_valid
+	wire   [33:0] avalon_st_adapter_001_out_0_data;                                     // avalon_st_adapter_001:out_0_data -> arm_regs_avalon_0_avalon_slave_0_agent:rdata_fifo_sink_data
+	wire          avalon_st_adapter_001_out_0_ready;                                    // arm_regs_avalon_0_avalon_slave_0_agent:rdata_fifo_sink_ready -> avalon_st_adapter_001:out_0_ready
+	wire    [0:0] avalon_st_adapter_001_out_0_error;                                    // avalon_st_adapter_001:out_0_error -> arm_regs_avalon_0_avalon_slave_0_agent:rdata_fifo_sink_error
+	wire          hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_valid;                 // hybridcpu0_avalon_slave_0_agent_rdata_fifo:out_valid -> avalon_st_adapter_002:in_0_valid
+	wire   [33:0] hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_data;                  // hybridcpu0_avalon_slave_0_agent_rdata_fifo:out_data -> avalon_st_adapter_002:in_0_data
+	wire          hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_ready;                 // avalon_st_adapter_002:in_0_ready -> hybridcpu0_avalon_slave_0_agent_rdata_fifo:out_ready
+	wire          avalon_st_adapter_002_out_0_valid;                                    // avalon_st_adapter_002:out_0_valid -> hybridcpu0_avalon_slave_0_agent:rdata_fifo_sink_valid
+	wire   [33:0] avalon_st_adapter_002_out_0_data;                                     // avalon_st_adapter_002:out_0_data -> hybridcpu0_avalon_slave_0_agent:rdata_fifo_sink_data
+	wire          avalon_st_adapter_002_out_0_ready;                                    // hybridcpu0_avalon_slave_0_agent:rdata_fifo_sink_ready -> avalon_st_adapter_002:out_0_ready
+	wire    [0:0] avalon_st_adapter_002_out_0_error;                                    // avalon_st_adapter_002:out_0_error -> hybridcpu0_avalon_slave_0_agent:rdata_fifo_sink_error
 
 	altera_merlin_slave_translator #(
 		.AV_ADDRESS_W                   (1),
@@ -390,7 +395,7 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.AV_DATA_HOLD_CYCLES            (0)
 	) arm_irq_avalon_0_avalon_slave_0_translator (
 		.clk                    (clk_0_clk_clk),                                          //                      clk.clk
-		.reset                  (hybridcpu0_reset_reset_bridge_in_reset_reset),           //                    reset.reset
+		.reset                  (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),     //                    reset.reset
 		.uav_address            (arm_irq_avalon_0_avalon_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
 		.uav_burstcount         (arm_irq_avalon_0_avalon_slave_0_agent_m0_burstcount),    //                         .burstcount
 		.uav_read               (arm_irq_avalon_0_avalon_slave_0_agent_m0_read),          //                         .read
@@ -426,6 +431,134 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
 	);
 
+	altera_merlin_slave_translator #(
+		.AV_ADDRESS_W                   (1),
+		.AV_DATA_W                      (32),
+		.UAV_DATA_W                     (32),
+		.AV_BURSTCOUNT_W                (1),
+		.AV_BYTEENABLE_W                (4),
+		.UAV_BYTEENABLE_W               (4),
+		.UAV_ADDRESS_W                  (30),
+		.UAV_BURSTCOUNT_W               (3),
+		.AV_READLATENCY                 (0),
+		.USE_READDATAVALID              (0),
+		.USE_WAITREQUEST                (0),
+		.USE_UAV_CLKEN                  (0),
+		.USE_READRESPONSE               (0),
+		.USE_WRITERESPONSE              (0),
+		.AV_SYMBOLS_PER_WORD            (4),
+		.AV_ADDRESS_SYMBOLS             (0),
+		.AV_BURSTCOUNT_SYMBOLS          (0),
+		.AV_CONSTANT_BURST_BEHAVIOR     (0),
+		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
+		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
+		.CHIPSELECT_THROUGH_READLATENCY (0),
+		.AV_READ_WAIT_CYCLES            (1),
+		.AV_WRITE_WAIT_CYCLES           (0),
+		.AV_SETUP_WAIT_CYCLES           (0),
+		.AV_DATA_HOLD_CYCLES            (0)
+	) arm_regs_avalon_0_avalon_slave_0_translator (
+		.clk                    (clk_0_clk_clk),                                           //                      clk.clk
+		.reset                  (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),      //                    reset.reset
+		.uav_address            (arm_regs_avalon_0_avalon_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
+		.uav_burstcount         (arm_regs_avalon_0_avalon_slave_0_agent_m0_burstcount),    //                         .burstcount
+		.uav_read               (arm_regs_avalon_0_avalon_slave_0_agent_m0_read),          //                         .read
+		.uav_write              (arm_regs_avalon_0_avalon_slave_0_agent_m0_write),         //                         .write
+		.uav_waitrequest        (arm_regs_avalon_0_avalon_slave_0_agent_m0_waitrequest),   //                         .waitrequest
+		.uav_readdatavalid      (arm_regs_avalon_0_avalon_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
+		.uav_byteenable         (arm_regs_avalon_0_avalon_slave_0_agent_m0_byteenable),    //                         .byteenable
+		.uav_readdata           (arm_regs_avalon_0_avalon_slave_0_agent_m0_readdata),      //                         .readdata
+		.uav_writedata          (arm_regs_avalon_0_avalon_slave_0_agent_m0_writedata),     //                         .writedata
+		.uav_lock               (arm_regs_avalon_0_avalon_slave_0_agent_m0_lock),          //                         .lock
+		.uav_debugaccess        (arm_regs_avalon_0_avalon_slave_0_agent_m0_debugaccess),   //                         .debugaccess
+		.av_address             (arm_regs_avalon_0_avalon_slave_0_address),                //      avalon_anti_slave_0.address
+		.av_write               (arm_regs_avalon_0_avalon_slave_0_write),                  //                         .write
+		.av_writedata           (arm_regs_avalon_0_avalon_slave_0_writedata),              //                         .writedata
+		.av_read                (),                                                        //              (terminated)
+		.av_readdata            (32'b11011110101011011101111010101101),                    //              (terminated)
+		.av_begintransfer       (),                                                        //              (terminated)
+		.av_beginbursttransfer  (),                                                        //              (terminated)
+		.av_burstcount          (),                                                        //              (terminated)
+		.av_byteenable          (),                                                        //              (terminated)
+		.av_readdatavalid       (1'b0),                                                    //              (terminated)
+		.av_waitrequest         (1'b0),                                                    //              (terminated)
+		.av_writebyteenable     (),                                                        //              (terminated)
+		.av_lock                (),                                                        //              (terminated)
+		.av_chipselect          (),                                                        //              (terminated)
+		.av_clken               (),                                                        //              (terminated)
+		.uav_clken              (1'b0),                                                    //              (terminated)
+		.av_debugaccess         (),                                                        //              (terminated)
+		.av_outputenable        (),                                                        //              (terminated)
+		.uav_response           (),                                                        //              (terminated)
+		.av_response            (2'b00),                                                   //              (terminated)
+		.uav_writeresponsevalid (),                                                        //              (terminated)
+		.av_writeresponsevalid  (1'b0)                                                     //              (terminated)
+	);
+
+	altera_merlin_slave_translator #(
+		.AV_ADDRESS_W                   (22),
+		.AV_DATA_W                      (32),
+		.UAV_DATA_W                     (32),
+		.AV_BURSTCOUNT_W                (1),
+		.AV_BYTEENABLE_W                (4),
+		.UAV_BYTEENABLE_W               (4),
+		.UAV_ADDRESS_W                  (30),
+		.UAV_BURSTCOUNT_W               (3),
+		.AV_READLATENCY                 (0),
+		.USE_READDATAVALID              (1),
+		.USE_WAITREQUEST                (1),
+		.USE_UAV_CLKEN                  (0),
+		.USE_READRESPONSE               (0),
+		.USE_WRITERESPONSE              (0),
+		.AV_SYMBOLS_PER_WORD            (4),
+		.AV_ADDRESS_SYMBOLS             (0),
+		.AV_BURSTCOUNT_SYMBOLS          (0),
+		.AV_CONSTANT_BURST_BEHAVIOR     (0),
+		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
+		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
+		.CHIPSELECT_THROUGH_READLATENCY (0),
+		.AV_READ_WAIT_CYCLES            (1),
+		.AV_WRITE_WAIT_CYCLES           (0),
+		.AV_SETUP_WAIT_CYCLES           (0),
+		.AV_DATA_HOLD_CYCLES            (0)
+	) hybridcpu0_avalon_slave_0_translator (
+		.clk                    (clk_0_clk_clk),                                      //                      clk.clk
+		.reset                  (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset), //                    reset.reset
+		.uav_address            (hybridcpu0_avalon_slave_0_agent_m0_address),         // avalon_universal_slave_0.address
+		.uav_burstcount         (hybridcpu0_avalon_slave_0_agent_m0_burstcount),      //                         .burstcount
+		.uav_read               (hybridcpu0_avalon_slave_0_agent_m0_read),            //                         .read
+		.uav_write              (hybridcpu0_avalon_slave_0_agent_m0_write),           //                         .write
+		.uav_waitrequest        (hybridcpu0_avalon_slave_0_agent_m0_waitrequest),     //                         .waitrequest
+		.uav_readdatavalid      (hybridcpu0_avalon_slave_0_agent_m0_readdatavalid),   //                         .readdatavalid
+		.uav_byteenable         (hybridcpu0_avalon_slave_0_agent_m0_byteenable),      //                         .byteenable
+		.uav_readdata           (hybridcpu0_avalon_slave_0_agent_m0_readdata),        //                         .readdata
+		.uav_writedata          (hybridcpu0_avalon_slave_0_agent_m0_writedata),       //                         .writedata
+		.uav_lock               (hybridcpu0_avalon_slave_0_agent_m0_lock),            //                         .lock
+		.uav_debugaccess        (hybridcpu0_avalon_slave_0_agent_m0_debugaccess),     //                         .debugaccess
+		.av_address             (hybridcpu0_avalon_slave_0_address),                  //      avalon_anti_slave_0.address
+		.av_write               (hybridcpu0_avalon_slave_0_write),                    //                         .write
+		.av_read                (hybridcpu0_avalon_slave_0_read),                     //                         .read
+		.av_readdata            (hybridcpu0_avalon_slave_0_readdata),                 //                         .readdata
+		.av_writedata           (hybridcpu0_avalon_slave_0_writedata),                //                         .writedata
+		.av_byteenable          (hybridcpu0_avalon_slave_0_byteenable),               //                         .byteenable
+		.av_readdatavalid       (hybridcpu0_avalon_slave_0_readdatavalid),            //                         .readdatavalid
+		.av_waitrequest         (hybridcpu0_avalon_slave_0_waitrequest),              //                         .waitrequest
+		.av_begintransfer       (),                                                   //              (terminated)
+		.av_beginbursttransfer  (),                                                   //              (terminated)
+		.av_burstcount          (),                                                   //              (terminated)
+		.av_writebyteenable     (),                                                   //              (terminated)
+		.av_lock                (),                                                   //              (terminated)
+		.av_chipselect          (),                                                   //              (terminated)
+		.av_clken               (),                                                   //              (terminated)
+		.uav_clken              (1'b0),                                               //              (terminated)
+		.av_debugaccess         (),                                                   //              (terminated)
+		.av_outputenable        (),                                                   //              (terminated)
+		.uav_response           (),                                                   //              (terminated)
+		.av_response            (2'b00),                                              //              (terminated)
+		.uav_writeresponsevalid (),                                                   //              (terminated)
+		.av_writeresponsevalid  (1'b0)                                                //              (terminated)
+	);
+
 	altera_merlin_axi_master_ni #(
 		.ID_WIDTH                  (12),
 		.ADDR_WIDTH                (30),
@@ -439,18 +572,18 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.WRITE_ISSUING_CAPABILITY  (8),
 		.READ_ISSUING_CAPABILITY   (8),
 		.PKT_BEGIN_BURST           (93),
-		.PKT_CACHE_H               (115),
-		.PKT_CACHE_L               (112),
+		.PKT_CACHE_H               (117),
+		.PKT_CACHE_L               (114),
 		.PKT_ADDR_SIDEBAND_H       (91),
 		.PKT_ADDR_SIDEBAND_L       (91),
-		.PKT_PROTECTION_H          (111),
-		.PKT_PROTECTION_L          (109),
+		.PKT_PROTECTION_H          (113),
+		.PKT_PROTECTION_L          (111),
 		.PKT_BURST_SIZE_H          (88),
 		.PKT_BURST_SIZE_L          (86),
 		.PKT_BURST_TYPE_H          (90),
 		.PKT_BURST_TYPE_L          (89),
-		.PKT_RESPONSE_STATUS_L     (116),
-		.PKT_RESPONSE_STATUS_H     (117),
+		.PKT_RESPONSE_STATUS_L     (118),
+		.PKT_RESPONSE_STATUS_H     (119),
 		.PKT_BURSTWRAP_H           (85),
 		.PKT_BURSTWRAP_L           (79),
 		.PKT_BYTE_CNT_H            (78),
@@ -467,20 +600,20 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.PKT_DATA_L                (0),
 		.PKT_BYTEEN_H              (35),
 		.PKT_BYTEEN_L              (32),
-		.PKT_SRC_ID_H              (95),
+		.PKT_SRC_ID_H              (96),
 		.PKT_SRC_ID_L              (95),
-		.PKT_DEST_ID_H             (96),
-		.PKT_DEST_ID_L             (96),
-		.PKT_THREAD_ID_H           (108),
-		.PKT_THREAD_ID_L           (97),
+		.PKT_DEST_ID_H             (98),
+		.PKT_DEST_ID_L             (97),
+		.PKT_THREAD_ID_H           (110),
+		.PKT_THREAD_ID_L           (99),
 		.PKT_QOS_L                 (94),
 		.PKT_QOS_H                 (94),
-		.PKT_ORI_BURST_SIZE_L      (118),
-		.PKT_ORI_BURST_SIZE_H      (120),
+		.PKT_ORI_BURST_SIZE_L      (120),
+		.PKT_ORI_BURST_SIZE_H      (122),
 		.PKT_DATA_SIDEBAND_H       (92),
 		.PKT_DATA_SIDEBAND_L       (92),
-		.ST_DATA_W                 (121),
-		.ST_CHANNEL_W              (2),
+		.ST_DATA_W                 (123),
+		.ST_CHANNEL_W              (3),
 		.ID                        (0)
 	) hps_0_h2f_axi_master_agent (
 		.aclk                   (clk_0_clk_clk),                                                     //              clk.clk
@@ -555,182 +688,16 @@ module hps_fpga_bridge_mm_interconnect_0 (
 	);
 
 	altera_merlin_slave_agent #(
-		.PKT_ORI_BURST_SIZE_H      (102),
-		.PKT_ORI_BURST_SIZE_L      (100),
-		.PKT_RESPONSE_STATUS_H     (99),
-		.PKT_RESPONSE_STATUS_L     (98),
-		.PKT_BURST_SIZE_H          (70),
-		.PKT_BURST_SIZE_L          (68),
-		.PKT_TRANS_LOCK            (52),
-		.PKT_BEGIN_BURST           (75),
-		.PKT_PROTECTION_H          (93),
-		.PKT_PROTECTION_L          (91),
-		.PKT_BURSTWRAP_H           (67),
-		.PKT_BURSTWRAP_L           (61),
-		.PKT_BYTE_CNT_H            (60),
-		.PKT_BYTE_CNT_L            (54),
-		.PKT_ADDR_H                (47),
-		.PKT_ADDR_L                (18),
-		.PKT_TRANS_COMPRESSED_READ (48),
-		.PKT_TRANS_POSTED          (49),
-		.PKT_TRANS_WRITE           (50),
-		.PKT_TRANS_READ            (51),
-		.PKT_DATA_H                (15),
-		.PKT_DATA_L                (0),
-		.PKT_BYTEEN_H              (17),
-		.PKT_BYTEEN_L              (16),
-		.PKT_SRC_ID_H              (77),
-		.PKT_SRC_ID_L              (77),
-		.PKT_DEST_ID_H             (78),
-		.PKT_DEST_ID_L             (78),
-		.PKT_SYMBOL_W              (8),
-		.ST_CHANNEL_W              (2),
-		.ST_DATA_W                 (103),
-		.AVS_BURSTCOUNT_W          (2),
-		.SUPPRESS_0_BYTEEN_CMD     (1),
-		.PREVENT_FIFO_OVERFLOW     (1),
-		.USE_READRESPONSE          (0),
-		.USE_WRITERESPONSE         (0),
-		.ECC_ENABLE                (0)
-	) hybridcpu0_avalon_slave_0_agent (
-		.clk                     (clk_0_clk_clk),                                                 //             clk.clk
-		.reset                   (hybridcpu0_reset_reset_bridge_in_reset_reset),                  //       clk_reset.reset
-		.m0_address              (hybridcpu0_avalon_slave_0_agent_m0_address),                    //              m0.address
-		.m0_burstcount           (hybridcpu0_avalon_slave_0_agent_m0_burstcount),                 //                .burstcount
-		.m0_byteenable           (hybridcpu0_avalon_slave_0_agent_m0_byteenable),                 //                .byteenable
-		.m0_debugaccess          (hybridcpu0_avalon_slave_0_agent_m0_debugaccess),                //                .debugaccess
-		.m0_lock                 (hybridcpu0_avalon_slave_0_agent_m0_lock),                       //                .lock
-		.m0_readdata             (hybridcpu0_avalon_slave_0_agent_m0_readdata),                   //                .readdata
-		.m0_readdatavalid        (hybridcpu0_avalon_slave_0_agent_m0_readdatavalid),              //                .readdatavalid
-		.m0_read                 (hybridcpu0_avalon_slave_0_agent_m0_read),                       //                .read
-		.m0_waitrequest          (hybridcpu0_avalon_slave_0_agent_m0_waitrequest),                //                .waitrequest
-		.m0_writedata            (hybridcpu0_avalon_slave_0_agent_m0_writedata),                  //                .writedata
-		.m0_write                (hybridcpu0_avalon_slave_0_agent_m0_write),                      //                .write
-		.rp_endofpacket          (hybridcpu0_avalon_slave_0_agent_rp_endofpacket),                //              rp.endofpacket
-		.rp_ready                (hybridcpu0_avalon_slave_0_agent_rp_ready),                      //                .ready
-		.rp_valid                (hybridcpu0_avalon_slave_0_agent_rp_valid),                      //                .valid
-		.rp_data                 (hybridcpu0_avalon_slave_0_agent_rp_data),                       //                .data
-		.rp_startofpacket        (hybridcpu0_avalon_slave_0_agent_rp_startofpacket),              //                .startofpacket
-		.cp_ready                (hybridcpu0_avalon_slave_0_burst_adapter_source0_ready),         //              cp.ready
-		.cp_valid                (hybridcpu0_avalon_slave_0_burst_adapter_source0_valid),         //                .valid
-		.cp_data                 (hybridcpu0_avalon_slave_0_burst_adapter_source0_data),          //                .data
-		.cp_startofpacket        (hybridcpu0_avalon_slave_0_burst_adapter_source0_startofpacket), //                .startofpacket
-		.cp_endofpacket          (hybridcpu0_avalon_slave_0_burst_adapter_source0_endofpacket),   //                .endofpacket
-		.cp_channel              (hybridcpu0_avalon_slave_0_burst_adapter_source0_channel),       //                .channel
-		.rf_sink_ready           (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_ready),            //         rf_sink.ready
-		.rf_sink_valid           (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_valid),            //                .valid
-		.rf_sink_startofpacket   (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_startofpacket),    //                .startofpacket
-		.rf_sink_endofpacket     (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_endofpacket),      //                .endofpacket
-		.rf_sink_data            (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_data),             //                .data
-		.rf_source_ready         (hybridcpu0_avalon_slave_0_agent_rf_source_ready),               //       rf_source.ready
-		.rf_source_valid         (hybridcpu0_avalon_slave_0_agent_rf_source_valid),               //                .valid
-		.rf_source_startofpacket (hybridcpu0_avalon_slave_0_agent_rf_source_startofpacket),       //                .startofpacket
-		.rf_source_endofpacket   (hybridcpu0_avalon_slave_0_agent_rf_source_endofpacket),         //                .endofpacket
-		.rf_source_data          (hybridcpu0_avalon_slave_0_agent_rf_source_data),                //                .data
-		.rdata_fifo_sink_ready   (avalon_st_adapter_out_0_ready),                                 // rdata_fifo_sink.ready
-		.rdata_fifo_sink_valid   (avalon_st_adapter_out_0_valid),                                 //                .valid
-		.rdata_fifo_sink_data    (avalon_st_adapter_out_0_data),                                  //                .data
-		.rdata_fifo_sink_error   (avalon_st_adapter_out_0_error),                                 //                .error
-		.rdata_fifo_src_ready    (hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_ready),          //  rdata_fifo_src.ready
-		.rdata_fifo_src_valid    (hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_valid),          //                .valid
-		.rdata_fifo_src_data     (hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_data),           //                .data
-		.m0_response             (2'b00),                                                         //     (terminated)
-		.m0_writeresponsevalid   (1'b0)                                                           //     (terminated)
-	);
-
-	altera_avalon_sc_fifo #(
-		.SYMBOLS_PER_BEAT    (1),
-		.BITS_PER_SYMBOL     (104),
-		.FIFO_DEPTH          (2),
-		.CHANNEL_WIDTH       (0),
-		.ERROR_WIDTH         (0),
-		.USE_PACKETS         (1),
-		.USE_FILL_LEVEL      (0),
-		.EMPTY_LATENCY       (1),
-		.USE_MEMORY_BLOCKS   (0),
-		.USE_STORE_FORWARD   (0),
-		.USE_ALMOST_FULL_IF  (0),
-		.USE_ALMOST_EMPTY_IF (0)
-	) hybridcpu0_avalon_slave_0_agent_rsp_fifo (
-		.clk               (clk_0_clk_clk),                                              //       clk.clk
-		.reset             (hybridcpu0_reset_reset_bridge_in_reset_reset),               // clk_reset.reset
-		.in_data           (hybridcpu0_avalon_slave_0_agent_rf_source_data),             //        in.data
-		.in_valid          (hybridcpu0_avalon_slave_0_agent_rf_source_valid),            //          .valid
-		.in_ready          (hybridcpu0_avalon_slave_0_agent_rf_source_ready),            //          .ready
-		.in_startofpacket  (hybridcpu0_avalon_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
-		.in_endofpacket    (hybridcpu0_avalon_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
-		.out_data          (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_data),          //       out.data
-		.out_valid         (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_valid),         //          .valid
-		.out_ready         (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_ready),         //          .ready
-		.out_startofpacket (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
-		.out_endofpacket   (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
-		.csr_address       (2'b00),                                                      // (terminated)
-		.csr_read          (1'b0),                                                       // (terminated)
-		.csr_write         (1'b0),                                                       // (terminated)
-		.csr_readdata      (),                                                           // (terminated)
-		.csr_writedata     (32'b00000000000000000000000000000000),                       // (terminated)
-		.almost_full_data  (),                                                           // (terminated)
-		.almost_empty_data (),                                                           // (terminated)
-		.in_empty          (1'b0),                                                       // (terminated)
-		.out_empty         (),                                                           // (terminated)
-		.in_error          (1'b0),                                                       // (terminated)
-		.out_error         (),                                                           // (terminated)
-		.in_channel        (1'b0),                                                       // (terminated)
-		.out_channel       ()                                                            // (terminated)
-	);
-
-	altera_avalon_sc_fifo #(
-		.SYMBOLS_PER_BEAT    (1),
-		.BITS_PER_SYMBOL     (18),
-		.FIFO_DEPTH          (2),
-		.CHANNEL_WIDTH       (0),
-		.ERROR_WIDTH         (0),
-		.USE_PACKETS         (0),
-		.USE_FILL_LEVEL      (0),
-		.EMPTY_LATENCY       (0),
-		.USE_MEMORY_BLOCKS   (0),
-		.USE_STORE_FORWARD   (0),
-		.USE_ALMOST_FULL_IF  (0),
-		.USE_ALMOST_EMPTY_IF (0)
-	) hybridcpu0_avalon_slave_0_agent_rdata_fifo (
-		.clk               (clk_0_clk_clk),                                        //       clk.clk
-		.reset             (hybridcpu0_reset_reset_bridge_in_reset_reset),         // clk_reset.reset
-		.in_data           (hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_data),  //        in.data
-		.in_valid          (hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_valid), //          .valid
-		.in_ready          (hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_ready), //          .ready
-		.out_data          (hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_data),  //       out.data
-		.out_valid         (hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_valid), //          .valid
-		.out_ready         (hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_ready), //          .ready
-		.csr_address       (2'b00),                                                // (terminated)
-		.csr_read          (1'b0),                                                 // (terminated)
-		.csr_write         (1'b0),                                                 // (terminated)
-		.csr_readdata      (),                                                     // (terminated)
-		.csr_writedata     (32'b00000000000000000000000000000000),                 // (terminated)
-		.almost_full_data  (),                                                     // (terminated)
-		.almost_empty_data (),                                                     // (terminated)
-		.in_startofpacket  (1'b0),                                                 // (terminated)
-		.in_endofpacket    (1'b0),                                                 // (terminated)
-		.out_startofpacket (),                                                     // (terminated)
-		.out_endofpacket   (),                                                     // (terminated)
-		.in_empty          (1'b0),                                                 // (terminated)
-		.out_empty         (),                                                     // (terminated)
-		.in_error          (1'b0),                                                 // (terminated)
-		.out_error         (),                                                     // (terminated)
-		.in_channel        (1'b0),                                                 // (terminated)
-		.out_channel       ()                                                      // (terminated)
-	);
-
-	altera_merlin_slave_agent #(
-		.PKT_ORI_BURST_SIZE_H      (93),
-		.PKT_ORI_BURST_SIZE_L      (91),
-		.PKT_RESPONSE_STATUS_H     (90),
-		.PKT_RESPONSE_STATUS_L     (89),
+		.PKT_ORI_BURST_SIZE_H      (95),
+		.PKT_ORI_BURST_SIZE_L      (93),
+		.PKT_RESPONSE_STATUS_H     (92),
+		.PKT_RESPONSE_STATUS_L     (91),
 		.PKT_BURST_SIZE_H          (61),
 		.PKT_BURST_SIZE_L          (59),
 		.PKT_TRANS_LOCK            (43),
 		.PKT_BEGIN_BURST           (66),
-		.PKT_PROTECTION_H          (84),
-		.PKT_PROTECTION_L          (82),
+		.PKT_PROTECTION_H          (86),
+		.PKT_PROTECTION_L          (84),
 		.PKT_BURSTWRAP_H           (58),
 		.PKT_BURSTWRAP_L           (52),
 		.PKT_BYTE_CNT_H            (51),
@@ -745,13 +712,13 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.PKT_DATA_L                (0),
 		.PKT_BYTEEN_H              (8),
 		.PKT_BYTEEN_L              (8),
-		.PKT_SRC_ID_H              (68),
+		.PKT_SRC_ID_H              (69),
 		.PKT_SRC_ID_L              (68),
-		.PKT_DEST_ID_H             (69),
-		.PKT_DEST_ID_L             (69),
+		.PKT_DEST_ID_H             (71),
+		.PKT_DEST_ID_L             (70),
 		.PKT_SYMBOL_W              (8),
-		.ST_CHANNEL_W              (2),
-		.ST_DATA_W                 (94),
+		.ST_CHANNEL_W              (3),
+		.ST_DATA_W                 (96),
 		.AVS_BURSTCOUNT_W          (1),
 		.SUPPRESS_0_BYTEEN_CMD     (1),
 		.PREVENT_FIFO_OVERFLOW     (1),
@@ -760,7 +727,7 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.ECC_ENABLE                (0)
 	) arm_irq_avalon_0_avalon_slave_0_agent (
 		.clk                     (clk_0_clk_clk),                                                       //             clk.clk
-		.reset                   (hybridcpu0_reset_reset_bridge_in_reset_reset),                        //       clk_reset.reset
+		.reset                   (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),                  //       clk_reset.reset
 		.m0_address              (arm_irq_avalon_0_avalon_slave_0_agent_m0_address),                    //              m0.address
 		.m0_burstcount           (arm_irq_avalon_0_avalon_slave_0_agent_m0_burstcount),                 //                .burstcount
 		.m0_byteenable           (arm_irq_avalon_0_avalon_slave_0_agent_m0_byteenable),                 //                .byteenable
@@ -793,10 +760,10 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.rf_source_startofpacket (arm_irq_avalon_0_avalon_slave_0_agent_rf_source_startofpacket),       //                .startofpacket
 		.rf_source_endofpacket   (arm_irq_avalon_0_avalon_slave_0_agent_rf_source_endofpacket),         //                .endofpacket
 		.rf_source_data          (arm_irq_avalon_0_avalon_slave_0_agent_rf_source_data),                //                .data
-		.rdata_fifo_sink_ready   (avalon_st_adapter_001_out_0_ready),                                   // rdata_fifo_sink.ready
-		.rdata_fifo_sink_valid   (avalon_st_adapter_001_out_0_valid),                                   //                .valid
-		.rdata_fifo_sink_data    (avalon_st_adapter_001_out_0_data),                                    //                .data
-		.rdata_fifo_sink_error   (avalon_st_adapter_001_out_0_error),                                   //                .error
+		.rdata_fifo_sink_ready   (avalon_st_adapter_out_0_ready),                                       // rdata_fifo_sink.ready
+		.rdata_fifo_sink_valid   (avalon_st_adapter_out_0_valid),                                       //                .valid
+		.rdata_fifo_sink_data    (avalon_st_adapter_out_0_data),                                        //                .data
+		.rdata_fifo_sink_error   (avalon_st_adapter_out_0_error),                                       //                .error
 		.rdata_fifo_src_ready    (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_src_ready),          //  rdata_fifo_src.ready
 		.rdata_fifo_src_valid    (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_src_valid),          //                .valid
 		.rdata_fifo_src_data     (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_src_data),           //                .data
@@ -806,7 +773,7 @@ module hps_fpga_bridge_mm_interconnect_0 (
 
 	altera_avalon_sc_fifo #(
 		.SYMBOLS_PER_BEAT    (1),
-		.BITS_PER_SYMBOL     (95),
+		.BITS_PER_SYMBOL     (97),
 		.FIFO_DEPTH          (2),
 		.CHANNEL_WIDTH       (0),
 		.ERROR_WIDTH         (0),
@@ -819,7 +786,7 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.USE_ALMOST_EMPTY_IF (0)
 	) arm_irq_avalon_0_avalon_slave_0_agent_rsp_fifo (
 		.clk               (clk_0_clk_clk),                                                    //       clk.clk
-		.reset             (hybridcpu0_reset_reset_bridge_in_reset_reset),                     // clk_reset.reset
+		.reset             (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),               // clk_reset.reset
 		.in_data           (arm_irq_avalon_0_avalon_slave_0_agent_rf_source_data),             //        in.data
 		.in_valid          (arm_irq_avalon_0_avalon_slave_0_agent_rf_source_valid),            //          .valid
 		.in_ready          (arm_irq_avalon_0_avalon_slave_0_agent_rf_source_ready),            //          .ready
@@ -853,20 +820,315 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.ERROR_WIDTH         (0),
 		.USE_PACKETS         (0),
 		.USE_FILL_LEVEL      (0),
-		.EMPTY_LATENCY       (0),
+		.EMPTY_LATENCY       (0),
+		.USE_MEMORY_BLOCKS   (0),
+		.USE_STORE_FORWARD   (0),
+		.USE_ALMOST_FULL_IF  (0),
+		.USE_ALMOST_EMPTY_IF (0)
+	) arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo (
+		.clk               (clk_0_clk_clk),                                              //       clk.clk
+		.reset             (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),         // clk_reset.reset
+		.in_data           (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_src_data),  //        in.data
+		.in_valid          (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_src_valid), //          .valid
+		.in_ready          (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_src_ready), //          .ready
+		.out_data          (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_data),  //       out.data
+		.out_valid         (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_valid), //          .valid
+		.out_ready         (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_ready), //          .ready
+		.csr_address       (2'b00),                                                      // (terminated)
+		.csr_read          (1'b0),                                                       // (terminated)
+		.csr_write         (1'b0),                                                       // (terminated)
+		.csr_readdata      (),                                                           // (terminated)
+		.csr_writedata     (32'b00000000000000000000000000000000),                       // (terminated)
+		.almost_full_data  (),                                                           // (terminated)
+		.almost_empty_data (),                                                           // (terminated)
+		.in_startofpacket  (1'b0),                                                       // (terminated)
+		.in_endofpacket    (1'b0),                                                       // (terminated)
+		.out_startofpacket (),                                                           // (terminated)
+		.out_endofpacket   (),                                                           // (terminated)
+		.in_empty          (1'b0),                                                       // (terminated)
+		.out_empty         (),                                                           // (terminated)
+		.in_error          (1'b0),                                                       // (terminated)
+		.out_error         (),                                                           // (terminated)
+		.in_channel        (1'b0),                                                       // (terminated)
+		.out_channel       ()                                                            // (terminated)
+	);
+
+	altera_merlin_slave_agent #(
+		.PKT_ORI_BURST_SIZE_H      (122),
+		.PKT_ORI_BURST_SIZE_L      (120),
+		.PKT_RESPONSE_STATUS_H     (119),
+		.PKT_RESPONSE_STATUS_L     (118),
+		.PKT_BURST_SIZE_H          (88),
+		.PKT_BURST_SIZE_L          (86),
+		.PKT_TRANS_LOCK            (70),
+		.PKT_BEGIN_BURST           (93),
+		.PKT_PROTECTION_H          (113),
+		.PKT_PROTECTION_L          (111),
+		.PKT_BURSTWRAP_H           (85),
+		.PKT_BURSTWRAP_L           (79),
+		.PKT_BYTE_CNT_H            (78),
+		.PKT_BYTE_CNT_L            (72),
+		.PKT_ADDR_H                (65),
+		.PKT_ADDR_L                (36),
+		.PKT_TRANS_COMPRESSED_READ (66),
+		.PKT_TRANS_POSTED          (67),
+		.PKT_TRANS_WRITE           (68),
+		.PKT_TRANS_READ            (69),
+		.PKT_DATA_H                (31),
+		.PKT_DATA_L                (0),
+		.PKT_BYTEEN_H              (35),
+		.PKT_BYTEEN_L              (32),
+		.PKT_SRC_ID_H              (96),
+		.PKT_SRC_ID_L              (95),
+		.PKT_DEST_ID_H             (98),
+		.PKT_DEST_ID_L             (97),
+		.PKT_SYMBOL_W              (8),
+		.ST_CHANNEL_W              (3),
+		.ST_DATA_W                 (123),
+		.AVS_BURSTCOUNT_W          (3),
+		.SUPPRESS_0_BYTEEN_CMD     (1),
+		.PREVENT_FIFO_OVERFLOW     (1),
+		.USE_READRESPONSE          (0),
+		.USE_WRITERESPONSE         (0),
+		.ECC_ENABLE                (0)
+	) arm_regs_avalon_0_avalon_slave_0_agent (
+		.clk                     (clk_0_clk_clk),                                                        //             clk.clk
+		.reset                   (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),                   //       clk_reset.reset
+		.m0_address              (arm_regs_avalon_0_avalon_slave_0_agent_m0_address),                    //              m0.address
+		.m0_burstcount           (arm_regs_avalon_0_avalon_slave_0_agent_m0_burstcount),                 //                .burstcount
+		.m0_byteenable           (arm_regs_avalon_0_avalon_slave_0_agent_m0_byteenable),                 //                .byteenable
+		.m0_debugaccess          (arm_regs_avalon_0_avalon_slave_0_agent_m0_debugaccess),                //                .debugaccess
+		.m0_lock                 (arm_regs_avalon_0_avalon_slave_0_agent_m0_lock),                       //                .lock
+		.m0_readdata             (arm_regs_avalon_0_avalon_slave_0_agent_m0_readdata),                   //                .readdata
+		.m0_readdatavalid        (arm_regs_avalon_0_avalon_slave_0_agent_m0_readdatavalid),              //                .readdatavalid
+		.m0_read                 (arm_regs_avalon_0_avalon_slave_0_agent_m0_read),                       //                .read
+		.m0_waitrequest          (arm_regs_avalon_0_avalon_slave_0_agent_m0_waitrequest),                //                .waitrequest
+		.m0_writedata            (arm_regs_avalon_0_avalon_slave_0_agent_m0_writedata),                  //                .writedata
+		.m0_write                (arm_regs_avalon_0_avalon_slave_0_agent_m0_write),                      //                .write
+		.rp_endofpacket          (arm_regs_avalon_0_avalon_slave_0_agent_rp_endofpacket),                //              rp.endofpacket
+		.rp_ready                (arm_regs_avalon_0_avalon_slave_0_agent_rp_ready),                      //                .ready
+		.rp_valid                (arm_regs_avalon_0_avalon_slave_0_agent_rp_valid),                      //                .valid
+		.rp_data                 (arm_regs_avalon_0_avalon_slave_0_agent_rp_data),                       //                .data
+		.rp_startofpacket        (arm_regs_avalon_0_avalon_slave_0_agent_rp_startofpacket),              //                .startofpacket
+		.cp_ready                (arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_ready),         //              cp.ready
+		.cp_valid                (arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_valid),         //                .valid
+		.cp_data                 (arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_data),          //                .data
+		.cp_startofpacket        (arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_startofpacket), //                .startofpacket
+		.cp_endofpacket          (arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_endofpacket),   //                .endofpacket
+		.cp_channel              (arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_channel),       //                .channel
+		.rf_sink_ready           (arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo_out_ready),            //         rf_sink.ready
+		.rf_sink_valid           (arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo_out_valid),            //                .valid
+		.rf_sink_startofpacket   (arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo_out_startofpacket),    //                .startofpacket
+		.rf_sink_endofpacket     (arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo_out_endofpacket),      //                .endofpacket
+		.rf_sink_data            (arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo_out_data),             //                .data
+		.rf_source_ready         (arm_regs_avalon_0_avalon_slave_0_agent_rf_source_ready),               //       rf_source.ready
+		.rf_source_valid         (arm_regs_avalon_0_avalon_slave_0_agent_rf_source_valid),               //                .valid
+		.rf_source_startofpacket (arm_regs_avalon_0_avalon_slave_0_agent_rf_source_startofpacket),       //                .startofpacket
+		.rf_source_endofpacket   (arm_regs_avalon_0_avalon_slave_0_agent_rf_source_endofpacket),         //                .endofpacket
+		.rf_source_data          (arm_regs_avalon_0_avalon_slave_0_agent_rf_source_data),                //                .data
+		.rdata_fifo_sink_ready   (avalon_st_adapter_001_out_0_ready),                                    // rdata_fifo_sink.ready
+		.rdata_fifo_sink_valid   (avalon_st_adapter_001_out_0_valid),                                    //                .valid
+		.rdata_fifo_sink_data    (avalon_st_adapter_001_out_0_data),                                     //                .data
+		.rdata_fifo_sink_error   (avalon_st_adapter_001_out_0_error),                                    //                .error
+		.rdata_fifo_src_ready    (arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_src_ready),          //  rdata_fifo_src.ready
+		.rdata_fifo_src_valid    (arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_src_valid),          //                .valid
+		.rdata_fifo_src_data     (arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_src_data),           //                .data
+		.m0_response             (2'b00),                                                                //     (terminated)
+		.m0_writeresponsevalid   (1'b0)                                                                  //     (terminated)
+	);
+
+	altera_avalon_sc_fifo #(
+		.SYMBOLS_PER_BEAT    (1),
+		.BITS_PER_SYMBOL     (124),
+		.FIFO_DEPTH          (2),
+		.CHANNEL_WIDTH       (0),
+		.ERROR_WIDTH         (0),
+		.USE_PACKETS         (1),
+		.USE_FILL_LEVEL      (0),
+		.EMPTY_LATENCY       (1),
+		.USE_MEMORY_BLOCKS   (0),
+		.USE_STORE_FORWARD   (0),
+		.USE_ALMOST_FULL_IF  (0),
+		.USE_ALMOST_EMPTY_IF (0)
+	) arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo (
+		.clk               (clk_0_clk_clk),                                                     //       clk.clk
+		.reset             (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
+		.in_data           (arm_regs_avalon_0_avalon_slave_0_agent_rf_source_data),             //        in.data
+		.in_valid          (arm_regs_avalon_0_avalon_slave_0_agent_rf_source_valid),            //          .valid
+		.in_ready          (arm_regs_avalon_0_avalon_slave_0_agent_rf_source_ready),            //          .ready
+		.in_startofpacket  (arm_regs_avalon_0_avalon_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
+		.in_endofpacket    (arm_regs_avalon_0_avalon_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
+		.out_data          (arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo_out_data),          //       out.data
+		.out_valid         (arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo_out_valid),         //          .valid
+		.out_ready         (arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo_out_ready),         //          .ready
+		.out_startofpacket (arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
+		.out_endofpacket   (arm_regs_avalon_0_avalon_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
+		.csr_address       (2'b00),                                                             // (terminated)
+		.csr_read          (1'b0),                                                              // (terminated)
+		.csr_write         (1'b0),                                                              // (terminated)
+		.csr_readdata      (),                                                                  // (terminated)
+		.csr_writedata     (32'b00000000000000000000000000000000),                              // (terminated)
+		.almost_full_data  (),                                                                  // (terminated)
+		.almost_empty_data (),                                                                  // (terminated)
+		.in_empty          (1'b0),                                                              // (terminated)
+		.out_empty         (),                                                                  // (terminated)
+		.in_error          (1'b0),                                                              // (terminated)
+		.out_error         (),                                                                  // (terminated)
+		.in_channel        (1'b0),                                                              // (terminated)
+		.out_channel       ()                                                                   // (terminated)
+	);
+
+	altera_avalon_sc_fifo #(
+		.SYMBOLS_PER_BEAT    (1),
+		.BITS_PER_SYMBOL     (34),
+		.FIFO_DEPTH          (2),
+		.CHANNEL_WIDTH       (0),
+		.ERROR_WIDTH         (0),
+		.USE_PACKETS         (0),
+		.USE_FILL_LEVEL      (0),
+		.EMPTY_LATENCY       (0),
+		.USE_MEMORY_BLOCKS   (0),
+		.USE_STORE_FORWARD   (0),
+		.USE_ALMOST_FULL_IF  (0),
+		.USE_ALMOST_EMPTY_IF (0)
+	) arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo (
+		.clk               (clk_0_clk_clk),                                               //       clk.clk
+		.reset             (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),          // clk_reset.reset
+		.in_data           (arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_src_data),  //        in.data
+		.in_valid          (arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_src_valid), //          .valid
+		.in_ready          (arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_src_ready), //          .ready
+		.out_data          (arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_out_data),  //       out.data
+		.out_valid         (arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_out_valid), //          .valid
+		.out_ready         (arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_out_ready), //          .ready
+		.csr_address       (2'b00),                                                       // (terminated)
+		.csr_read          (1'b0),                                                        // (terminated)
+		.csr_write         (1'b0),                                                        // (terminated)
+		.csr_readdata      (),                                                            // (terminated)
+		.csr_writedata     (32'b00000000000000000000000000000000),                        // (terminated)
+		.almost_full_data  (),                                                            // (terminated)
+		.almost_empty_data (),                                                            // (terminated)
+		.in_startofpacket  (1'b0),                                                        // (terminated)
+		.in_endofpacket    (1'b0),                                                        // (terminated)
+		.out_startofpacket (),                                                            // (terminated)
+		.out_endofpacket   (),                                                            // (terminated)
+		.in_empty          (1'b0),                                                        // (terminated)
+		.out_empty         (),                                                            // (terminated)
+		.in_error          (1'b0),                                                        // (terminated)
+		.out_error         (),                                                            // (terminated)
+		.in_channel        (1'b0),                                                        // (terminated)
+		.out_channel       ()                                                             // (terminated)
+	);
+
+	altera_merlin_slave_agent #(
+		.PKT_ORI_BURST_SIZE_H      (122),
+		.PKT_ORI_BURST_SIZE_L      (120),
+		.PKT_RESPONSE_STATUS_H     (119),
+		.PKT_RESPONSE_STATUS_L     (118),
+		.PKT_BURST_SIZE_H          (88),
+		.PKT_BURST_SIZE_L          (86),
+		.PKT_TRANS_LOCK            (70),
+		.PKT_BEGIN_BURST           (93),
+		.PKT_PROTECTION_H          (113),
+		.PKT_PROTECTION_L          (111),
+		.PKT_BURSTWRAP_H           (85),
+		.PKT_BURSTWRAP_L           (79),
+		.PKT_BYTE_CNT_H            (78),
+		.PKT_BYTE_CNT_L            (72),
+		.PKT_ADDR_H                (65),
+		.PKT_ADDR_L                (36),
+		.PKT_TRANS_COMPRESSED_READ (66),
+		.PKT_TRANS_POSTED          (67),
+		.PKT_TRANS_WRITE           (68),
+		.PKT_TRANS_READ            (69),
+		.PKT_DATA_H                (31),
+		.PKT_DATA_L                (0),
+		.PKT_BYTEEN_H              (35),
+		.PKT_BYTEEN_L              (32),
+		.PKT_SRC_ID_H              (96),
+		.PKT_SRC_ID_L              (95),
+		.PKT_DEST_ID_H             (98),
+		.PKT_DEST_ID_L             (97),
+		.PKT_SYMBOL_W              (8),
+		.ST_CHANNEL_W              (3),
+		.ST_DATA_W                 (123),
+		.AVS_BURSTCOUNT_W          (3),
+		.SUPPRESS_0_BYTEEN_CMD     (1),
+		.PREVENT_FIFO_OVERFLOW     (1),
+		.USE_READRESPONSE          (0),
+		.USE_WRITERESPONSE         (0),
+		.ECC_ENABLE                (0)
+	) hybridcpu0_avalon_slave_0_agent (
+		.clk                     (clk_0_clk_clk),                                                 //             clk.clk
+		.reset                   (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),            //       clk_reset.reset
+		.m0_address              (hybridcpu0_avalon_slave_0_agent_m0_address),                    //              m0.address
+		.m0_burstcount           (hybridcpu0_avalon_slave_0_agent_m0_burstcount),                 //                .burstcount
+		.m0_byteenable           (hybridcpu0_avalon_slave_0_agent_m0_byteenable),                 //                .byteenable
+		.m0_debugaccess          (hybridcpu0_avalon_slave_0_agent_m0_debugaccess),                //                .debugaccess
+		.m0_lock                 (hybridcpu0_avalon_slave_0_agent_m0_lock),                       //                .lock
+		.m0_readdata             (hybridcpu0_avalon_slave_0_agent_m0_readdata),                   //                .readdata
+		.m0_readdatavalid        (hybridcpu0_avalon_slave_0_agent_m0_readdatavalid),              //                .readdatavalid
+		.m0_read                 (hybridcpu0_avalon_slave_0_agent_m0_read),                       //                .read
+		.m0_waitrequest          (hybridcpu0_avalon_slave_0_agent_m0_waitrequest),                //                .waitrequest
+		.m0_writedata            (hybridcpu0_avalon_slave_0_agent_m0_writedata),                  //                .writedata
+		.m0_write                (hybridcpu0_avalon_slave_0_agent_m0_write),                      //                .write
+		.rp_endofpacket          (hybridcpu0_avalon_slave_0_agent_rp_endofpacket),                //              rp.endofpacket
+		.rp_ready                (hybridcpu0_avalon_slave_0_agent_rp_ready),                      //                .ready
+		.rp_valid                (hybridcpu0_avalon_slave_0_agent_rp_valid),                      //                .valid
+		.rp_data                 (hybridcpu0_avalon_slave_0_agent_rp_data),                       //                .data
+		.rp_startofpacket        (hybridcpu0_avalon_slave_0_agent_rp_startofpacket),              //                .startofpacket
+		.cp_ready                (hybridcpu0_avalon_slave_0_burst_adapter_source0_ready),         //              cp.ready
+		.cp_valid                (hybridcpu0_avalon_slave_0_burst_adapter_source0_valid),         //                .valid
+		.cp_data                 (hybridcpu0_avalon_slave_0_burst_adapter_source0_data),          //                .data
+		.cp_startofpacket        (hybridcpu0_avalon_slave_0_burst_adapter_source0_startofpacket), //                .startofpacket
+		.cp_endofpacket          (hybridcpu0_avalon_slave_0_burst_adapter_source0_endofpacket),   //                .endofpacket
+		.cp_channel              (hybridcpu0_avalon_slave_0_burst_adapter_source0_channel),       //                .channel
+		.rf_sink_ready           (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_ready),            //         rf_sink.ready
+		.rf_sink_valid           (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_valid),            //                .valid
+		.rf_sink_startofpacket   (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_startofpacket),    //                .startofpacket
+		.rf_sink_endofpacket     (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_endofpacket),      //                .endofpacket
+		.rf_sink_data            (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_data),             //                .data
+		.rf_source_ready         (hybridcpu0_avalon_slave_0_agent_rf_source_ready),               //       rf_source.ready
+		.rf_source_valid         (hybridcpu0_avalon_slave_0_agent_rf_source_valid),               //                .valid
+		.rf_source_startofpacket (hybridcpu0_avalon_slave_0_agent_rf_source_startofpacket),       //                .startofpacket
+		.rf_source_endofpacket   (hybridcpu0_avalon_slave_0_agent_rf_source_endofpacket),         //                .endofpacket
+		.rf_source_data          (hybridcpu0_avalon_slave_0_agent_rf_source_data),                //                .data
+		.rdata_fifo_sink_ready   (avalon_st_adapter_002_out_0_ready),                             // rdata_fifo_sink.ready
+		.rdata_fifo_sink_valid   (avalon_st_adapter_002_out_0_valid),                             //                .valid
+		.rdata_fifo_sink_data    (avalon_st_adapter_002_out_0_data),                              //                .data
+		.rdata_fifo_sink_error   (avalon_st_adapter_002_out_0_error),                             //                .error
+		.rdata_fifo_src_ready    (hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_ready),          //  rdata_fifo_src.ready
+		.rdata_fifo_src_valid    (hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_valid),          //                .valid
+		.rdata_fifo_src_data     (hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_data),           //                .data
+		.m0_response             (2'b00),                                                         //     (terminated)
+		.m0_writeresponsevalid   (1'b0)                                                           //     (terminated)
+	);
+
+	altera_avalon_sc_fifo #(
+		.SYMBOLS_PER_BEAT    (1),
+		.BITS_PER_SYMBOL     (124),
+		.FIFO_DEPTH          (9),
+		.CHANNEL_WIDTH       (0),
+		.ERROR_WIDTH         (0),
+		.USE_PACKETS         (1),
+		.USE_FILL_LEVEL      (0),
+		.EMPTY_LATENCY       (1),
 		.USE_MEMORY_BLOCKS   (0),
 		.USE_STORE_FORWARD   (0),
 		.USE_ALMOST_FULL_IF  (0),
 		.USE_ALMOST_EMPTY_IF (0)
-	) arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo (
+	) hybridcpu0_avalon_slave_0_agent_rsp_fifo (
 		.clk               (clk_0_clk_clk),                                              //       clk.clk
-		.reset             (hybridcpu0_reset_reset_bridge_in_reset_reset),               // clk_reset.reset
-		.in_data           (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_src_data),  //        in.data
-		.in_valid          (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_src_valid), //          .valid
-		.in_ready          (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_src_ready), //          .ready
-		.out_data          (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_data),  //       out.data
-		.out_valid         (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_valid), //          .valid
-		.out_ready         (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_ready), //          .ready
+		.reset             (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),         // clk_reset.reset
+		.in_data           (hybridcpu0_avalon_slave_0_agent_rf_source_data),             //        in.data
+		.in_valid          (hybridcpu0_avalon_slave_0_agent_rf_source_valid),            //          .valid
+		.in_ready          (hybridcpu0_avalon_slave_0_agent_rf_source_ready),            //          .ready
+		.in_startofpacket  (hybridcpu0_avalon_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
+		.in_endofpacket    (hybridcpu0_avalon_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
+		.out_data          (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_data),          //       out.data
+		.out_valid         (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_valid),         //          .valid
+		.out_ready         (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_ready),         //          .ready
+		.out_startofpacket (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
+		.out_endofpacket   (hybridcpu0_avalon_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
 		.csr_address       (2'b00),                                                      // (terminated)
 		.csr_read          (1'b0),                                                       // (terminated)
 		.csr_write         (1'b0),                                                       // (terminated)
@@ -874,10 +1136,6 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.csr_writedata     (32'b00000000000000000000000000000000),                       // (terminated)
 		.almost_full_data  (),                                                           // (terminated)
 		.almost_empty_data (),                                                           // (terminated)
-		.in_startofpacket  (1'b0),                                                       // (terminated)
-		.in_endofpacket    (1'b0),                                                       // (terminated)
-		.out_startofpacket (),                                                           // (terminated)
-		.out_endofpacket   (),                                                           // (terminated)
 		.in_empty          (1'b0),                                                       // (terminated)
 		.out_empty         (),                                                           // (terminated)
 		.in_error          (1'b0),                                                       // (terminated)
@@ -886,6 +1144,47 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.out_channel       ()                                                            // (terminated)
 	);
 
+	altera_avalon_sc_fifo #(
+		.SYMBOLS_PER_BEAT    (1),
+		.BITS_PER_SYMBOL     (34),
+		.FIFO_DEPTH          (16),
+		.CHANNEL_WIDTH       (0),
+		.ERROR_WIDTH         (0),
+		.USE_PACKETS         (0),
+		.USE_FILL_LEVEL      (0),
+		.EMPTY_LATENCY       (3),
+		.USE_MEMORY_BLOCKS   (1),
+		.USE_STORE_FORWARD   (0),
+		.USE_ALMOST_FULL_IF  (0),
+		.USE_ALMOST_EMPTY_IF (0)
+	) hybridcpu0_avalon_slave_0_agent_rdata_fifo (
+		.clk               (clk_0_clk_clk),                                        //       clk.clk
+		.reset             (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),   // clk_reset.reset
+		.in_data           (hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_data),  //        in.data
+		.in_valid          (hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_valid), //          .valid
+		.in_ready          (hybridcpu0_avalon_slave_0_agent_rdata_fifo_src_ready), //          .ready
+		.out_data          (hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_data),  //       out.data
+		.out_valid         (hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_valid), //          .valid
+		.out_ready         (hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_ready), //          .ready
+		.csr_address       (2'b00),                                                // (terminated)
+		.csr_read          (1'b0),                                                 // (terminated)
+		.csr_write         (1'b0),                                                 // (terminated)
+		.csr_readdata      (),                                                     // (terminated)
+		.csr_writedata     (32'b00000000000000000000000000000000),                 // (terminated)
+		.almost_full_data  (),                                                     // (terminated)
+		.almost_empty_data (),                                                     // (terminated)
+		.in_startofpacket  (1'b0),                                                 // (terminated)
+		.in_endofpacket    (1'b0),                                                 // (terminated)
+		.out_startofpacket (),                                                     // (terminated)
+		.out_endofpacket   (),                                                     // (terminated)
+		.in_empty          (1'b0),                                                 // (terminated)
+		.out_empty         (),                                                     // (terminated)
+		.in_error          (1'b0),                                                 // (terminated)
+		.out_error         (),                                                     // (terminated)
+		.in_channel        (1'b0),                                                 // (terminated)
+		.out_channel       ()                                                      // (terminated)
+	);
+
 	hps_fpga_bridge_mm_interconnect_0_router router (
 		.sink_ready         (hps_0_h2f_axi_master_agent_write_cp_ready),                        //      sink.ready
 		.sink_valid         (hps_0_h2f_axi_master_agent_write_cp_valid),                        //          .valid
@@ -919,41 +1218,57 @@ module hps_fpga_bridge_mm_interconnect_0 (
 	);
 
 	hps_fpga_bridge_mm_interconnect_0_router_002 router_002 (
-		.sink_ready         (hybridcpu0_avalon_slave_0_agent_rp_ready),         //      sink.ready
-		.sink_valid         (hybridcpu0_avalon_slave_0_agent_rp_valid),         //          .valid
-		.sink_data          (hybridcpu0_avalon_slave_0_agent_rp_data),          //          .data
-		.sink_startofpacket (hybridcpu0_avalon_slave_0_agent_rp_startofpacket), //          .startofpacket
-		.sink_endofpacket   (hybridcpu0_avalon_slave_0_agent_rp_endofpacket),   //          .endofpacket
-		.clk                (clk_0_clk_clk),                                    //       clk.clk
-		.reset              (hybridcpu0_reset_reset_bridge_in_reset_reset),     // clk_reset.reset
-		.src_ready          (router_002_src_ready),                             //       src.ready
-		.src_valid          (router_002_src_valid),                             //          .valid
-		.src_data           (router_002_src_data),                              //          .data
-		.src_channel        (router_002_src_channel),                           //          .channel
-		.src_startofpacket  (router_002_src_startofpacket),                     //          .startofpacket
-		.src_endofpacket    (router_002_src_endofpacket)                        //          .endofpacket
-	);
-
-	hps_fpga_bridge_mm_interconnect_0_router_003 router_003 (
 		.sink_ready         (arm_irq_avalon_0_avalon_slave_0_agent_rp_ready),         //      sink.ready
 		.sink_valid         (arm_irq_avalon_0_avalon_slave_0_agent_rp_valid),         //          .valid
 		.sink_data          (arm_irq_avalon_0_avalon_slave_0_agent_rp_data),          //          .data
 		.sink_startofpacket (arm_irq_avalon_0_avalon_slave_0_agent_rp_startofpacket), //          .startofpacket
 		.sink_endofpacket   (arm_irq_avalon_0_avalon_slave_0_agent_rp_endofpacket),   //          .endofpacket
 		.clk                (clk_0_clk_clk),                                          //       clk.clk
-		.reset              (hybridcpu0_reset_reset_bridge_in_reset_reset),           // clk_reset.reset
-		.src_ready          (router_003_src_ready),                                   //       src.ready
-		.src_valid          (router_003_src_valid),                                   //          .valid
-		.src_data           (router_003_src_data),                                    //          .data
-		.src_channel        (router_003_src_channel),                                 //          .channel
-		.src_startofpacket  (router_003_src_startofpacket),                           //          .startofpacket
-		.src_endofpacket    (router_003_src_endofpacket)                              //          .endofpacket
+		.reset              (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),     // clk_reset.reset
+		.src_ready          (router_002_src_ready),                                   //       src.ready
+		.src_valid          (router_002_src_valid),                                   //          .valid
+		.src_data           (router_002_src_data),                                    //          .data
+		.src_channel        (router_002_src_channel),                                 //          .channel
+		.src_startofpacket  (router_002_src_startofpacket),                           //          .startofpacket
+		.src_endofpacket    (router_002_src_endofpacket)                              //          .endofpacket
+	);
+
+	hps_fpga_bridge_mm_interconnect_0_router_003 router_003 (
+		.sink_ready         (arm_regs_avalon_0_avalon_slave_0_agent_rp_ready),         //      sink.ready
+		.sink_valid         (arm_regs_avalon_0_avalon_slave_0_agent_rp_valid),         //          .valid
+		.sink_data          (arm_regs_avalon_0_avalon_slave_0_agent_rp_data),          //          .data
+		.sink_startofpacket (arm_regs_avalon_0_avalon_slave_0_agent_rp_startofpacket), //          .startofpacket
+		.sink_endofpacket   (arm_regs_avalon_0_avalon_slave_0_agent_rp_endofpacket),   //          .endofpacket
+		.clk                (clk_0_clk_clk),                                           //       clk.clk
+		.reset              (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),      // clk_reset.reset
+		.src_ready          (router_003_src_ready),                                    //       src.ready
+		.src_valid          (router_003_src_valid),                                    //          .valid
+		.src_data           (router_003_src_data),                                     //          .data
+		.src_channel        (router_003_src_channel),                                  //          .channel
+		.src_startofpacket  (router_003_src_startofpacket),                            //          .startofpacket
+		.src_endofpacket    (router_003_src_endofpacket)                               //          .endofpacket
+	);
+
+	hps_fpga_bridge_mm_interconnect_0_router_003 router_004 (
+		.sink_ready         (hybridcpu0_avalon_slave_0_agent_rp_ready),           //      sink.ready
+		.sink_valid         (hybridcpu0_avalon_slave_0_agent_rp_valid),           //          .valid
+		.sink_data          (hybridcpu0_avalon_slave_0_agent_rp_data),            //          .data
+		.sink_startofpacket (hybridcpu0_avalon_slave_0_agent_rp_startofpacket),   //          .startofpacket
+		.sink_endofpacket   (hybridcpu0_avalon_slave_0_agent_rp_endofpacket),     //          .endofpacket
+		.clk                (clk_0_clk_clk),                                      //       clk.clk
+		.reset              (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
+		.src_ready          (router_004_src_ready),                               //       src.ready
+		.src_valid          (router_004_src_valid),                               //          .valid
+		.src_data           (router_004_src_data),                                //          .data
+		.src_channel        (router_004_src_channel),                             //          .channel
+		.src_startofpacket  (router_004_src_startofpacket),                       //          .startofpacket
+		.src_endofpacket    (router_004_src_endofpacket)                          //          .endofpacket
 	);
 
 	altera_merlin_traffic_limiter #(
-		.PKT_DEST_ID_H             (96),
-		.PKT_DEST_ID_L             (96),
-		.PKT_SRC_ID_H              (95),
+		.PKT_DEST_ID_H             (98),
+		.PKT_DEST_ID_L             (97),
+		.PKT_SRC_ID_H              (96),
 		.PKT_SRC_ID_L              (95),
 		.PKT_BYTE_CNT_H            (78),
 		.PKT_BYTE_CNT_L            (72),
@@ -961,11 +1276,11 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.PKT_BYTEEN_L              (32),
 		.PKT_TRANS_POSTED          (67),
 		.PKT_TRANS_WRITE           (68),
-		.MAX_OUTSTANDING_RESPONSES (3),
+		.MAX_OUTSTANDING_RESPONSES (10),
 		.PIPELINED                 (0),
-		.ST_DATA_W                 (121),
-		.ST_CHANNEL_W              (2),
-		.VALID_WIDTH               (2),
+		.ST_DATA_W                 (123),
+		.ST_CHANNEL_W              (3),
+		.VALID_WIDTH               (3),
 		.ENFORCE_ORDER             (1),
 		.PREVENT_HAZARDS           (0),
 		.SUPPORTS_POSTED_WRITES    (1),
@@ -1001,9 +1316,9 @@ module hps_fpga_bridge_mm_interconnect_0 (
 	);
 
 	altera_merlin_traffic_limiter #(
-		.PKT_DEST_ID_H             (96),
-		.PKT_DEST_ID_L             (96),
-		.PKT_SRC_ID_H              (95),
+		.PKT_DEST_ID_H             (98),
+		.PKT_DEST_ID_L             (97),
+		.PKT_SRC_ID_H              (96),
 		.PKT_SRC_ID_L              (95),
 		.PKT_BYTE_CNT_H            (78),
 		.PKT_BYTE_CNT_L            (72),
@@ -1011,11 +1326,11 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.PKT_BYTEEN_L              (32),
 		.PKT_TRANS_POSTED          (67),
 		.PKT_TRANS_WRITE           (68),
-		.MAX_OUTSTANDING_RESPONSES (3),
+		.MAX_OUTSTANDING_RESPONSES (10),
 		.PIPELINED                 (0),
-		.ST_DATA_W                 (121),
-		.ST_CHANNEL_W              (2),
-		.VALID_WIDTH               (2),
+		.ST_DATA_W                 (123),
+		.ST_CHANNEL_W              (3),
+		.VALID_WIDTH               (3),
 		.ENFORCE_ORDER             (1),
 		.PREVENT_HAZARDS           (0),
 		.SUPPORTS_POSTED_WRITES    (1),
@@ -1050,56 +1365,6 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.cmd_src_valid          (hps_0_h2f_axi_master_rd_limiter_cmd_valid_data)                    // cmd_valid.data
 	);
 
-	altera_merlin_burst_adapter #(
-		.PKT_ADDR_H                (47),
-		.PKT_ADDR_L                (18),
-		.PKT_BEGIN_BURST           (75),
-		.PKT_BYTE_CNT_H            (60),
-		.PKT_BYTE_CNT_L            (54),
-		.PKT_BYTEEN_H              (17),
-		.PKT_BYTEEN_L              (16),
-		.PKT_BURST_SIZE_H          (70),
-		.PKT_BURST_SIZE_L          (68),
-		.PKT_BURST_TYPE_H          (72),
-		.PKT_BURST_TYPE_L          (71),
-		.PKT_BURSTWRAP_H           (67),
-		.PKT_BURSTWRAP_L           (61),
-		.PKT_TRANS_COMPRESSED_READ (48),
-		.PKT_TRANS_WRITE           (50),
-		.PKT_TRANS_READ            (51),
-		.OUT_NARROW_SIZE           (0),
-		.IN_NARROW_SIZE            (1),
-		.OUT_FIXED                 (0),
-		.OUT_COMPLETE_WRAP         (0),
-		.ST_DATA_W                 (103),
-		.ST_CHANNEL_W              (2),
-		.OUT_BYTE_CNT_H            (55),
-		.OUT_BURSTWRAP_H           (67),
-		.COMPRESSED_READ_SUPPORT   (1),
-		.BYTEENABLE_SYNTHESIS      (1),
-		.PIPE_INPUTS               (0),
-		.NO_WRAP_SUPPORT           (0),
-		.INCOMPLETE_WRAP_SUPPORT   (0),
-		.BURSTWRAP_CONST_MASK      (0),
-		.BURSTWRAP_CONST_VALUE     (0),
-		.ADAPTER_VERSION           ("13.1")
-	) hybridcpu0_avalon_slave_0_burst_adapter (
-		.clk                   (clk_0_clk_clk),                                                 //       cr0.clk
-		.reset                 (hybridcpu0_reset_reset_bridge_in_reset_reset),                  // cr0_reset.reset
-		.sink0_valid           (hybridcpu0_avalon_slave_0_cmd_width_adapter_src_valid),         //     sink0.valid
-		.sink0_data            (hybridcpu0_avalon_slave_0_cmd_width_adapter_src_data),          //          .data
-		.sink0_channel         (hybridcpu0_avalon_slave_0_cmd_width_adapter_src_channel),       //          .channel
-		.sink0_startofpacket   (hybridcpu0_avalon_slave_0_cmd_width_adapter_src_startofpacket), //          .startofpacket
-		.sink0_endofpacket     (hybridcpu0_avalon_slave_0_cmd_width_adapter_src_endofpacket),   //          .endofpacket
-		.sink0_ready           (hybridcpu0_avalon_slave_0_cmd_width_adapter_src_ready),         //          .ready
-		.source0_valid         (hybridcpu0_avalon_slave_0_burst_adapter_source0_valid),         //   source0.valid
-		.source0_data          (hybridcpu0_avalon_slave_0_burst_adapter_source0_data),          //          .data
-		.source0_channel       (hybridcpu0_avalon_slave_0_burst_adapter_source0_channel),       //          .channel
-		.source0_startofpacket (hybridcpu0_avalon_slave_0_burst_adapter_source0_startofpacket), //          .startofpacket
-		.source0_endofpacket   (hybridcpu0_avalon_slave_0_burst_adapter_source0_endofpacket),   //          .endofpacket
-		.source0_ready         (hybridcpu0_avalon_slave_0_burst_adapter_source0_ready)          //          .ready
-	);
-
 	altera_merlin_burst_adapter #(
 		.PKT_ADDR_H                (38),
 		.PKT_ADDR_L                (9),
@@ -1121,8 +1386,8 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.IN_NARROW_SIZE            (1),
 		.OUT_FIXED                 (0),
 		.OUT_COMPLETE_WRAP         (0),
-		.ST_DATA_W                 (94),
-		.ST_CHANNEL_W              (2),
+		.ST_DATA_W                 (96),
+		.ST_CHANNEL_W              (3),
 		.OUT_BYTE_CNT_H            (45),
 		.OUT_BURSTWRAP_H           (58),
 		.COMPRESSED_READ_SUPPORT   (1),
@@ -1135,7 +1400,7 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.ADAPTER_VERSION           ("13.1")
 	) arm_irq_avalon_0_avalon_slave_0_burst_adapter (
 		.clk                   (clk_0_clk_clk),                                                       //       cr0.clk
-		.reset                 (hybridcpu0_reset_reset_bridge_in_reset_reset),                        // cr0_reset.reset
+		.reset                 (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),                  // cr0_reset.reset
 		.sink0_valid           (arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_valid),         //     sink0.valid
 		.sink0_data            (arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_data),          //          .data
 		.sink0_channel         (arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_channel),       //          .channel
@@ -1150,6 +1415,106 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.source0_ready         (arm_irq_avalon_0_avalon_slave_0_burst_adapter_source0_ready)          //          .ready
 	);
 
+	altera_merlin_burst_adapter #(
+		.PKT_ADDR_H                (65),
+		.PKT_ADDR_L                (36),
+		.PKT_BEGIN_BURST           (93),
+		.PKT_BYTE_CNT_H            (78),
+		.PKT_BYTE_CNT_L            (72),
+		.PKT_BYTEEN_H              (35),
+		.PKT_BYTEEN_L              (32),
+		.PKT_BURST_SIZE_H          (88),
+		.PKT_BURST_SIZE_L          (86),
+		.PKT_BURST_TYPE_H          (90),
+		.PKT_BURST_TYPE_L          (89),
+		.PKT_BURSTWRAP_H           (85),
+		.PKT_BURSTWRAP_L           (79),
+		.PKT_TRANS_COMPRESSED_READ (66),
+		.PKT_TRANS_WRITE           (68),
+		.PKT_TRANS_READ            (69),
+		.OUT_NARROW_SIZE           (0),
+		.IN_NARROW_SIZE            (1),
+		.OUT_FIXED                 (0),
+		.OUT_COMPLETE_WRAP         (0),
+		.ST_DATA_W                 (123),
+		.ST_CHANNEL_W              (3),
+		.OUT_BYTE_CNT_H            (74),
+		.OUT_BURSTWRAP_H           (85),
+		.COMPRESSED_READ_SUPPORT   (1),
+		.BYTEENABLE_SYNTHESIS      (1),
+		.PIPE_INPUTS               (0),
+		.NO_WRAP_SUPPORT           (0),
+		.INCOMPLETE_WRAP_SUPPORT   (0),
+		.BURSTWRAP_CONST_MASK      (0),
+		.BURSTWRAP_CONST_VALUE     (0),
+		.ADAPTER_VERSION           ("13.1")
+	) arm_regs_avalon_0_avalon_slave_0_burst_adapter (
+		.clk                   (clk_0_clk_clk),                                                        //       cr0.clk
+		.reset                 (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),                   // cr0_reset.reset
+		.sink0_valid           (cmd_mux_001_src_valid),                                                //     sink0.valid
+		.sink0_data            (cmd_mux_001_src_data),                                                 //          .data
+		.sink0_channel         (cmd_mux_001_src_channel),                                              //          .channel
+		.sink0_startofpacket   (cmd_mux_001_src_startofpacket),                                        //          .startofpacket
+		.sink0_endofpacket     (cmd_mux_001_src_endofpacket),                                          //          .endofpacket
+		.sink0_ready           (cmd_mux_001_src_ready),                                                //          .ready
+		.source0_valid         (arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_valid),         //   source0.valid
+		.source0_data          (arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_data),          //          .data
+		.source0_channel       (arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_channel),       //          .channel
+		.source0_startofpacket (arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_startofpacket), //          .startofpacket
+		.source0_endofpacket   (arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_endofpacket),   //          .endofpacket
+		.source0_ready         (arm_regs_avalon_0_avalon_slave_0_burst_adapter_source0_ready)          //          .ready
+	);
+
+	altera_merlin_burst_adapter #(
+		.PKT_ADDR_H                (65),
+		.PKT_ADDR_L                (36),
+		.PKT_BEGIN_BURST           (93),
+		.PKT_BYTE_CNT_H            (78),
+		.PKT_BYTE_CNT_L            (72),
+		.PKT_BYTEEN_H              (35),
+		.PKT_BYTEEN_L              (32),
+		.PKT_BURST_SIZE_H          (88),
+		.PKT_BURST_SIZE_L          (86),
+		.PKT_BURST_TYPE_H          (90),
+		.PKT_BURST_TYPE_L          (89),
+		.PKT_BURSTWRAP_H           (85),
+		.PKT_BURSTWRAP_L           (79),
+		.PKT_TRANS_COMPRESSED_READ (66),
+		.PKT_TRANS_WRITE           (68),
+		.PKT_TRANS_READ            (69),
+		.OUT_NARROW_SIZE           (0),
+		.IN_NARROW_SIZE            (1),
+		.OUT_FIXED                 (0),
+		.OUT_COMPLETE_WRAP         (0),
+		.ST_DATA_W                 (123),
+		.ST_CHANNEL_W              (3),
+		.OUT_BYTE_CNT_H            (74),
+		.OUT_BURSTWRAP_H           (85),
+		.COMPRESSED_READ_SUPPORT   (1),
+		.BYTEENABLE_SYNTHESIS      (1),
+		.PIPE_INPUTS               (0),
+		.NO_WRAP_SUPPORT           (0),
+		.INCOMPLETE_WRAP_SUPPORT   (0),
+		.BURSTWRAP_CONST_MASK      (0),
+		.BURSTWRAP_CONST_VALUE     (0),
+		.ADAPTER_VERSION           ("13.1")
+	) hybridcpu0_avalon_slave_0_burst_adapter (
+		.clk                   (clk_0_clk_clk),                                                 //       cr0.clk
+		.reset                 (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),            // cr0_reset.reset
+		.sink0_valid           (cmd_mux_002_src_valid),                                         //     sink0.valid
+		.sink0_data            (cmd_mux_002_src_data),                                          //          .data
+		.sink0_channel         (cmd_mux_002_src_channel),                                       //          .channel
+		.sink0_startofpacket   (cmd_mux_002_src_startofpacket),                                 //          .startofpacket
+		.sink0_endofpacket     (cmd_mux_002_src_endofpacket),                                   //          .endofpacket
+		.sink0_ready           (cmd_mux_002_src_ready),                                         //          .ready
+		.source0_valid         (hybridcpu0_avalon_slave_0_burst_adapter_source0_valid),         //   source0.valid
+		.source0_data          (hybridcpu0_avalon_slave_0_burst_adapter_source0_data),          //          .data
+		.source0_channel       (hybridcpu0_avalon_slave_0_burst_adapter_source0_channel),       //          .channel
+		.source0_startofpacket (hybridcpu0_avalon_slave_0_burst_adapter_source0_startofpacket), //          .startofpacket
+		.source0_endofpacket   (hybridcpu0_avalon_slave_0_burst_adapter_source0_endofpacket),   //          .endofpacket
+		.source0_ready         (hybridcpu0_avalon_slave_0_burst_adapter_source0_ready)          //          .ready
+	);
+
 	hps_fpga_bridge_mm_interconnect_0_cmd_demux cmd_demux (
 		.clk                (clk_0_clk_clk),                                                    //        clk.clk
 		.reset              (hps_0_h2f_axi_master_agent_clk_reset_reset_bridge_in_reset_reset), //  clk_reset.reset
@@ -1170,7 +1535,13 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.src1_data          (cmd_demux_src1_data),                                              //           .data
 		.src1_channel       (cmd_demux_src1_channel),                                           //           .channel
 		.src1_startofpacket (cmd_demux_src1_startofpacket),                                     //           .startofpacket
-		.src1_endofpacket   (cmd_demux_src1_endofpacket)                                        //           .endofpacket
+		.src1_endofpacket   (cmd_demux_src1_endofpacket),                                       //           .endofpacket
+		.src2_ready         (cmd_demux_src2_ready),                                             //       src2.ready
+		.src2_valid         (cmd_demux_src2_valid),                                             //           .valid
+		.src2_data          (cmd_demux_src2_data),                                              //           .data
+		.src2_channel       (cmd_demux_src2_channel),                                           //           .channel
+		.src2_startofpacket (cmd_demux_src2_startofpacket),                                     //           .startofpacket
+		.src2_endofpacket   (cmd_demux_src2_endofpacket)                                        //           .endofpacket
 	);
 
 	hps_fpga_bridge_mm_interconnect_0_cmd_demux cmd_demux_001 (
@@ -1193,99 +1564,151 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.src1_data          (cmd_demux_001_src1_data),                                          //           .data
 		.src1_channel       (cmd_demux_001_src1_channel),                                       //           .channel
 		.src1_startofpacket (cmd_demux_001_src1_startofpacket),                                 //           .startofpacket
-		.src1_endofpacket   (cmd_demux_001_src1_endofpacket)                                    //           .endofpacket
+		.src1_endofpacket   (cmd_demux_001_src1_endofpacket),                                   //           .endofpacket
+		.src2_ready         (cmd_demux_001_src2_ready),                                         //       src2.ready
+		.src2_valid         (cmd_demux_001_src2_valid),                                         //           .valid
+		.src2_data          (cmd_demux_001_src2_data),                                          //           .data
+		.src2_channel       (cmd_demux_001_src2_channel),                                       //           .channel
+		.src2_startofpacket (cmd_demux_001_src2_startofpacket),                                 //           .startofpacket
+		.src2_endofpacket   (cmd_demux_001_src2_endofpacket)                                    //           .endofpacket
 	);
 
 	hps_fpga_bridge_mm_interconnect_0_cmd_mux cmd_mux (
-		.clk                 (clk_0_clk_clk),                                //       clk.clk
-		.reset               (hybridcpu0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
-		.src_ready           (cmd_mux_src_ready),                            //       src.ready
-		.src_valid           (cmd_mux_src_valid),                            //          .valid
-		.src_data            (cmd_mux_src_data),                             //          .data
-		.src_channel         (cmd_mux_src_channel),                          //          .channel
-		.src_startofpacket   (cmd_mux_src_startofpacket),                    //          .startofpacket
-		.src_endofpacket     (cmd_mux_src_endofpacket),                      //          .endofpacket
-		.sink0_ready         (cmd_demux_src0_ready),                         //     sink0.ready
-		.sink0_valid         (cmd_demux_src0_valid),                         //          .valid
-		.sink0_channel       (cmd_demux_src0_channel),                       //          .channel
-		.sink0_data          (cmd_demux_src0_data),                          //          .data
-		.sink0_startofpacket (cmd_demux_src0_startofpacket),                 //          .startofpacket
-		.sink0_endofpacket   (cmd_demux_src0_endofpacket),                   //          .endofpacket
-		.sink1_ready         (cmd_demux_001_src0_ready),                     //     sink1.ready
-		.sink1_valid         (cmd_demux_001_src0_valid),                     //          .valid
-		.sink1_channel       (cmd_demux_001_src0_channel),                   //          .channel
-		.sink1_data          (cmd_demux_001_src0_data),                      //          .data
-		.sink1_startofpacket (cmd_demux_001_src0_startofpacket),             //          .startofpacket
-		.sink1_endofpacket   (cmd_demux_001_src0_endofpacket)                //          .endofpacket
+		.clk                 (clk_0_clk_clk),                                      //       clk.clk
+		.reset               (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
+		.src_ready           (cmd_mux_src_ready),                                  //       src.ready
+		.src_valid           (cmd_mux_src_valid),                                  //          .valid
+		.src_data            (cmd_mux_src_data),                                   //          .data
+		.src_channel         (cmd_mux_src_channel),                                //          .channel
+		.src_startofpacket   (cmd_mux_src_startofpacket),                          //          .startofpacket
+		.src_endofpacket     (cmd_mux_src_endofpacket),                            //          .endofpacket
+		.sink0_ready         (cmd_demux_src0_ready),                               //     sink0.ready
+		.sink0_valid         (cmd_demux_src0_valid),                               //          .valid
+		.sink0_channel       (cmd_demux_src0_channel),                             //          .channel
+		.sink0_data          (cmd_demux_src0_data),                                //          .data
+		.sink0_startofpacket (cmd_demux_src0_startofpacket),                       //          .startofpacket
+		.sink0_endofpacket   (cmd_demux_src0_endofpacket),                         //          .endofpacket
+		.sink1_ready         (cmd_demux_001_src0_ready),                           //     sink1.ready
+		.sink1_valid         (cmd_demux_001_src0_valid),                           //          .valid
+		.sink1_channel       (cmd_demux_001_src0_channel),                         //          .channel
+		.sink1_data          (cmd_demux_001_src0_data),                            //          .data
+		.sink1_startofpacket (cmd_demux_001_src0_startofpacket),                   //          .startofpacket
+		.sink1_endofpacket   (cmd_demux_001_src0_endofpacket)                      //          .endofpacket
 	);
 
 	hps_fpga_bridge_mm_interconnect_0_cmd_mux cmd_mux_001 (
-		.clk                 (clk_0_clk_clk),                                //       clk.clk
-		.reset               (hybridcpu0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
-		.src_ready           (cmd_mux_001_src_ready),                        //       src.ready
-		.src_valid           (cmd_mux_001_src_valid),                        //          .valid
-		.src_data            (cmd_mux_001_src_data),                         //          .data
-		.src_channel         (cmd_mux_001_src_channel),                      //          .channel
-		.src_startofpacket   (cmd_mux_001_src_startofpacket),                //          .startofpacket
-		.src_endofpacket     (cmd_mux_001_src_endofpacket),                  //          .endofpacket
-		.sink0_ready         (cmd_demux_src1_ready),                         //     sink0.ready
-		.sink0_valid         (cmd_demux_src1_valid),                         //          .valid
-		.sink0_channel       (cmd_demux_src1_channel),                       //          .channel
-		.sink0_data          (cmd_demux_src1_data),                          //          .data
-		.sink0_startofpacket (cmd_demux_src1_startofpacket),                 //          .startofpacket
-		.sink0_endofpacket   (cmd_demux_src1_endofpacket),                   //          .endofpacket
-		.sink1_ready         (cmd_demux_001_src1_ready),                     //     sink1.ready
-		.sink1_valid         (cmd_demux_001_src1_valid),                     //          .valid
-		.sink1_channel       (cmd_demux_001_src1_channel),                   //          .channel
-		.sink1_data          (cmd_demux_001_src1_data),                      //          .data
-		.sink1_startofpacket (cmd_demux_001_src1_startofpacket),             //          .startofpacket
-		.sink1_endofpacket   (cmd_demux_001_src1_endofpacket)                //          .endofpacket
+		.clk                 (clk_0_clk_clk),                                      //       clk.clk
+		.reset               (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
+		.src_ready           (cmd_mux_001_src_ready),                              //       src.ready
+		.src_valid           (cmd_mux_001_src_valid),                              //          .valid
+		.src_data            (cmd_mux_001_src_data),                               //          .data
+		.src_channel         (cmd_mux_001_src_channel),                            //          .channel
+		.src_startofpacket   (cmd_mux_001_src_startofpacket),                      //          .startofpacket
+		.src_endofpacket     (cmd_mux_001_src_endofpacket),                        //          .endofpacket
+		.sink0_ready         (cmd_demux_src1_ready),                               //     sink0.ready
+		.sink0_valid         (cmd_demux_src1_valid),                               //          .valid
+		.sink0_channel       (cmd_demux_src1_channel),                             //          .channel
+		.sink0_data          (cmd_demux_src1_data),                                //          .data
+		.sink0_startofpacket (cmd_demux_src1_startofpacket),                       //          .startofpacket
+		.sink0_endofpacket   (cmd_demux_src1_endofpacket),                         //          .endofpacket
+		.sink1_ready         (cmd_demux_001_src1_ready),                           //     sink1.ready
+		.sink1_valid         (cmd_demux_001_src1_valid),                           //          .valid
+		.sink1_channel       (cmd_demux_001_src1_channel),                         //          .channel
+		.sink1_data          (cmd_demux_001_src1_data),                            //          .data
+		.sink1_startofpacket (cmd_demux_001_src1_startofpacket),                   //          .startofpacket
+		.sink1_endofpacket   (cmd_demux_001_src1_endofpacket)                      //          .endofpacket
 	);
 
-	hps_fpga_bridge_mm_interconnect_0_rsp_demux rsp_demux (
-		.clk                (clk_0_clk_clk),                                                 //       clk.clk
-		.reset              (hybridcpu0_reset_reset_bridge_in_reset_reset),                  // clk_reset.reset
-		.sink_ready         (hybridcpu0_avalon_slave_0_rsp_width_adapter_src_ready),         //      sink.ready
-		.sink_channel       (hybridcpu0_avalon_slave_0_rsp_width_adapter_src_channel),       //          .channel
-		.sink_data          (hybridcpu0_avalon_slave_0_rsp_width_adapter_src_data),          //          .data
-		.sink_startofpacket (hybridcpu0_avalon_slave_0_rsp_width_adapter_src_startofpacket), //          .startofpacket
-		.sink_endofpacket   (hybridcpu0_avalon_slave_0_rsp_width_adapter_src_endofpacket),   //          .endofpacket
-		.sink_valid         (hybridcpu0_avalon_slave_0_rsp_width_adapter_src_valid),         //          .valid
-		.src0_ready         (rsp_demux_src0_ready),                                          //      src0.ready
-		.src0_valid         (rsp_demux_src0_valid),                                          //          .valid
-		.src0_data          (rsp_demux_src0_data),                                           //          .data
-		.src0_channel       (rsp_demux_src0_channel),                                        //          .channel
-		.src0_startofpacket (rsp_demux_src0_startofpacket),                                  //          .startofpacket
-		.src0_endofpacket   (rsp_demux_src0_endofpacket),                                    //          .endofpacket
-		.src1_ready         (rsp_demux_src1_ready),                                          //      src1.ready
-		.src1_valid         (rsp_demux_src1_valid),                                          //          .valid
-		.src1_data          (rsp_demux_src1_data),                                           //          .data
-		.src1_channel       (rsp_demux_src1_channel),                                        //          .channel
-		.src1_startofpacket (rsp_demux_src1_startofpacket),                                  //          .startofpacket
-		.src1_endofpacket   (rsp_demux_src1_endofpacket)                                     //          .endofpacket
+	hps_fpga_bridge_mm_interconnect_0_cmd_mux cmd_mux_002 (
+		.clk                 (clk_0_clk_clk),                                      //       clk.clk
+		.reset               (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
+		.src_ready           (cmd_mux_002_src_ready),                              //       src.ready
+		.src_valid           (cmd_mux_002_src_valid),                              //          .valid
+		.src_data            (cmd_mux_002_src_data),                               //          .data
+		.src_channel         (cmd_mux_002_src_channel),                            //          .channel
+		.src_startofpacket   (cmd_mux_002_src_startofpacket),                      //          .startofpacket
+		.src_endofpacket     (cmd_mux_002_src_endofpacket),                        //          .endofpacket
+		.sink0_ready         (cmd_demux_src2_ready),                               //     sink0.ready
+		.sink0_valid         (cmd_demux_src2_valid),                               //          .valid
+		.sink0_channel       (cmd_demux_src2_channel),                             //          .channel
+		.sink0_data          (cmd_demux_src2_data),                                //          .data
+		.sink0_startofpacket (cmd_demux_src2_startofpacket),                       //          .startofpacket
+		.sink0_endofpacket   (cmd_demux_src2_endofpacket),                         //          .endofpacket
+		.sink1_ready         (cmd_demux_001_src2_ready),                           //     sink1.ready
+		.sink1_valid         (cmd_demux_001_src2_valid),                           //          .valid
+		.sink1_channel       (cmd_demux_001_src2_channel),                         //          .channel
+		.sink1_data          (cmd_demux_001_src2_data),                            //          .data
+		.sink1_startofpacket (cmd_demux_001_src2_startofpacket),                   //          .startofpacket
+		.sink1_endofpacket   (cmd_demux_001_src2_endofpacket)                      //          .endofpacket
 	);
 
-	hps_fpga_bridge_mm_interconnect_0_rsp_demux rsp_demux_001 (
+	hps_fpga_bridge_mm_interconnect_0_rsp_demux rsp_demux (
 		.clk                (clk_0_clk_clk),                                                       //       clk.clk
-		.reset              (hybridcpu0_reset_reset_bridge_in_reset_reset),                        // clk_reset.reset
+		.reset              (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),                  // clk_reset.reset
 		.sink_ready         (arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_ready),         //      sink.ready
 		.sink_channel       (arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_channel),       //          .channel
 		.sink_data          (arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_data),          //          .data
 		.sink_startofpacket (arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_startofpacket), //          .startofpacket
 		.sink_endofpacket   (arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_endofpacket),   //          .endofpacket
 		.sink_valid         (arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_valid),         //          .valid
-		.src0_ready         (rsp_demux_001_src0_ready),                                            //      src0.ready
-		.src0_valid         (rsp_demux_001_src0_valid),                                            //          .valid
-		.src0_data          (rsp_demux_001_src0_data),                                             //          .data
-		.src0_channel       (rsp_demux_001_src0_channel),                                          //          .channel
-		.src0_startofpacket (rsp_demux_001_src0_startofpacket),                                    //          .startofpacket
-		.src0_endofpacket   (rsp_demux_001_src0_endofpacket),                                      //          .endofpacket
-		.src1_ready         (rsp_demux_001_src1_ready),                                            //      src1.ready
-		.src1_valid         (rsp_demux_001_src1_valid),                                            //          .valid
-		.src1_data          (rsp_demux_001_src1_data),                                             //          .data
-		.src1_channel       (rsp_demux_001_src1_channel),                                          //          .channel
-		.src1_startofpacket (rsp_demux_001_src1_startofpacket),                                    //          .startofpacket
-		.src1_endofpacket   (rsp_demux_001_src1_endofpacket)                                       //          .endofpacket
+		.src0_ready         (rsp_demux_src0_ready),                                                //      src0.ready
+		.src0_valid         (rsp_demux_src0_valid),                                                //          .valid
+		.src0_data          (rsp_demux_src0_data),                                                 //          .data
+		.src0_channel       (rsp_demux_src0_channel),                                              //          .channel
+		.src0_startofpacket (rsp_demux_src0_startofpacket),                                        //          .startofpacket
+		.src0_endofpacket   (rsp_demux_src0_endofpacket),                                          //          .endofpacket
+		.src1_ready         (rsp_demux_src1_ready),                                                //      src1.ready
+		.src1_valid         (rsp_demux_src1_valid),                                                //          .valid
+		.src1_data          (rsp_demux_src1_data),                                                 //          .data
+		.src1_channel       (rsp_demux_src1_channel),                                              //          .channel
+		.src1_startofpacket (rsp_demux_src1_startofpacket),                                        //          .startofpacket
+		.src1_endofpacket   (rsp_demux_src1_endofpacket)                                           //          .endofpacket
+	);
+
+	hps_fpga_bridge_mm_interconnect_0_rsp_demux rsp_demux_001 (
+		.clk                (clk_0_clk_clk),                                      //       clk.clk
+		.reset              (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
+		.sink_ready         (router_003_src_ready),                               //      sink.ready
+		.sink_channel       (router_003_src_channel),                             //          .channel
+		.sink_data          (router_003_src_data),                                //          .data
+		.sink_startofpacket (router_003_src_startofpacket),                       //          .startofpacket
+		.sink_endofpacket   (router_003_src_endofpacket),                         //          .endofpacket
+		.sink_valid         (router_003_src_valid),                               //          .valid
+		.src0_ready         (rsp_demux_001_src0_ready),                           //      src0.ready
+		.src0_valid         (rsp_demux_001_src0_valid),                           //          .valid
+		.src0_data          (rsp_demux_001_src0_data),                            //          .data
+		.src0_channel       (rsp_demux_001_src0_channel),                         //          .channel
+		.src0_startofpacket (rsp_demux_001_src0_startofpacket),                   //          .startofpacket
+		.src0_endofpacket   (rsp_demux_001_src0_endofpacket),                     //          .endofpacket
+		.src1_ready         (rsp_demux_001_src1_ready),                           //      src1.ready
+		.src1_valid         (rsp_demux_001_src1_valid),                           //          .valid
+		.src1_data          (rsp_demux_001_src1_data),                            //          .data
+		.src1_channel       (rsp_demux_001_src1_channel),                         //          .channel
+		.src1_startofpacket (rsp_demux_001_src1_startofpacket),                   //          .startofpacket
+		.src1_endofpacket   (rsp_demux_001_src1_endofpacket)                      //          .endofpacket
+	);
+
+	hps_fpga_bridge_mm_interconnect_0_rsp_demux rsp_demux_002 (
+		.clk                (clk_0_clk_clk),                                      //       clk.clk
+		.reset              (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
+		.sink_ready         (router_004_src_ready),                               //      sink.ready
+		.sink_channel       (router_004_src_channel),                             //          .channel
+		.sink_data          (router_004_src_data),                                //          .data
+		.sink_startofpacket (router_004_src_startofpacket),                       //          .startofpacket
+		.sink_endofpacket   (router_004_src_endofpacket),                         //          .endofpacket
+		.sink_valid         (router_004_src_valid),                               //          .valid
+		.src0_ready         (rsp_demux_002_src0_ready),                           //      src0.ready
+		.src0_valid         (rsp_demux_002_src0_valid),                           //          .valid
+		.src0_data          (rsp_demux_002_src0_data),                            //          .data
+		.src0_channel       (rsp_demux_002_src0_channel),                         //          .channel
+		.src0_startofpacket (rsp_demux_002_src0_startofpacket),                   //          .startofpacket
+		.src0_endofpacket   (rsp_demux_002_src0_endofpacket),                     //          .endofpacket
+		.src1_ready         (rsp_demux_002_src1_ready),                           //      src1.ready
+		.src1_valid         (rsp_demux_002_src1_valid),                           //          .valid
+		.src1_data          (rsp_demux_002_src1_data),                            //          .data
+		.src1_channel       (rsp_demux_002_src1_channel),                         //          .channel
+		.src1_startofpacket (rsp_demux_002_src1_startofpacket),                   //          .startofpacket
+		.src1_endofpacket   (rsp_demux_002_src1_endofpacket)                      //          .endofpacket
 	);
 
 	hps_fpga_bridge_mm_interconnect_0_rsp_mux rsp_mux (
@@ -1308,7 +1731,13 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.sink1_channel       (rsp_demux_001_src0_channel),                                       //          .channel
 		.sink1_data          (rsp_demux_001_src0_data),                                          //          .data
 		.sink1_startofpacket (rsp_demux_001_src0_startofpacket),                                 //          .startofpacket
-		.sink1_endofpacket   (rsp_demux_001_src0_endofpacket)                                    //          .endofpacket
+		.sink1_endofpacket   (rsp_demux_001_src0_endofpacket),                                   //          .endofpacket
+		.sink2_ready         (rsp_demux_002_src0_ready),                                         //     sink2.ready
+		.sink2_valid         (rsp_demux_002_src0_valid),                                         //          .valid
+		.sink2_channel       (rsp_demux_002_src0_channel),                                       //          .channel
+		.sink2_data          (rsp_demux_002_src0_data),                                          //          .data
+		.sink2_startofpacket (rsp_demux_002_src0_startofpacket),                                 //          .startofpacket
+		.sink2_endofpacket   (rsp_demux_002_src0_endofpacket)                                    //          .endofpacket
 	);
 
 	hps_fpga_bridge_mm_interconnect_0_rsp_mux rsp_mux_001 (
@@ -1331,73 +1760,13 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.sink1_channel       (rsp_demux_001_src1_channel),                                       //          .channel
 		.sink1_data          (rsp_demux_001_src1_data),                                          //          .data
 		.sink1_startofpacket (rsp_demux_001_src1_startofpacket),                                 //          .startofpacket
-		.sink1_endofpacket   (rsp_demux_001_src1_endofpacket)                                    //          .endofpacket
-	);
-
-	altera_merlin_width_adapter #(
-		.IN_PKT_ADDR_H                 (47),
-		.IN_PKT_ADDR_L                 (18),
-		.IN_PKT_DATA_H                 (15),
-		.IN_PKT_DATA_L                 (0),
-		.IN_PKT_BYTEEN_H               (17),
-		.IN_PKT_BYTEEN_L               (16),
-		.IN_PKT_BYTE_CNT_H             (60),
-		.IN_PKT_BYTE_CNT_L             (54),
-		.IN_PKT_TRANS_COMPRESSED_READ  (48),
-		.IN_PKT_TRANS_WRITE            (50),
-		.IN_PKT_BURSTWRAP_H            (67),
-		.IN_PKT_BURSTWRAP_L            (61),
-		.IN_PKT_BURST_SIZE_H           (70),
-		.IN_PKT_BURST_SIZE_L           (68),
-		.IN_PKT_RESPONSE_STATUS_H      (99),
-		.IN_PKT_RESPONSE_STATUS_L      (98),
-		.IN_PKT_TRANS_EXCLUSIVE        (53),
-		.IN_PKT_BURST_TYPE_H           (72),
-		.IN_PKT_BURST_TYPE_L           (71),
-		.IN_PKT_ORI_BURST_SIZE_L       (100),
-		.IN_PKT_ORI_BURST_SIZE_H       (102),
-		.IN_ST_DATA_W                  (103),
-		.OUT_PKT_ADDR_H                (65),
-		.OUT_PKT_ADDR_L                (36),
-		.OUT_PKT_DATA_H                (31),
-		.OUT_PKT_DATA_L                (0),
-		.OUT_PKT_BYTEEN_H              (35),
-		.OUT_PKT_BYTEEN_L              (32),
-		.OUT_PKT_BYTE_CNT_H            (78),
-		.OUT_PKT_BYTE_CNT_L            (72),
-		.OUT_PKT_TRANS_COMPRESSED_READ (66),
-		.OUT_PKT_BURST_SIZE_H          (88),
-		.OUT_PKT_BURST_SIZE_L          (86),
-		.OUT_PKT_RESPONSE_STATUS_H     (117),
-		.OUT_PKT_RESPONSE_STATUS_L     (116),
-		.OUT_PKT_TRANS_EXCLUSIVE       (71),
-		.OUT_PKT_BURST_TYPE_H          (90),
-		.OUT_PKT_BURST_TYPE_L          (89),
-		.OUT_PKT_ORI_BURST_SIZE_L      (118),
-		.OUT_PKT_ORI_BURST_SIZE_H      (120),
-		.OUT_ST_DATA_W                 (121),
-		.ST_CHANNEL_W                  (2),
-		.OPTIMIZE_FOR_RSP              (0),
-		.RESPONSE_PATH                 (1),
-		.CONSTANT_BURST_SIZE           (0),
-		.PACKING                       (1),
-		.ENABLE_ADDRESS_ALIGNMENT      (1)
-	) hybridcpu0_avalon_slave_0_rsp_width_adapter (
-		.clk                  (clk_0_clk_clk),                                                 //       clk.clk
-		.reset                (hybridcpu0_reset_reset_bridge_in_reset_reset),                  // clk_reset.reset
-		.in_valid             (router_002_src_valid),                                          //      sink.valid
-		.in_channel           (router_002_src_channel),                                        //          .channel
-		.in_startofpacket     (router_002_src_startofpacket),                                  //          .startofpacket
-		.in_endofpacket       (router_002_src_endofpacket),                                    //          .endofpacket
-		.in_ready             (router_002_src_ready),                                          //          .ready
-		.in_data              (router_002_src_data),                                           //          .data
-		.out_endofpacket      (hybridcpu0_avalon_slave_0_rsp_width_adapter_src_endofpacket),   //       src.endofpacket
-		.out_data             (hybridcpu0_avalon_slave_0_rsp_width_adapter_src_data),          //          .data
-		.out_channel          (hybridcpu0_avalon_slave_0_rsp_width_adapter_src_channel),       //          .channel
-		.out_valid            (hybridcpu0_avalon_slave_0_rsp_width_adapter_src_valid),         //          .valid
-		.out_ready            (hybridcpu0_avalon_slave_0_rsp_width_adapter_src_ready),         //          .ready
-		.out_startofpacket    (hybridcpu0_avalon_slave_0_rsp_width_adapter_src_startofpacket), //          .startofpacket
-		.in_command_size_data (3'b000)                                                         // (terminated)
+		.sink1_endofpacket   (rsp_demux_001_src1_endofpacket),                                   //          .endofpacket
+		.sink2_ready         (rsp_demux_002_src1_ready),                                         //     sink2.ready
+		.sink2_valid         (rsp_demux_002_src1_valid),                                         //          .valid
+		.sink2_channel       (rsp_demux_002_src1_channel),                                       //          .channel
+		.sink2_data          (rsp_demux_002_src1_data),                                          //          .data
+		.sink2_startofpacket (rsp_demux_002_src1_startofpacket),                                 //          .startofpacket
+		.sink2_endofpacket   (rsp_demux_002_src1_endofpacket)                                    //          .endofpacket
 	);
 
 	altera_merlin_width_adapter #(
@@ -1415,14 +1784,14 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.IN_PKT_BURSTWRAP_L            (52),
 		.IN_PKT_BURST_SIZE_H           (61),
 		.IN_PKT_BURST_SIZE_L           (59),
-		.IN_PKT_RESPONSE_STATUS_H      (90),
-		.IN_PKT_RESPONSE_STATUS_L      (89),
+		.IN_PKT_RESPONSE_STATUS_H      (92),
+		.IN_PKT_RESPONSE_STATUS_L      (91),
 		.IN_PKT_TRANS_EXCLUSIVE        (44),
 		.IN_PKT_BURST_TYPE_H           (63),
 		.IN_PKT_BURST_TYPE_L           (62),
-		.IN_PKT_ORI_BURST_SIZE_L       (91),
-		.IN_PKT_ORI_BURST_SIZE_H       (93),
-		.IN_ST_DATA_W                  (94),
+		.IN_PKT_ORI_BURST_SIZE_L       (93),
+		.IN_PKT_ORI_BURST_SIZE_H       (95),
+		.IN_ST_DATA_W                  (96),
 		.OUT_PKT_ADDR_H                (65),
 		.OUT_PKT_ADDR_L                (36),
 		.OUT_PKT_DATA_H                (31),
@@ -1434,15 +1803,15 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.OUT_PKT_TRANS_COMPRESSED_READ (66),
 		.OUT_PKT_BURST_SIZE_H          (88),
 		.OUT_PKT_BURST_SIZE_L          (86),
-		.OUT_PKT_RESPONSE_STATUS_H     (117),
-		.OUT_PKT_RESPONSE_STATUS_L     (116),
+		.OUT_PKT_RESPONSE_STATUS_H     (119),
+		.OUT_PKT_RESPONSE_STATUS_L     (118),
 		.OUT_PKT_TRANS_EXCLUSIVE       (71),
 		.OUT_PKT_BURST_TYPE_H          (90),
 		.OUT_PKT_BURST_TYPE_L          (89),
-		.OUT_PKT_ORI_BURST_SIZE_L      (118),
-		.OUT_PKT_ORI_BURST_SIZE_H      (120),
-		.OUT_ST_DATA_W                 (121),
-		.ST_CHANNEL_W                  (2),
+		.OUT_PKT_ORI_BURST_SIZE_L      (120),
+		.OUT_PKT_ORI_BURST_SIZE_H      (122),
+		.OUT_ST_DATA_W                 (123),
+		.ST_CHANNEL_W                  (3),
 		.OPTIMIZE_FOR_RSP              (0),
 		.RESPONSE_PATH                 (1),
 		.CONSTANT_BURST_SIZE           (0),
@@ -1450,13 +1819,13 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.ENABLE_ADDRESS_ALIGNMENT      (1)
 	) arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter (
 		.clk                  (clk_0_clk_clk),                                                       //       clk.clk
-		.reset                (hybridcpu0_reset_reset_bridge_in_reset_reset),                        // clk_reset.reset
-		.in_valid             (router_003_src_valid),                                                //      sink.valid
-		.in_channel           (router_003_src_channel),                                              //          .channel
-		.in_startofpacket     (router_003_src_startofpacket),                                        //          .startofpacket
-		.in_endofpacket       (router_003_src_endofpacket),                                          //          .endofpacket
-		.in_ready             (router_003_src_ready),                                                //          .ready
-		.in_data              (router_003_src_data),                                                 //          .data
+		.reset                (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),                  // clk_reset.reset
+		.in_valid             (router_002_src_valid),                                                //      sink.valid
+		.in_channel           (router_002_src_channel),                                              //          .channel
+		.in_startofpacket     (router_002_src_startofpacket),                                        //          .startofpacket
+		.in_endofpacket       (router_002_src_endofpacket),                                          //          .endofpacket
+		.in_ready             (router_002_src_ready),                                                //          .ready
+		.in_data              (router_002_src_data),                                                 //          .data
 		.out_endofpacket      (arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_endofpacket),   //       src.endofpacket
 		.out_data             (arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_data),          //          .data
 		.out_channel          (arm_irq_avalon_0_avalon_slave_0_rsp_width_adapter_src_channel),       //          .channel
@@ -1481,80 +1850,14 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.IN_PKT_BURSTWRAP_L            (79),
 		.IN_PKT_BURST_SIZE_H           (88),
 		.IN_PKT_BURST_SIZE_L           (86),
-		.IN_PKT_RESPONSE_STATUS_H      (117),
-		.IN_PKT_RESPONSE_STATUS_L      (116),
+		.IN_PKT_RESPONSE_STATUS_H      (119),
+		.IN_PKT_RESPONSE_STATUS_L      (118),
 		.IN_PKT_TRANS_EXCLUSIVE        (71),
 		.IN_PKT_BURST_TYPE_H           (90),
 		.IN_PKT_BURST_TYPE_L           (89),
-		.IN_PKT_ORI_BURST_SIZE_L       (118),
-		.IN_PKT_ORI_BURST_SIZE_H       (120),
-		.IN_ST_DATA_W                  (121),
-		.OUT_PKT_ADDR_H                (47),
-		.OUT_PKT_ADDR_L                (18),
-		.OUT_PKT_DATA_H                (15),
-		.OUT_PKT_DATA_L                (0),
-		.OUT_PKT_BYTEEN_H              (17),
-		.OUT_PKT_BYTEEN_L              (16),
-		.OUT_PKT_BYTE_CNT_H            (60),
-		.OUT_PKT_BYTE_CNT_L            (54),
-		.OUT_PKT_TRANS_COMPRESSED_READ (48),
-		.OUT_PKT_BURST_SIZE_H          (70),
-		.OUT_PKT_BURST_SIZE_L          (68),
-		.OUT_PKT_RESPONSE_STATUS_H     (99),
-		.OUT_PKT_RESPONSE_STATUS_L     (98),
-		.OUT_PKT_TRANS_EXCLUSIVE       (53),
-		.OUT_PKT_BURST_TYPE_H          (72),
-		.OUT_PKT_BURST_TYPE_L          (71),
-		.OUT_PKT_ORI_BURST_SIZE_L      (100),
-		.OUT_PKT_ORI_BURST_SIZE_H      (102),
-		.OUT_ST_DATA_W                 (103),
-		.ST_CHANNEL_W                  (2),
-		.OPTIMIZE_FOR_RSP              (0),
-		.RESPONSE_PATH                 (0),
-		.CONSTANT_BURST_SIZE           (0),
-		.PACKING                       (0),
-		.ENABLE_ADDRESS_ALIGNMENT      (1)
-	) hybridcpu0_avalon_slave_0_cmd_width_adapter (
-		.clk                  (clk_0_clk_clk),                                                 //       clk.clk
-		.reset                (hybridcpu0_reset_reset_bridge_in_reset_reset),                  // clk_reset.reset
-		.in_valid             (cmd_mux_src_valid),                                             //      sink.valid
-		.in_channel           (cmd_mux_src_channel),                                           //          .channel
-		.in_startofpacket     (cmd_mux_src_startofpacket),                                     //          .startofpacket
-		.in_endofpacket       (cmd_mux_src_endofpacket),                                       //          .endofpacket
-		.in_ready             (cmd_mux_src_ready),                                             //          .ready
-		.in_data              (cmd_mux_src_data),                                              //          .data
-		.out_endofpacket      (hybridcpu0_avalon_slave_0_cmd_width_adapter_src_endofpacket),   //       src.endofpacket
-		.out_data             (hybridcpu0_avalon_slave_0_cmd_width_adapter_src_data),          //          .data
-		.out_channel          (hybridcpu0_avalon_slave_0_cmd_width_adapter_src_channel),       //          .channel
-		.out_valid            (hybridcpu0_avalon_slave_0_cmd_width_adapter_src_valid),         //          .valid
-		.out_ready            (hybridcpu0_avalon_slave_0_cmd_width_adapter_src_ready),         //          .ready
-		.out_startofpacket    (hybridcpu0_avalon_slave_0_cmd_width_adapter_src_startofpacket), //          .startofpacket
-		.in_command_size_data (3'b000)                                                         // (terminated)
-	);
-
-	altera_merlin_width_adapter #(
-		.IN_PKT_ADDR_H                 (65),
-		.IN_PKT_ADDR_L                 (36),
-		.IN_PKT_DATA_H                 (31),
-		.IN_PKT_DATA_L                 (0),
-		.IN_PKT_BYTEEN_H               (35),
-		.IN_PKT_BYTEEN_L               (32),
-		.IN_PKT_BYTE_CNT_H             (78),
-		.IN_PKT_BYTE_CNT_L             (72),
-		.IN_PKT_TRANS_COMPRESSED_READ  (66),
-		.IN_PKT_TRANS_WRITE            (68),
-		.IN_PKT_BURSTWRAP_H            (85),
-		.IN_PKT_BURSTWRAP_L            (79),
-		.IN_PKT_BURST_SIZE_H           (88),
-		.IN_PKT_BURST_SIZE_L           (86),
-		.IN_PKT_RESPONSE_STATUS_H      (117),
-		.IN_PKT_RESPONSE_STATUS_L      (116),
-		.IN_PKT_TRANS_EXCLUSIVE        (71),
-		.IN_PKT_BURST_TYPE_H           (90),
-		.IN_PKT_BURST_TYPE_L           (89),
-		.IN_PKT_ORI_BURST_SIZE_L       (118),
-		.IN_PKT_ORI_BURST_SIZE_H       (120),
-		.IN_ST_DATA_W                  (121),
+		.IN_PKT_ORI_BURST_SIZE_L       (120),
+		.IN_PKT_ORI_BURST_SIZE_H       (122),
+		.IN_ST_DATA_W                  (123),
 		.OUT_PKT_ADDR_H                (38),
 		.OUT_PKT_ADDR_L                (9),
 		.OUT_PKT_DATA_H                (7),
@@ -1566,15 +1869,15 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.OUT_PKT_TRANS_COMPRESSED_READ (39),
 		.OUT_PKT_BURST_SIZE_H          (61),
 		.OUT_PKT_BURST_SIZE_L          (59),
-		.OUT_PKT_RESPONSE_STATUS_H     (90),
-		.OUT_PKT_RESPONSE_STATUS_L     (89),
+		.OUT_PKT_RESPONSE_STATUS_H     (92),
+		.OUT_PKT_RESPONSE_STATUS_L     (91),
 		.OUT_PKT_TRANS_EXCLUSIVE       (44),
 		.OUT_PKT_BURST_TYPE_H          (63),
 		.OUT_PKT_BURST_TYPE_L          (62),
-		.OUT_PKT_ORI_BURST_SIZE_L      (91),
-		.OUT_PKT_ORI_BURST_SIZE_H      (93),
-		.OUT_ST_DATA_W                 (94),
-		.ST_CHANNEL_W                  (2),
+		.OUT_PKT_ORI_BURST_SIZE_L      (93),
+		.OUT_PKT_ORI_BURST_SIZE_H      (95),
+		.OUT_ST_DATA_W                 (96),
+		.ST_CHANNEL_W                  (3),
 		.OPTIMIZE_FOR_RSP              (0),
 		.RESPONSE_PATH                 (0),
 		.CONSTANT_BURST_SIZE           (0),
@@ -1582,13 +1885,13 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.ENABLE_ADDRESS_ALIGNMENT      (1)
 	) arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter (
 		.clk                  (clk_0_clk_clk),                                                       //       clk.clk
-		.reset                (hybridcpu0_reset_reset_bridge_in_reset_reset),                        // clk_reset.reset
-		.in_valid             (cmd_mux_001_src_valid),                                               //      sink.valid
-		.in_channel           (cmd_mux_001_src_channel),                                             //          .channel
-		.in_startofpacket     (cmd_mux_001_src_startofpacket),                                       //          .startofpacket
-		.in_endofpacket       (cmd_mux_001_src_endofpacket),                                         //          .endofpacket
-		.in_ready             (cmd_mux_001_src_ready),                                               //          .ready
-		.in_data              (cmd_mux_001_src_data),                                                //          .data
+		.reset                (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),                  // clk_reset.reset
+		.in_valid             (cmd_mux_src_valid),                                                   //      sink.valid
+		.in_channel           (cmd_mux_src_channel),                                                 //          .channel
+		.in_startofpacket     (cmd_mux_src_startofpacket),                                           //          .startofpacket
+		.in_endofpacket       (cmd_mux_src_endofpacket),                                             //          .endofpacket
+		.in_ready             (cmd_mux_src_ready),                                                   //          .ready
+		.in_data              (cmd_mux_src_data),                                                    //          .data
 		.out_endofpacket      (arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_endofpacket),   //       src.endofpacket
 		.out_data             (arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_data),          //          .data
 		.out_channel          (arm_irq_avalon_0_avalon_slave_0_cmd_width_adapter_src_channel),       //          .channel
@@ -1599,16 +1902,16 @@ module hps_fpga_bridge_mm_interconnect_0 (
 	);
 
 	hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter #(
-		.inBitsPerSymbol (18),
+		.inBitsPerSymbol (10),
 		.inUsePackets    (0),
-		.inDataWidth     (18),
+		.inDataWidth     (10),
 		.inChannelWidth  (0),
 		.inErrorWidth    (0),
 		.inUseEmptyPort  (0),
 		.inUseValid      (1),
 		.inUseReady      (1),
 		.inReadyLatency  (0),
-		.outDataWidth    (18),
+		.outDataWidth    (10),
 		.outChannelWidth (0),
 		.outErrorWidth   (1),
 		.outUseEmptyPort (0),
@@ -1616,28 +1919,28 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.outUseReady     (1),
 		.outReadyLatency (0)
 	) avalon_st_adapter (
-		.in_clk_0_clk   (clk_0_clk_clk),                                        // in_clk_0.clk
-		.in_rst_0_reset (hybridcpu0_reset_reset_bridge_in_reset_reset),         // in_rst_0.reset
-		.in_0_data      (hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_data),  //     in_0.data
-		.in_0_valid     (hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_valid), //         .valid
-		.in_0_ready     (hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_ready), //         .ready
-		.out_0_data     (avalon_st_adapter_out_0_data),                         //    out_0.data
-		.out_0_valid    (avalon_st_adapter_out_0_valid),                        //         .valid
-		.out_0_ready    (avalon_st_adapter_out_0_ready),                        //         .ready
-		.out_0_error    (avalon_st_adapter_out_0_error)                         //         .error
+		.in_clk_0_clk   (clk_0_clk_clk),                                              // in_clk_0.clk
+		.in_rst_0_reset (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),         // in_rst_0.reset
+		.in_0_data      (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_data),  //     in_0.data
+		.in_0_valid     (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_valid), //         .valid
+		.in_0_ready     (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_ready), //         .ready
+		.out_0_data     (avalon_st_adapter_out_0_data),                               //    out_0.data
+		.out_0_valid    (avalon_st_adapter_out_0_valid),                              //         .valid
+		.out_0_ready    (avalon_st_adapter_out_0_ready),                              //         .ready
+		.out_0_error    (avalon_st_adapter_out_0_error)                               //         .error
 	);
 
 	hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001 #(
-		.inBitsPerSymbol (10),
+		.inBitsPerSymbol (34),
 		.inUsePackets    (0),
-		.inDataWidth     (10),
+		.inDataWidth     (34),
 		.inChannelWidth  (0),
 		.inErrorWidth    (0),
 		.inUseEmptyPort  (0),
 		.inUseValid      (1),
 		.inUseReady      (1),
 		.inReadyLatency  (0),
-		.outDataWidth    (10),
+		.outDataWidth    (34),
 		.outChannelWidth (0),
 		.outErrorWidth   (1),
 		.outUseEmptyPort (0),
@@ -1645,15 +1948,44 @@ module hps_fpga_bridge_mm_interconnect_0 (
 		.outUseReady     (1),
 		.outReadyLatency (0)
 	) avalon_st_adapter_001 (
-		.in_clk_0_clk   (clk_0_clk_clk),                                              // in_clk_0.clk
-		.in_rst_0_reset (hybridcpu0_reset_reset_bridge_in_reset_reset),               // in_rst_0.reset
-		.in_0_data      (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_data),  //     in_0.data
-		.in_0_valid     (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_valid), //         .valid
-		.in_0_ready     (arm_irq_avalon_0_avalon_slave_0_agent_rdata_fifo_out_ready), //         .ready
-		.out_0_data     (avalon_st_adapter_001_out_0_data),                           //    out_0.data
-		.out_0_valid    (avalon_st_adapter_001_out_0_valid),                          //         .valid
-		.out_0_ready    (avalon_st_adapter_001_out_0_ready),                          //         .ready
-		.out_0_error    (avalon_st_adapter_001_out_0_error)                           //         .error
+		.in_clk_0_clk   (clk_0_clk_clk),                                               // in_clk_0.clk
+		.in_rst_0_reset (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),          // in_rst_0.reset
+		.in_0_data      (arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_out_data),  //     in_0.data
+		.in_0_valid     (arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_out_valid), //         .valid
+		.in_0_ready     (arm_regs_avalon_0_avalon_slave_0_agent_rdata_fifo_out_ready), //         .ready
+		.out_0_data     (avalon_st_adapter_001_out_0_data),                            //    out_0.data
+		.out_0_valid    (avalon_st_adapter_001_out_0_valid),                           //         .valid
+		.out_0_ready    (avalon_st_adapter_001_out_0_ready),                           //         .ready
+		.out_0_error    (avalon_st_adapter_001_out_0_error)                            //         .error
+	);
+
+	hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001 #(
+		.inBitsPerSymbol (34),
+		.inUsePackets    (0),
+		.inDataWidth     (34),
+		.inChannelWidth  (0),
+		.inErrorWidth    (0),
+		.inUseEmptyPort  (0),
+		.inUseValid      (1),
+		.inUseReady      (1),
+		.inReadyLatency  (0),
+		.outDataWidth    (34),
+		.outChannelWidth (0),
+		.outErrorWidth   (1),
+		.outUseEmptyPort (0),
+		.outUseValid     (1),
+		.outUseReady     (1),
+		.outReadyLatency (0)
+	) avalon_st_adapter_002 (
+		.in_clk_0_clk   (clk_0_clk_clk),                                        // in_clk_0.clk
+		.in_rst_0_reset (arm_irq_avalon_0_reset_reset_bridge_in_reset_reset),   // in_rst_0.reset
+		.in_0_data      (hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_data),  //     in_0.data
+		.in_0_valid     (hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_valid), //         .valid
+		.in_0_ready     (hybridcpu0_avalon_slave_0_agent_rdata_fifo_out_ready), //         .ready
+		.out_0_data     (avalon_st_adapter_002_out_0_data),                     //    out_0.data
+		.out_0_valid    (avalon_st_adapter_002_out_0_valid),                    //         .valid
+		.out_0_ready    (avalon_st_adapter_002_out_0_ready),                    //         .ready
+		.out_0_error    (avalon_st_adapter_002_out_0_error)                     //         .error
 	);
 
 endmodule
diff --git a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter.v b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter.v
index 84b26a4..69f7269 100644
--- a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter.v
+++ b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter.v
@@ -7,16 +7,16 @@
 
 `timescale 1 ps / 1 ps
 module hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter #(
-		parameter inBitsPerSymbol = 18,
+		parameter inBitsPerSymbol = 10,
 		parameter inUsePackets    = 0,
-		parameter inDataWidth     = 18,
+		parameter inDataWidth     = 10,
 		parameter inChannelWidth  = 0,
 		parameter inErrorWidth    = 0,
 		parameter inUseEmptyPort  = 0,
 		parameter inUseValid      = 1,
 		parameter inUseReady      = 1,
 		parameter inReadyLatency  = 0,
-		parameter outDataWidth    = 18,
+		parameter outDataWidth    = 10,
 		parameter outChannelWidth = 0,
 		parameter outErrorWidth   = 1,
 		parameter outUseEmptyPort = 0,
@@ -24,15 +24,15 @@ module hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter #(
 		parameter outUseReady     = 1,
 		parameter outReadyLatency = 0
 	) (
-		input  wire        in_clk_0_clk,   // in_clk_0.clk
-		input  wire        in_rst_0_reset, // in_rst_0.reset
-		input  wire [17:0] in_0_data,      //     in_0.data
-		input  wire        in_0_valid,     //         .valid
-		output wire        in_0_ready,     //         .ready
-		output wire [17:0] out_0_data,     //    out_0.data
-		output wire        out_0_valid,    //         .valid
-		input  wire        out_0_ready,    //         .ready
-		output wire [0:0]  out_0_error     //         .error
+		input  wire       in_clk_0_clk,   // in_clk_0.clk
+		input  wire       in_rst_0_reset, // in_rst_0.reset
+		input  wire [9:0] in_0_data,      //     in_0.data
+		input  wire       in_0_valid,     //         .valid
+		output wire       in_0_ready,     //         .ready
+		output wire [9:0] out_0_data,     //    out_0.data
+		output wire       out_0_valid,    //         .valid
+		input  wire       out_0_ready,    //         .ready
+		output wire [0:0] out_0_error     //         .error
 	);
 
 	generate
@@ -41,7 +41,7 @@ module hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter #(
 		// has been instantiated this module with a set of parameters different
 		// from those it was generated for.  This will usually result in a
 		// non-functioning system.
-		if (inBitsPerSymbol != 18)
+		if (inBitsPerSymbol != 10)
 		begin
 			initial begin
 				$display("Generated module instantiated with wrong parameters");
@@ -59,7 +59,7 @@ module hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter #(
 			instantiated_with_wrong_parameters_error_see_comment_above
 					inusepackets_check ( .error(1'b1) );
 		end
-		if (inDataWidth != 18)
+		if (inDataWidth != 10)
 		begin
 			initial begin
 				$display("Generated module instantiated with wrong parameters");
@@ -122,7 +122,7 @@ module hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter #(
 			instantiated_with_wrong_parameters_error_see_comment_above
 					inreadylatency_check ( .error(1'b1) );
 		end
-		if (outDataWidth != 18)
+		if (outDataWidth != 10)
 		begin
 			initial begin
 				$display("Generated module instantiated with wrong parameters");
diff --git a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001.v b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001.v
index ede0ec4..1fbb61e 100644
--- a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001.v
+++ b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001.v
@@ -7,16 +7,16 @@
 
 `timescale 1 ps / 1 ps
 module hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001 #(
-		parameter inBitsPerSymbol = 10,
+		parameter inBitsPerSymbol = 34,
 		parameter inUsePackets    = 0,
-		parameter inDataWidth     = 10,
+		parameter inDataWidth     = 34,
 		parameter inChannelWidth  = 0,
 		parameter inErrorWidth    = 0,
 		parameter inUseEmptyPort  = 0,
 		parameter inUseValid      = 1,
 		parameter inUseReady      = 1,
 		parameter inReadyLatency  = 0,
-		parameter outDataWidth    = 10,
+		parameter outDataWidth    = 34,
 		parameter outChannelWidth = 0,
 		parameter outErrorWidth   = 1,
 		parameter outUseEmptyPort = 0,
@@ -24,15 +24,15 @@ module hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001 #(
 		parameter outUseReady     = 1,
 		parameter outReadyLatency = 0
 	) (
-		input  wire       in_clk_0_clk,   // in_clk_0.clk
-		input  wire       in_rst_0_reset, // in_rst_0.reset
-		input  wire [9:0] in_0_data,      //     in_0.data
-		input  wire       in_0_valid,     //         .valid
-		output wire       in_0_ready,     //         .ready
-		output wire [9:0] out_0_data,     //    out_0.data
-		output wire       out_0_valid,    //         .valid
-		input  wire       out_0_ready,    //         .ready
-		output wire [0:0] out_0_error     //         .error
+		input  wire        in_clk_0_clk,   // in_clk_0.clk
+		input  wire        in_rst_0_reset, // in_rst_0.reset
+		input  wire [33:0] in_0_data,      //     in_0.data
+		input  wire        in_0_valid,     //         .valid
+		output wire        in_0_ready,     //         .ready
+		output wire [33:0] out_0_data,     //    out_0.data
+		output wire        out_0_valid,    //         .valid
+		input  wire        out_0_ready,    //         .ready
+		output wire [0:0]  out_0_error     //         .error
 	);
 
 	generate
@@ -41,7 +41,7 @@ module hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001 #(
 		// has been instantiated this module with a set of parameters different
 		// from those it was generated for.  This will usually result in a
 		// non-functioning system.
-		if (inBitsPerSymbol != 10)
+		if (inBitsPerSymbol != 34)
 		begin
 			initial begin
 				$display("Generated module instantiated with wrong parameters");
@@ -59,7 +59,7 @@ module hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001 #(
 			instantiated_with_wrong_parameters_error_see_comment_above
 					inusepackets_check ( .error(1'b1) );
 		end
-		if (inDataWidth != 10)
+		if (inDataWidth != 34)
 		begin
 			initial begin
 				$display("Generated module instantiated with wrong parameters");
@@ -122,7 +122,7 @@ module hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001 #(
 			instantiated_with_wrong_parameters_error_see_comment_above
 					inreadylatency_check ( .error(1'b1) );
 		end
-		if (outDataWidth != 10)
+		if (outDataWidth != 34)
 		begin
 			initial begin
 				$display("Generated module instantiated with wrong parameters");
diff --git a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001_error_adapter_0.sv b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001_error_adapter_0.sv
index e4221f7..f14be34 100644
--- a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001_error_adapter_0.sv
+++ b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001_error_adapter_0.sv
@@ -43,7 +43,7 @@
 //   use_packets:        false
 //   use_empty:          0
 //   empty_width:        0
-//   data_width:         10
+//   data_width:         34
 //   channel_width:      0
 //   in_error_width:     0
 //   out_error_width:    1
@@ -68,11 +68,11 @@ module hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_001_error_adapter_0
  // Interface: in
  output reg         in_ready,
  input              in_valid,
- input [10-1: 0]     in_data,
+ input [34-1: 0]     in_data,
  // Interface: out
  input               out_ready,
  output reg          out_valid,
- output reg [10-1: 0] out_data,
+ output reg [34-1: 0] out_data,
  output reg [0:0]         out_error,
   // Interface: clk
  input              clk,
diff --git a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_error_adapter_0.sv b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_error_adapter_0.sv
index b56be66..e7e3c13 100644
--- a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_error_adapter_0.sv
+++ b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_error_adapter_0.sv
@@ -43,7 +43,7 @@
 //   use_packets:        false
 //   use_empty:          0
 //   empty_width:        0
-//   data_width:         18
+//   data_width:         10
 //   channel_width:      0
 //   in_error_width:     0
 //   out_error_width:    1
@@ -68,11 +68,11 @@ module hps_fpga_bridge_mm_interconnect_0_avalon_st_adapter_error_adapter_0
  // Interface: in
  output reg         in_ready,
  input              in_valid,
- input [18-1: 0]     in_data,
+ input [10-1: 0]     in_data,
  // Interface: out
  input               out_ready,
  output reg          out_valid,
- output reg [18-1: 0] out_data,
+ output reg [10-1: 0] out_data,
  output reg [0:0]         out_error,
   // Interface: clk
  input              clk,
diff --git a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_cmd_demux.sv b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_cmd_demux.sv
index 1d02b0e..5e7b14e 100644
--- a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_cmd_demux.sv
+++ b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_cmd_demux.sv
@@ -28,10 +28,10 @@
 // ------------------------------------------
 // Generation parameters:
 //   output_name:         hps_fpga_bridge_mm_interconnect_0_cmd_demux
-//   ST_DATA_W:           121
-//   ST_CHANNEL_W:        2
-//   NUM_OUTPUTS:         2
-//   VALID_WIDTH:         2
+//   ST_DATA_W:           123
+//   ST_CHANNEL_W:        3
+//   NUM_OUTPUTS:         3
+//   VALID_WIDTH:         3
 // ------------------------------------------
 
 //------------------------------------------
@@ -45,9 +45,9 @@ module hps_fpga_bridge_mm_interconnect_0_cmd_demux
     // -------------------
     // Sink
     // -------------------
-    input  [2-1      : 0]   sink_valid,
-    input  [121-1    : 0]   sink_data, // ST_DATA_W=121
-    input  [2-1 : 0]   sink_channel, // ST_CHANNEL_W=2
+    input  [3-1      : 0]   sink_valid,
+    input  [123-1    : 0]   sink_data, // ST_DATA_W=123
+    input  [3-1 : 0]   sink_channel, // ST_CHANNEL_W=3
     input                         sink_startofpacket,
     input                         sink_endofpacket,
     output                        sink_ready,
@@ -56,19 +56,26 @@ module hps_fpga_bridge_mm_interconnect_0_cmd_demux
     // Sources 
     // -------------------
     output reg                      src0_valid,
-    output reg [121-1    : 0] src0_data, // ST_DATA_W=121
-    output reg [2-1 : 0] src0_channel, // ST_CHANNEL_W=2
+    output reg [123-1    : 0] src0_data, // ST_DATA_W=123
+    output reg [3-1 : 0] src0_channel, // ST_CHANNEL_W=3
     output reg                      src0_startofpacket,
     output reg                      src0_endofpacket,
     input                           src0_ready,
 
     output reg                      src1_valid,
-    output reg [121-1    : 0] src1_data, // ST_DATA_W=121
-    output reg [2-1 : 0] src1_channel, // ST_CHANNEL_W=2
+    output reg [123-1    : 0] src1_data, // ST_DATA_W=123
+    output reg [3-1 : 0] src1_channel, // ST_CHANNEL_W=3
     output reg                      src1_startofpacket,
     output reg                      src1_endofpacket,
     input                           src1_ready,
 
+    output reg                      src2_valid,
+    output reg [123-1    : 0] src2_data, // ST_DATA_W=123
+    output reg [3-1 : 0] src2_channel, // ST_CHANNEL_W=3
+    output reg                      src2_startofpacket,
+    output reg                      src2_endofpacket,
+    input                           src2_ready,
+
 
     // -------------------
     // Clock & Reset
@@ -80,7 +87,7 @@ module hps_fpga_bridge_mm_interconnect_0_cmd_demux
 
 );
 
-    localparam NUM_OUTPUTS = 2;
+    localparam NUM_OUTPUTS = 3;
     wire [NUM_OUTPUTS - 1 : 0] ready_vector;
 
     // -------------------
@@ -101,6 +108,13 @@ module hps_fpga_bridge_mm_interconnect_0_cmd_demux
 
         src1_valid         = sink_channel[1] && sink_valid[1];
 
+        src2_data          = sink_data;
+        src2_startofpacket = sink_startofpacket;
+        src2_endofpacket   = sink_endofpacket;
+        src2_channel       = sink_channel >> NUM_OUTPUTS;
+
+        src2_valid         = sink_channel[2] && sink_valid[2];
+
     end
 
     // -------------------
@@ -108,6 +122,7 @@ module hps_fpga_bridge_mm_interconnect_0_cmd_demux
     // -------------------
     assign ready_vector[0] = src0_ready;
     assign ready_vector[1] = src1_ready;
+    assign ready_vector[2] = src2_ready;
 
     assign sink_ready = |(sink_channel & ready_vector);
 
diff --git a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_cmd_mux.sv b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_cmd_mux.sv
index b1ca3f6..c0d7e8a 100644
--- a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_cmd_mux.sv
+++ b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_cmd_mux.sv
@@ -42,10 +42,10 @@
 //   NUM_INPUTS:          2
 //   ARBITRATION_SHARES:  1 1
 //   ARBITRATION_SCHEME   "round-robin"
-//   PIPELINE_ARB:        1
+//   PIPELINE_ARB:        0
 //   PKT_TRANS_LOCK:      70 (arbitration locking enabled)
-//   ST_DATA_W:           121
-//   ST_CHANNEL_W:        2
+//   ST_DATA_W:           123
+//   ST_CHANNEL_W:        3
 // ------------------------------------------
 
 module hps_fpga_bridge_mm_interconnect_0_cmd_mux
@@ -54,15 +54,15 @@ module hps_fpga_bridge_mm_interconnect_0_cmd_mux
     // Sinks
     // ----------------------
     input                       sink0_valid,
-    input [121-1   : 0]  sink0_data,
-    input [2-1: 0]  sink0_channel,
+    input [123-1   : 0]  sink0_data,
+    input [3-1: 0]  sink0_channel,
     input                       sink0_startofpacket,
     input                       sink0_endofpacket,
     output                      sink0_ready,
 
     input                       sink1_valid,
-    input [121-1   : 0]  sink1_data,
-    input [2-1: 0]  sink1_channel,
+    input [123-1   : 0]  sink1_data,
+    input [3-1: 0]  sink1_channel,
     input                       sink1_startofpacket,
     input                       sink1_endofpacket,
     output                      sink1_ready,
@@ -72,8 +72,8 @@ module hps_fpga_bridge_mm_interconnect_0_cmd_mux
     // Source
     // ----------------------
     output                      src_valid,
-    output [121-1    : 0] src_data,
-    output [2-1 : 0] src_channel,
+    output [123-1    : 0] src_data,
+    output [3-1 : 0] src_channel,
     output                      src_startofpacket,
     output                      src_endofpacket,
     input                       src_ready,
@@ -84,12 +84,12 @@ module hps_fpga_bridge_mm_interconnect_0_cmd_mux
     input clk,
     input reset
 );
-    localparam PAYLOAD_W        = 121 + 2 + 2;
+    localparam PAYLOAD_W        = 123 + 3 + 2;
     localparam NUM_INPUTS       = 2;
     localparam SHARE_COUNTER_W  = 1;
-    localparam PIPELINE_ARB     = 1;
-    localparam ST_DATA_W        = 121;
-    localparam ST_CHANNEL_W     = 2;
+    localparam PIPELINE_ARB     = 0;
+    localparam ST_DATA_W        = 123;
+    localparam ST_CHANNEL_W     = 3;
     localparam PKT_TRANS_LOCK   = 70;
 
     // ------------------------------------------
@@ -131,7 +131,7 @@ module hps_fpga_bridge_mm_interconnect_0_cmd_mux
         locked <= '0;
       end
       else begin
-        locked <= next_grant & lock;
+        locked <= grant & lock;
       end
     end
 
@@ -181,6 +181,22 @@ module hps_fpga_bridge_mm_interconnect_0_cmd_mux
     // ------------------------------------------
     // Flag to indicate first packet of an arb sequence.
     // ------------------------------------------
+    wire grant_changed = ~packet_in_progress && ~(|(saved_grant & valid));
+    reg first_packet_r;
+    wire first_packet = grant_changed | first_packet_r;
+    always @(posedge clk or posedge reset) begin
+      if (reset) begin
+        first_packet_r <= 1'b0;
+      end
+      else begin 
+        if (update_grant)
+          first_packet_r <= 1'b1;
+        else if (last_cycle)
+          first_packet_r <= 1'b0;
+        else if (grant_changed)
+          first_packet_r <= 1'b1;
+      end
+    end
 
     // ------------------------------------------
     // Compute the next share-count value.
@@ -190,8 +206,13 @@ module hps_fpga_bridge_mm_interconnect_0_cmd_mux
     reg share_count_zero_flag;
 
     always @* begin
-        // Update the counter, but don't decrement below 0.
-      p1_share_count = share_count_zero_flag ? '0 : share_count - 1'b1;
+      if (first_packet) begin
+        p1_share_count = next_grant_share;
+      end
+      else begin
+            // Update the counter, but don't decrement below 0.
+        p1_share_count = share_count_zero_flag ? '0 : share_count - 1'b1;
+      end
      end
 
     // ------------------------------------------
@@ -203,41 +224,64 @@ module hps_fpga_bridge_mm_interconnect_0_cmd_mux
         share_count_zero_flag <= 1'b1;
       end
       else begin
-        if (update_grant) begin
-          share_count <= next_grant_share;
-          share_count_zero_flag <= (next_grant_share == '0);
-        end
-        else if (last_cycle) begin
+        if (last_cycle) begin
           share_count <= p1_share_count;
           share_count_zero_flag <= (p1_share_count == '0);
         end
       end
     end
 
+    // ------------------------------------------
+    // For each input, maintain a final_packet signal which goes active for the
+    // last packet of a full-share packet sequence.  Example: if I have 4
+    // shares and I'm continuously requesting, final_packet is active in the
+    // 4th packet.
+    // ------------------------------------------
+    wire final_packet_0 = 1'b1;
+
+    wire final_packet_1 = 1'b1;
+
+
+    // ------------------------------------------
+    // Concatenate all final_packet signals (wire or reg) into a handy vector.
+    // ------------------------------------------
+    wire [NUM_INPUTS - 1 : 0] final_packet = {
+    final_packet_1,
+    final_packet_0
+    };
+
+    // ------------------------------------------
+    // ------------------------------------------
+    wire p1_done = |(final_packet & grant);
+
+    // ------------------------------------------
+    // Flag for the first cycle of packets within an 
+    // arb sequence
+    // ------------------------------------------
+    reg first_cycle;
+    always @(posedge clk, posedge reset) begin
+      if (reset)
+        first_cycle <= 0;
+      else
+        first_cycle <= last_cycle && ~p1_done;
+    end
+
 
     always @* begin
       update_grant = 0;
 
         // ------------------------------------------
-        // The pipeline delays grant by one cycle, so
-        // we have to calculate the update_grant signal
-        // one cycle ahead of time.
-        //
-        // Possible optimization: omit the first clause
-        //    "if (!packet_in_progress & ~src_valid) ..."
-        //   cost: one idle cycle at the the beginning of each 
-        //     grant cycle.
-        //   benefit: save a small amount of logic.
+        // No arbitration pipeline, update grant whenever
+        // the current arb winner has consumed all shares,
+        // or all requests are low
         // ------------------------------------------
-    if (!packet_in_progress & !src_valid)
-      update_grant = 1;
-    if (last_cycle && share_count_zero_flag)
-      update_grant = 1;
+  update_grant = (last_cycle && p1_done) || (first_cycle && ~(|valid));
+  update_grant = last_cycle;
     end
 
     wire save_grant;
-    assign save_grant = update_grant;
-    assign grant = saved_grant;
+    assign save_grant = 1;
+    assign grant = next_grant;
 
     always @(posedge clk, posedge reset) begin
       if (reset)
@@ -276,7 +320,7 @@ module hps_fpga_bridge_mm_interconnect_0_cmd_mux
     #(
     .NUM_REQUESTERS(NUM_INPUTS),
     .SCHEME ("round-robin"),
-    .PIPELINE (1)
+    .PIPELINE (0)
     ) arb (
     .clk (clk),
     .reset (reset),
diff --git a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_router.sv b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_router.sv
index b947cc9..53a4d6b 100644
--- a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_router.sv
+++ b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_router.sv
@@ -44,26 +44,26 @@
 
 module hps_fpga_bridge_mm_interconnect_0_router_default_decode
   #(
-     parameter DEFAULT_CHANNEL = 0,
+     parameter DEFAULT_CHANNEL = 2,
                DEFAULT_WR_CHANNEL = -1,
                DEFAULT_RD_CHANNEL = -1,
-               DEFAULT_DESTID = 1 
+               DEFAULT_DESTID = 2 
    )
-  (output [96 - 96 : 0] default_destination_id,
-   output [2-1 : 0] default_wr_channel,
-   output [2-1 : 0] default_rd_channel,
-   output [2-1 : 0] default_src_channel
+  (output [98 - 97 : 0] default_destination_id,
+   output [3-1 : 0] default_wr_channel,
+   output [3-1 : 0] default_rd_channel,
+   output [3-1 : 0] default_src_channel
   );
 
   assign default_destination_id = 
-    DEFAULT_DESTID[96 - 96 : 0];
+    DEFAULT_DESTID[98 - 97 : 0];
 
   generate
     if (DEFAULT_CHANNEL == -1) begin : no_default_channel_assignment
       assign default_src_channel = '0;
     end
     else begin : default_channel_assignment
-      assign default_src_channel = 2'b1 << DEFAULT_CHANNEL;
+      assign default_src_channel = 3'b1 << DEFAULT_CHANNEL;
     end
   endgenerate
 
@@ -73,8 +73,8 @@ module hps_fpga_bridge_mm_interconnect_0_router_default_decode
       assign default_rd_channel = '0;
     end
     else begin : default_rw_channel_assignment
-      assign default_wr_channel = 2'b1 << DEFAULT_WR_CHANNEL;
-      assign default_rd_channel = 2'b1 << DEFAULT_RD_CHANNEL;
+      assign default_wr_channel = 3'b1 << DEFAULT_WR_CHANNEL;
+      assign default_rd_channel = 3'b1 << DEFAULT_RD_CHANNEL;
     end
   endgenerate
 
@@ -93,7 +93,7 @@ module hps_fpga_bridge_mm_interconnect_0_router
     // Command Sink (Input)
     // -------------------
     input                       sink_valid,
-    input  [121-1 : 0]    sink_data,
+    input  [123-1 : 0]    sink_data,
     input                       sink_startofpacket,
     input                       sink_endofpacket,
     output                      sink_ready,
@@ -102,8 +102,8 @@ module hps_fpga_bridge_mm_interconnect_0_router
     // Command Source (Output)
     // -------------------
     output                          src_valid,
-    output reg [121-1    : 0] src_data,
-    output reg [2-1 : 0] src_channel,
+    output reg [123-1    : 0] src_data,
+    output reg [3-1 : 0] src_channel,
     output                          src_startofpacket,
     output                          src_endofpacket,
     input                           src_ready
@@ -114,12 +114,12 @@ module hps_fpga_bridge_mm_interconnect_0_router
     // -------------------------------------------------------
     localparam PKT_ADDR_H = 65;
     localparam PKT_ADDR_L = 36;
-    localparam PKT_DEST_ID_H = 96;
-    localparam PKT_DEST_ID_L = 96;
-    localparam PKT_PROTECTION_H = 111;
-    localparam PKT_PROTECTION_L = 109;
-    localparam ST_DATA_W = 121;
-    localparam ST_CHANNEL_W = 2;
+    localparam PKT_DEST_ID_H = 98;
+    localparam PKT_DEST_ID_L = 97;
+    localparam PKT_PROTECTION_H = 113;
+    localparam PKT_PROTECTION_L = 111;
+    localparam ST_DATA_W = 123;
+    localparam ST_CHANNEL_W = 3;
     localparam DECODER_TYPE = 0;
 
     localparam PKT_TRANS_WRITE = 68;
@@ -136,12 +136,13 @@ module hps_fpga_bridge_mm_interconnect_0_router
     // -------------------------------------------------------
     localparam PAD0 = log2ceil(64'h1000000 - 64'h0); 
     localparam PAD1 = log2ceil(64'h1000001 - 64'h1000000); 
+    localparam PAD2 = log2ceil(64'h1000010 - 64'h1000008); 
     // -------------------------------------------------------
     // Work out which address bits are significant based on the
     // address range of the slaves. If the required width is too
     // large or too small, we use the address field width instead.
     // -------------------------------------------------------
-    localparam ADDR_RANGE = 64'h1000001;
+    localparam ADDR_RANGE = 64'h1000010;
     localparam RANGE_ADDR_WIDTH = log2ceil(ADDR_RANGE);
     localparam OPTIMIZED_ADDR_H = (RANGE_ADDR_WIDTH > PKT_ADDR_W) ||
                                   (RANGE_ADDR_WIDTH == 0) ?
@@ -165,7 +166,7 @@ module hps_fpga_bridge_mm_interconnect_0_router
     assign src_startofpacket = sink_startofpacket;
     assign src_endofpacket   = sink_endofpacket;
     wire [PKT_DEST_ID_W-1:0] default_destid;
-    wire [2-1 : 0] default_src_channel;
+    wire [3-1 : 0] default_src_channel;
 
 
 
@@ -173,6 +174,8 @@ module hps_fpga_bridge_mm_interconnect_0_router
     // -------------------------------------------------------
     // Write and read transaction signals
     // -------------------------------------------------------
+    wire write_transaction;
+    assign write_transaction = sink_data[PKT_TRANS_WRITE];
     wire read_transaction;
     assign read_transaction  = sink_data[PKT_TRANS_READ];
 
@@ -196,16 +199,22 @@ module hps_fpga_bridge_mm_interconnect_0_router
 
     // ( 0x0 .. 0x1000000 )
     if ( {address[RG:PAD0],{PAD0{1'b0}}} == 25'h0   ) begin
-            src_channel = 2'b01;
-            src_data[PKT_DEST_ID_H:PKT_DEST_ID_L] = 1;
+            src_channel = 3'b100;
+            src_data[PKT_DEST_ID_H:PKT_DEST_ID_L] = 2;
     end
 
     // ( 0x1000000 .. 0x1000001 )
     if ( {address[RG:PAD1],{PAD1{1'b0}}} == 25'h1000000  && read_transaction  ) begin
-            src_channel = 2'b10;
+            src_channel = 3'b001;
             src_data[PKT_DEST_ID_H:PKT_DEST_ID_L] = 0;
     end
 
+    // ( 0x1000008 .. 0x1000010 )
+    if ( {address[RG:PAD2],{PAD2{1'b0}}} == 25'h1000008  && write_transaction  ) begin
+            src_channel = 3'b010;
+            src_data[PKT_DEST_ID_H:PKT_DEST_ID_L] = 1;
+    end
+
 end
 
 
diff --git a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_router_002.sv b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_router_002.sv
index 4d852ec..3303c9c 100644
--- a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_router_002.sv
+++ b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_router_002.sv
@@ -49,21 +49,21 @@ module hps_fpga_bridge_mm_interconnect_0_router_002_default_decode
                DEFAULT_RD_CHANNEL = 1,
                DEFAULT_DESTID = 0 
    )
-  (output [78 - 78 : 0] default_destination_id,
-   output [2-1 : 0] default_wr_channel,
-   output [2-1 : 0] default_rd_channel,
-   output [2-1 : 0] default_src_channel
+  (output [71 - 70 : 0] default_destination_id,
+   output [3-1 : 0] default_wr_channel,
+   output [3-1 : 0] default_rd_channel,
+   output [3-1 : 0] default_src_channel
   );
 
   assign default_destination_id = 
-    DEFAULT_DESTID[78 - 78 : 0];
+    DEFAULT_DESTID[71 - 70 : 0];
 
   generate
     if (DEFAULT_CHANNEL == -1) begin : no_default_channel_assignment
       assign default_src_channel = '0;
     end
     else begin : default_channel_assignment
-      assign default_src_channel = 2'b1 << DEFAULT_CHANNEL;
+      assign default_src_channel = 3'b1 << DEFAULT_CHANNEL;
     end
   endgenerate
 
@@ -73,8 +73,8 @@ module hps_fpga_bridge_mm_interconnect_0_router_002_default_decode
       assign default_rd_channel = '0;
     end
     else begin : default_rw_channel_assignment
-      assign default_wr_channel = 2'b1 << DEFAULT_WR_CHANNEL;
-      assign default_rd_channel = 2'b1 << DEFAULT_RD_CHANNEL;
+      assign default_wr_channel = 3'b1 << DEFAULT_WR_CHANNEL;
+      assign default_rd_channel = 3'b1 << DEFAULT_RD_CHANNEL;
     end
   endgenerate
 
@@ -93,7 +93,7 @@ module hps_fpga_bridge_mm_interconnect_0_router_002
     // Command Sink (Input)
     // -------------------
     input                       sink_valid,
-    input  [103-1 : 0]    sink_data,
+    input  [96-1 : 0]    sink_data,
     input                       sink_startofpacket,
     input                       sink_endofpacket,
     output                      sink_ready,
@@ -102,8 +102,8 @@ module hps_fpga_bridge_mm_interconnect_0_router_002
     // Command Source (Output)
     // -------------------
     output                          src_valid,
-    output reg [103-1    : 0] src_data,
-    output reg [2-1 : 0] src_channel,
+    output reg [96-1    : 0] src_data,
+    output reg [3-1 : 0] src_channel,
     output                          src_startofpacket,
     output                          src_endofpacket,
     input                           src_ready
@@ -112,18 +112,18 @@ module hps_fpga_bridge_mm_interconnect_0_router_002
     // -------------------------------------------------------
     // Local parameters and variables
     // -------------------------------------------------------
-    localparam PKT_ADDR_H = 47;
-    localparam PKT_ADDR_L = 18;
-    localparam PKT_DEST_ID_H = 78;
-    localparam PKT_DEST_ID_L = 78;
-    localparam PKT_PROTECTION_H = 93;
-    localparam PKT_PROTECTION_L = 91;
-    localparam ST_DATA_W = 103;
-    localparam ST_CHANNEL_W = 2;
+    localparam PKT_ADDR_H = 38;
+    localparam PKT_ADDR_L = 9;
+    localparam PKT_DEST_ID_H = 71;
+    localparam PKT_DEST_ID_L = 70;
+    localparam PKT_PROTECTION_H = 86;
+    localparam PKT_PROTECTION_L = 84;
+    localparam ST_DATA_W = 96;
+    localparam ST_CHANNEL_W = 3;
     localparam DECODER_TYPE = 1;
 
-    localparam PKT_TRANS_WRITE = 50;
-    localparam PKT_TRANS_READ  = 51;
+    localparam PKT_TRANS_WRITE = 41;
+    localparam PKT_TRANS_READ  = 42;
 
     localparam PKT_ADDR_W = PKT_ADDR_H-PKT_ADDR_L + 1;
     localparam PKT_DEST_ID_W = PKT_DEST_ID_H-PKT_DEST_ID_L + 1;
@@ -158,8 +158,8 @@ module hps_fpga_bridge_mm_interconnect_0_router_002
     assign src_valid         = sink_valid;
     assign src_startofpacket = sink_startofpacket;
     assign src_endofpacket   = sink_endofpacket;
-    wire [2-1 : 0] default_rd_channel;
-    wire [2-1 : 0] default_wr_channel;
+    wire [3-1 : 0] default_rd_channel;
+    wire [3-1 : 0] default_wr_channel;
 
 
 
@@ -193,11 +193,11 @@ module hps_fpga_bridge_mm_interconnect_0_router_002
 
 
         if (destid == 0  && write_transaction) begin
-            src_channel = 2'b01;
+            src_channel = 3'b01;
         end
 
         if (destid == 0  && read_transaction) begin
-            src_channel = 2'b10;
+            src_channel = 3'b10;
         end
 
 
diff --git a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_router_003.sv b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_router_003.sv
index a6abb45..4d517d2 100644
--- a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_router_003.sv
+++ b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_router_003.sv
@@ -49,21 +49,21 @@ module hps_fpga_bridge_mm_interconnect_0_router_003_default_decode
                DEFAULT_RD_CHANNEL = 1,
                DEFAULT_DESTID = 0 
    )
-  (output [69 - 69 : 0] default_destination_id,
-   output [2-1 : 0] default_wr_channel,
-   output [2-1 : 0] default_rd_channel,
-   output [2-1 : 0] default_src_channel
+  (output [98 - 97 : 0] default_destination_id,
+   output [3-1 : 0] default_wr_channel,
+   output [3-1 : 0] default_rd_channel,
+   output [3-1 : 0] default_src_channel
   );
 
   assign default_destination_id = 
-    DEFAULT_DESTID[69 - 69 : 0];
+    DEFAULT_DESTID[98 - 97 : 0];
 
   generate
     if (DEFAULT_CHANNEL == -1) begin : no_default_channel_assignment
       assign default_src_channel = '0;
     end
     else begin : default_channel_assignment
-      assign default_src_channel = 2'b1 << DEFAULT_CHANNEL;
+      assign default_src_channel = 3'b1 << DEFAULT_CHANNEL;
     end
   endgenerate
 
@@ -73,8 +73,8 @@ module hps_fpga_bridge_mm_interconnect_0_router_003_default_decode
       assign default_rd_channel = '0;
     end
     else begin : default_rw_channel_assignment
-      assign default_wr_channel = 2'b1 << DEFAULT_WR_CHANNEL;
-      assign default_rd_channel = 2'b1 << DEFAULT_RD_CHANNEL;
+      assign default_wr_channel = 3'b1 << DEFAULT_WR_CHANNEL;
+      assign default_rd_channel = 3'b1 << DEFAULT_RD_CHANNEL;
     end
   endgenerate
 
@@ -93,7 +93,7 @@ module hps_fpga_bridge_mm_interconnect_0_router_003
     // Command Sink (Input)
     // -------------------
     input                       sink_valid,
-    input  [94-1 : 0]    sink_data,
+    input  [123-1 : 0]    sink_data,
     input                       sink_startofpacket,
     input                       sink_endofpacket,
     output                      sink_ready,
@@ -102,8 +102,8 @@ module hps_fpga_bridge_mm_interconnect_0_router_003
     // Command Source (Output)
     // -------------------
     output                          src_valid,
-    output reg [94-1    : 0] src_data,
-    output reg [2-1 : 0] src_channel,
+    output reg [123-1    : 0] src_data,
+    output reg [3-1 : 0] src_channel,
     output                          src_startofpacket,
     output                          src_endofpacket,
     input                           src_ready
@@ -112,18 +112,18 @@ module hps_fpga_bridge_mm_interconnect_0_router_003
     // -------------------------------------------------------
     // Local parameters and variables
     // -------------------------------------------------------
-    localparam PKT_ADDR_H = 38;
-    localparam PKT_ADDR_L = 9;
-    localparam PKT_DEST_ID_H = 69;
-    localparam PKT_DEST_ID_L = 69;
-    localparam PKT_PROTECTION_H = 84;
-    localparam PKT_PROTECTION_L = 82;
-    localparam ST_DATA_W = 94;
-    localparam ST_CHANNEL_W = 2;
+    localparam PKT_ADDR_H = 65;
+    localparam PKT_ADDR_L = 36;
+    localparam PKT_DEST_ID_H = 98;
+    localparam PKT_DEST_ID_L = 97;
+    localparam PKT_PROTECTION_H = 113;
+    localparam PKT_PROTECTION_L = 111;
+    localparam ST_DATA_W = 123;
+    localparam ST_CHANNEL_W = 3;
     localparam DECODER_TYPE = 1;
 
-    localparam PKT_TRANS_WRITE = 41;
-    localparam PKT_TRANS_READ  = 42;
+    localparam PKT_TRANS_WRITE = 68;
+    localparam PKT_TRANS_READ  = 69;
 
     localparam PKT_ADDR_W = PKT_ADDR_H-PKT_ADDR_L + 1;
     localparam PKT_DEST_ID_W = PKT_DEST_ID_H-PKT_DEST_ID_L + 1;
@@ -158,8 +158,8 @@ module hps_fpga_bridge_mm_interconnect_0_router_003
     assign src_valid         = sink_valid;
     assign src_startofpacket = sink_startofpacket;
     assign src_endofpacket   = sink_endofpacket;
-    wire [2-1 : 0] default_rd_channel;
-    wire [2-1 : 0] default_wr_channel;
+    wire [3-1 : 0] default_rd_channel;
+    wire [3-1 : 0] default_wr_channel;
 
 
 
@@ -193,11 +193,11 @@ module hps_fpga_bridge_mm_interconnect_0_router_003
 
 
         if (destid == 0  && write_transaction) begin
-            src_channel = 2'b01;
+            src_channel = 3'b01;
         end
 
         if (destid == 0  && read_transaction) begin
-            src_channel = 2'b10;
+            src_channel = 3'b10;
         end
 
 
diff --git a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_rsp_demux.sv b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_rsp_demux.sv
index b2f2241..cd3894a 100644
--- a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_rsp_demux.sv
+++ b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_rsp_demux.sv
@@ -28,8 +28,8 @@
 // ------------------------------------------
 // Generation parameters:
 //   output_name:         hps_fpga_bridge_mm_interconnect_0_rsp_demux
-//   ST_DATA_W:           121
-//   ST_CHANNEL_W:        2
+//   ST_DATA_W:           123
+//   ST_CHANNEL_W:        3
 //   NUM_OUTPUTS:         2
 //   VALID_WIDTH:         1
 // ------------------------------------------
@@ -46,8 +46,8 @@ module hps_fpga_bridge_mm_interconnect_0_rsp_demux
     // Sink
     // -------------------
     input  [1-1      : 0]   sink_valid,
-    input  [121-1    : 0]   sink_data, // ST_DATA_W=121
-    input  [2-1 : 0]   sink_channel, // ST_CHANNEL_W=2
+    input  [123-1    : 0]   sink_data, // ST_DATA_W=123
+    input  [3-1 : 0]   sink_channel, // ST_CHANNEL_W=3
     input                         sink_startofpacket,
     input                         sink_endofpacket,
     output                        sink_ready,
@@ -56,15 +56,15 @@ module hps_fpga_bridge_mm_interconnect_0_rsp_demux
     // Sources 
     // -------------------
     output reg                      src0_valid,
-    output reg [121-1    : 0] src0_data, // ST_DATA_W=121
-    output reg [2-1 : 0] src0_channel, // ST_CHANNEL_W=2
+    output reg [123-1    : 0] src0_data, // ST_DATA_W=123
+    output reg [3-1 : 0] src0_channel, // ST_CHANNEL_W=3
     output reg                      src0_startofpacket,
     output reg                      src0_endofpacket,
     input                           src0_ready,
 
     output reg                      src1_valid,
-    output reg [121-1    : 0] src1_data, // ST_DATA_W=121
-    output reg [2-1 : 0] src1_channel, // ST_CHANNEL_W=2
+    output reg [123-1    : 0] src1_data, // ST_DATA_W=123
+    output reg [3-1 : 0] src1_channel, // ST_CHANNEL_W=3
     output reg                      src1_startofpacket,
     output reg                      src1_endofpacket,
     input                           src1_ready,
@@ -109,7 +109,7 @@ module hps_fpga_bridge_mm_interconnect_0_rsp_demux
     assign ready_vector[0] = src0_ready;
     assign ready_vector[1] = src1_ready;
 
-    assign sink_ready = |(sink_channel & ready_vector);
+    assign sink_ready = |(sink_channel & {{1{1'b0}},{ready_vector[NUM_OUTPUTS - 1 : 0]}});
 
 endmodule
 
diff --git a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_rsp_mux.sv b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_rsp_mux.sv
index 513c126..95c206d 100644
--- a/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_rsp_mux.sv
+++ b/sys/hps_fpga_bridge/synthesis/submodules/hps_fpga_bridge_mm_interconnect_0_rsp_mux.sv
@@ -39,13 +39,13 @@
 // ------------------------------------------
 // Generation parameters:
 //   output_name:         hps_fpga_bridge_mm_interconnect_0_rsp_mux
-//   NUM_INPUTS:          2
-//   ARBITRATION_SHARES:  1 1
+//   NUM_INPUTS:          3
+//   ARBITRATION_SHARES:  1 1 1
 //   ARBITRATION_SCHEME   "no-arb"
 //   PIPELINE_ARB:        0
 //   PKT_TRANS_LOCK:      70 (arbitration locking enabled)
-//   ST_DATA_W:           121
-//   ST_CHANNEL_W:        2
+//   ST_DATA_W:           123
+//   ST_CHANNEL_W:        3
 // ------------------------------------------
 
 module hps_fpga_bridge_mm_interconnect_0_rsp_mux
@@ -54,26 +54,33 @@ module hps_fpga_bridge_mm_interconnect_0_rsp_mux
     // Sinks
     // ----------------------
     input                       sink0_valid,
-    input [121-1   : 0]  sink0_data,
-    input [2-1: 0]  sink0_channel,
+    input [123-1   : 0]  sink0_data,
+    input [3-1: 0]  sink0_channel,
     input                       sink0_startofpacket,
     input                       sink0_endofpacket,
     output                      sink0_ready,
 
     input                       sink1_valid,
-    input [121-1   : 0]  sink1_data,
-    input [2-1: 0]  sink1_channel,
+    input [123-1   : 0]  sink1_data,
+    input [3-1: 0]  sink1_channel,
     input                       sink1_startofpacket,
     input                       sink1_endofpacket,
     output                      sink1_ready,
 
+    input                       sink2_valid,
+    input [123-1   : 0]  sink2_data,
+    input [3-1: 0]  sink2_channel,
+    input                       sink2_startofpacket,
+    input                       sink2_endofpacket,
+    output                      sink2_ready,
+
 
     // ----------------------
     // Source
     // ----------------------
     output                      src_valid,
-    output [121-1    : 0] src_data,
-    output [2-1 : 0] src_channel,
+    output [123-1    : 0] src_data,
+    output [3-1 : 0] src_channel,
     output                      src_startofpacket,
     output                      src_endofpacket,
     input                       src_ready,
@@ -84,12 +91,12 @@ module hps_fpga_bridge_mm_interconnect_0_rsp_mux
     input clk,
     input reset
 );
-    localparam PAYLOAD_W        = 121 + 2 + 2;
-    localparam NUM_INPUTS       = 2;
+    localparam PAYLOAD_W        = 123 + 3 + 2;
+    localparam NUM_INPUTS       = 3;
     localparam SHARE_COUNTER_W  = 1;
     localparam PIPELINE_ARB     = 0;
-    localparam ST_DATA_W        = 121;
-    localparam ST_CHANNEL_W     = 2;
+    localparam ST_DATA_W        = 123;
+    localparam ST_CHANNEL_W     = 3;
     localparam PKT_TRANS_LOCK   = 70;
 
     // ------------------------------------------
@@ -107,9 +114,11 @@ module hps_fpga_bridge_mm_interconnect_0_rsp_mux
 
     wire [PAYLOAD_W - 1 : 0] sink0_payload;
     wire [PAYLOAD_W - 1 : 0] sink1_payload;
+    wire [PAYLOAD_W - 1 : 0] sink2_payload;
 
     assign valid[0] = sink0_valid;
     assign valid[1] = sink1_valid;
+    assign valid[2] = sink2_valid;
 
 
     // ------------------------------------------
@@ -121,6 +130,7 @@ module hps_fpga_bridge_mm_interconnect_0_rsp_mux
     always @* begin
       lock[0] = sink0_data[70];
       lock[1] = sink1_data[70];
+      lock[2] = sink2_data[70];
     end
 
     assign last_cycle = src_valid & src_ready & src_endofpacket & ~(|(lock & grant));
@@ -153,8 +163,10 @@ module hps_fpga_bridge_mm_interconnect_0_rsp_mux
     // Input  |  arb shares  |  counter load value
     // 0      |      1       |  0
     // 1      |      1       |  0
+    // 2      |      1       |  0
      wire [SHARE_COUNTER_W - 1 : 0] share_0 = 1'd0;
      wire [SHARE_COUNTER_W - 1 : 0] share_1 = 1'd0;
+     wire [SHARE_COUNTER_W - 1 : 0] share_2 = 1'd0;
 
     // ------------------------------------------
     // Choose the share value corresponding to the grant.
@@ -163,7 +175,8 @@ module hps_fpga_bridge_mm_interconnect_0_rsp_mux
     always @* begin
       next_grant_share =
     share_0 & { SHARE_COUNTER_W {next_grant[0]} } |
-    share_1 & { SHARE_COUNTER_W {next_grant[1]} };
+    share_1 & { SHARE_COUNTER_W {next_grant[1]} } |
+    share_2 & { SHARE_COUNTER_W {next_grant[2]} };
     end
 
     // ------------------------------------------
@@ -229,11 +242,14 @@ module hps_fpga_bridge_mm_interconnect_0_rsp_mux
 
     wire final_packet_1 = 1'b1;
 
+    wire final_packet_2 = 1'b1;
+
 
     // ------------------------------------------
     // Concatenate all final_packet signals (wire or reg) into a handy vector.
     // ------------------------------------------
     wire [NUM_INPUTS - 1 : 0] final_packet = {
+    final_packet_2,
     final_packet_1,
     final_packet_0
     };
@@ -321,13 +337,15 @@ module hps_fpga_bridge_mm_interconnect_0_rsp_mux
 
     assign sink0_ready = src_ready && grant[0];
     assign sink1_ready = src_ready && grant[1];
+    assign sink2_ready = src_ready && grant[2];
 
     assign src_valid = |(grant & valid);
 
     always @* begin
       src_payload =
       sink0_payload & {PAYLOAD_W {grant[0]} } |
-      sink1_payload & {PAYLOAD_W {grant[1]} };
+      sink1_payload & {PAYLOAD_W {grant[1]} } |
+      sink2_payload & {PAYLOAD_W {grant[2]} };
     end
 
     // ------------------------------------------
@@ -338,6 +356,8 @@ module hps_fpga_bridge_mm_interconnect_0_rsp_mux
     sink0_startofpacket,sink0_endofpacket};
     assign sink1_payload = {sink1_channel,sink1_data,
     sink1_startofpacket,sink1_endofpacket};
+    assign sink2_payload = {sink2_channel,sink2_data,
+    sink2_startofpacket,sink2_endofpacket};
 
     assign {src_channel,src_data,src_startofpacket,src_endofpacket} = src_payload;
 endmodule
diff --git a/sys/hps_fpga_bridge/synthesis/submodules/hps_sdram_p0_parameters.tcl b/sys/hps_fpga_bridge/synthesis/submodules/hps_sdram_p0_parameters.tcl
index ecb1fb5..6b0356b 100644
--- a/sys/hps_fpga_bridge/synthesis/submodules/hps_sdram_p0_parameters.tcl
+++ b/sys/hps_fpga_bridge/synthesis/submodules/hps_sdram_p0_parameters.tcl
@@ -12,7 +12,7 @@ set ::GLOBAL_hps_sdram_p0_dqs_group_size 8
 set ::GLOBAL_hps_sdram_p0_number_of_ck_pins 1
 set ::GLOBAL_hps_sdram_p0_number_of_dm_pins 4
 set ::GLOBAL_hps_sdram_p0_dqs_delay_chain_length 0
-set ::GLOBAL_hps_sdram_p0_uniphy_temp_ver_code 1987763796
+set ::GLOBAL_hps_sdram_p0_uniphy_temp_ver_code 715597442
 # PLL Parameters
 
 #USER W A R N I N G !
diff --git a/sys/sys.qip b/sys/sys.qip
index 4d00aa6..390f0ea 100644
--- a/sys/sys.qip
+++ b/sys/sys.qip
@@ -31,4 +31,6 @@ set_global_assignment -name SYSTEMVERILOG_FILE [file join $::quartus(qip_path) d
 set_global_assignment -name SYSTEMVERILOG_FILE [file join $::quartus(qip_path) sysmem.sv ]
 set_global_assignment -name SYSTEMVERILOG_FILE [file join $::quartus(qip_path) sd_card.sv ]
 set_global_assignment -name SYSTEMVERILOG_FILE [file join $::quartus(qip_path) hps_io.sv ]
+set_global_assignment -name QIP_FILE [file join $::quartus(qip_path) fifo_from_hps.qip ]
+set_global_assignment -name QIP_FILE [file join $::quartus(qip_path) fifo_to_hps.qip ]
 set_global_assignment -name QIP_FILE [file join $::quartus(qip_path) hps_fpga_bridge/synthesis/hps_fpga_bridge.qip ]
diff --git a/sys/sys_top.v b/sys/sys_top.v
index 54621c2..5c71481 100644
--- a/sys/sys_top.v
+++ b/sys/sys_top.v
@@ -170,6 +170,9 @@ module sys_top
 		.avalonirq_avalon_irq_n(hybridcpu_irq_n),
 		.avalonirq_avalon_sync_clk(hybridcpu_clk_access),
 		.avalonirq_avalon_reset_n(hybridcpu_rst_n),
+		.avalonregs_avalon_cacr(hybridcpu_cacr),
+		.avalonregs_avalon_sync_clk(hybridcpu_clk_access),
+		.avalonregs_avalon_vbr(hybridcpu_vbr),
 		.avalon1_hybridcpu_sync_clk    (hybridcpu_clk_access),
 		.avalon1_hybridcpu_address     (hybridcpu_address),   
 		.avalon1_hybridcpu_byteenable  (hybridcpu_byteenable),
@@ -177,8 +180,9 @@ module sys_top
 		.avalon1_hybridcpu_readdata    (hybridcpu_readdata),  
 		.avalon1_hybridcpu_write       (hybridcpu_write),     
 		.avalon1_hybridcpu_writedata   (hybridcpu_writedata),
-		.avalon1_hybridcpu_complete   (hybridcpu_complete),
-		.avalon1_hybridcpu_request   (hybridcpu_request)    
+		.avalon1_hybridcpu_complete    (hybridcpu_complete),
+		.avalon1_hybridcpu_request     (hybridcpu_request),
+		.avalon1_hybridcpu_longword    (hybridcpu_longword)
 	);
 `endif	
 
@@ -1635,8 +1639,11 @@ wire [13:0] fb_stride;
 	wire [15:0] hybridcpu_readdata;
 	wire        hybridcpu_complete;
 	wire        hybridcpu_request;
+	wire        hybridcpu_longword;
 	wire        hybridcpu_write;
 	wire [15:0] hybridcpu_writedata;
+	wire [3:0]  hybridcpu_cacr;
+	wire [31:0] hybridcpu_vbr;
 `endif
 
 reg  [1:0] sl_r;
@@ -1769,10 +1776,13 @@ emu emu
 	.hybridcpu_byteenable  (hybridcpu_byteenable),
 	.hybridcpu_read        (hybridcpu_read),     
 	.hybridcpu_readdata    (hybridcpu_readdata),
-	.hybridcpu_complete (hybridcpu_complete),
-	.hybridcpu_request (hybridcpu_request),
+	.hybridcpu_complete    (hybridcpu_complete),
+	.hybridcpu_request     (hybridcpu_request),
 	.hybridcpu_write       (hybridcpu_write),  
 	.hybridcpu_writedata   (hybridcpu_writedata),
+	.hybridcpu_longword    (hybridcpu_longword ),
+	.hybridcpu_cacr        (hybridcpu_cacr),
+	.hybridcpu_vbr         (hybridcpu_vbr),
 `endif
 
 	.USER_OUT(user_out),
-- 
2.25.1

